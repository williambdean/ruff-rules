[
  {
    "Code":"AIR001",
    "Name":"airflow-variable-name-task-id-mismatch",
    "Message":"Task variable name should match the task_id: \"{task_id}\"",
    "Details":null,
    "ParentGroup":"AIR"
  },
  {
    "Code":"AIR002",
    "Name":"airflow-dag-no-schedule-argument",
    "Message":"DAG or @dag should have an explicit schedule argument",
    "Details":null,
    "ParentGroup":"AIR"
  },
  {
    "Code":"AIR301",
    "Name":"airflow3-removal",
    "Message":"{deprecated} is removed in Airflow 3.0",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"AIR"
  },
  {
    "Code":"AIR302",
    "Name":"airflow3-moved-to-provider",
    "Message":"{deprecated} is moved into {provider} provider in Airflow 3.0;",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"AIR"
  },
  {
    "Code":"AIR311",
    "Name":"airflow3-suggested-update",
    "Message":"{deprecated} is removed in Airflow 3.0; It still works in Airflow 3.0 but is expected to be removed in a future version.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"AIR"
  },
  {
    "Code":"AIR312",
    "Name":"airflow3-suggested-to-move-to-provider",
    "Message":"{deprecated} is deprecated and moved into {provider} provider in Airflow 3.0; It still works in Airflow 3.0 but is expected to be removed in a future version.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"AIR"
  },
  {
    "Code":"ERA001",
    "Name":"commented-out-code",
    "Message":"Found commented-out code",
    "Details":null,
    "ParentGroup":"ERA"
  },
  {
    "Code":"FAST001",
    "Name":"fast-api-redundant-response-model",
    "Message":"FastAPI route with redundant response_model argument",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FAST"
  },
  {
    "Code":"FAST002",
    "Name":"fast-api-non-annotated-dependency",
    "Message":"FastAPI dependency without Annotated",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FAST"
  },
  {
    "Code":"FAST003",
    "Name":"fast-api-unused-path-parameter",
    "Message":"Parameter {arg_name} appears in route path, but not in {function_name} signature",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FAST"
  },
  {
    "Code":"YTT101",
    "Name":"sys-version-slice3",
    "Message":"sys.version[:3] referenced (python3.10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT102",
    "Name":"sys-version2",
    "Message":"sys.version[2] referenced (python3.10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT103",
    "Name":"sys-version-cmp-str3",
    "Message":"sys.version compared to string (python3.10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT201",
    "Name":"sys-version-info0-eq3",
    "Message":"sys.version_info[0] == 3 referenced (python4), use >=",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT202",
    "Name":"six-py3",
    "Message":"six.PY3 referenced (python4), use not six.PY2",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT203",
    "Name":"sys-version-info1-cmp-int",
    "Message":"sys.version_info[1] compared to integer (python4), compare sys.version_info to tuple",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT204",
    "Name":"sys-version-info-minor-cmp-int",
    "Message":"sys.version_info.minor compared to integer (python4), compare sys.version_info to tuple",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT301",
    "Name":"sys-version0",
    "Message":"sys.version[0] referenced (python10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT302",
    "Name":"sys-version-cmp-str10",
    "Message":"sys.version compared to string (python10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"YTT303",
    "Name":"sys-version-slice1",
    "Message":"sys.version[:1] referenced (python10), use sys.version_info",
    "Details":null,
    "ParentGroup":"YTT"
  },
  {
    "Code":"ANN001",
    "Name":"missing-type-function-argument",
    "Message":"Missing type annotation for function argument {name}",
    "Details":null,
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN002",
    "Name":"missing-type-args",
    "Message":"Missing type annotation for *{name}",
    "Details":null,
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN003",
    "Name":"missing-type-kwargs",
    "Message":"Missing type annotation for **{name}",
    "Details":null,
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN101",
    "Name":"missing-type-self",
    "Message":"Missing type annotation for {name} in method",
    "Details":"\u274c",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN102",
    "Name":"missing-type-cls",
    "Message":"Missing type annotation for {name} in classmethod",
    "Details":"\u274c",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN201",
    "Name":"missing-return-type-undocumented-public-function",
    "Message":"Missing return type annotation for public function {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN202",
    "Name":"missing-return-type-private-function",
    "Message":"Missing return type annotation for private function {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN204",
    "Name":"missing-return-type-special-method",
    "Message":"Missing return type annotation for special method {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN205",
    "Name":"missing-return-type-static-method",
    "Message":"Missing return type annotation for staticmethod {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN206",
    "Name":"missing-return-type-class-method",
    "Message":"Missing return type annotation for classmethod {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ANN"
  },
  {
    "Code":"ANN401",
    "Name":"any-type",
    "Message":"Dynamically typed expressions (typing.Any) are disallowed in {name}",
    "Details":null,
    "ParentGroup":"ANN"
  },
  {
    "Code":"ASYNC100",
    "Name":"cancel-scope-no-checkpoint",
    "Message":"A with {method_name}(...): context does not contain any await statements. This makes it pointless, as the timeout can only be triggered by a checkpoint.",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC105",
    "Name":"trio-sync-call",
    "Message":"Call to {method_name} is not immediately awaited",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC109",
    "Name":"async-function-with-timeout",
    "Message":"Async function definition with a timeout parameter",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC110",
    "Name":"async-busy-wait",
    "Message":"Use {module}.Event instead of awaiting {module}.sleep in a while loop",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC115",
    "Name":"async-zero-sleep",
    "Message":"Use {module}.lowlevel.checkpoint() instead of {module}.sleep(0)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC116",
    "Name":"long-sleep-not-forever",
    "Message":"{module}.sleep() with >24 hour interval should usually be {module}.sleep_forever()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC210",
    "Name":"blocking-http-call-in-async-function",
    "Message":"Async functions should not call blocking HTTP methods",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC212",
    "Name":"blocking-http-call-httpx-in-async-function",
    "Message":"Blocking httpx method {name}.{call}() in async context, use httpx.AsyncClient",
    "Details":"\ud83e\uddea",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC220",
    "Name":"create-subprocess-in-async-function",
    "Message":"Async functions should not create subprocesses with blocking methods",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC221",
    "Name":"run-process-in-async-function",
    "Message":"Async functions should not run processes with blocking methods",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC222",
    "Name":"wait-for-process-in-async-function",
    "Message":"Async functions should not wait on processes with blocking methods",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC230",
    "Name":"blocking-open-call-in-async-function",
    "Message":"Async functions should not open files with blocking methods like open",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC240",
    "Name":"blocking-path-method-in-async-function",
    "Message":"Async functions should not use {path_library} methods, use trio.Path or anyio.path",
    "Details":"\ud83e\uddea",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC250",
    "Name":"blocking-input-in-async-function",
    "Message":"Blocking call to input() in async context",
    "Details":"\ud83e\uddea",
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"ASYNC251",
    "Name":"blocking-sleep-in-async-function",
    "Message":"Async functions should not call time.sleep",
    "Details":null,
    "ParentGroup":"ASYNC"
  },
  {
    "Code":"S101",
    "Name":"assert",
    "Message":"Use of assert detected",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S102",
    "Name":"exec-builtin",
    "Message":"Use of exec detected",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S103",
    "Name":"bad-file-permissions",
    "Message":"os.chmod setting a permissive mask {mask:#o} on file or directory",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S104",
    "Name":"hardcoded-bind-all-interfaces",
    "Message":"Possible binding to all interfaces",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S105",
    "Name":"hardcoded-password-string",
    "Message":"Possible hardcoded password assigned to: \"{}\"",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S106",
    "Name":"hardcoded-password-func-arg",
    "Message":"Possible hardcoded password assigned to argument: \"{}\"",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S107",
    "Name":"hardcoded-password-default",
    "Message":"Possible hardcoded password assigned to function default: \"{}\"",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S108",
    "Name":"hardcoded-temp-file",
    "Message":"Probable insecure usage of temporary file or directory: \"{}\"",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S110",
    "Name":"try-except-pass",
    "Message":"try-except-pass detected, consider logging the exception",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S112",
    "Name":"try-except-continue",
    "Message":"try-except-continue detected, consider logging the exception",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S113",
    "Name":"request-without-timeout",
    "Message":"Probable use of {module} call without timeout",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S201",
    "Name":"flask-debug-true",
    "Message":"Use of debug=True in Flask app detected",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S202",
    "Name":"tarfile-unsafe-members",
    "Message":"Uses of tarfile.extractall()",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S301",
    "Name":"suspicious-pickle-usage",
    "Message":"pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S302",
    "Name":"suspicious-marshal-usage",
    "Message":"Deserialization with the marshal module is possibly dangerous",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S303",
    "Name":"suspicious-insecure-hash-usage",
    "Message":"Use of insecure MD2, MD4, MD5, or SHA1 hash function",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S304",
    "Name":"suspicious-insecure-cipher-usage",
    "Message":"Use of insecure cipher, replace with a known secure cipher such as AES",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S305",
    "Name":"suspicious-insecure-cipher-mode-usage",
    "Message":"Use of insecure block cipher mode, replace with a known secure mode such as CBC or CTR",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S306",
    "Name":"suspicious-mktemp-usage",
    "Message":"Use of insecure and deprecated function (mktemp)",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S307",
    "Name":"suspicious-eval-usage",
    "Message":"Use of possibly insecure function; consider using ast.literal_eval",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S308",
    "Name":"suspicious-mark-safe-usage",
    "Message":"Use of mark_safe may expose cross-site scripting vulnerabilities",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S310",
    "Name":"suspicious-url-open-usage",
    "Message":"Audit URL open for permitted schemes. Allowing use of file: or custom schemes is often unexpected.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S311",
    "Name":"suspicious-non-cryptographic-random-usage",
    "Message":"Standard pseudo-random generators are not suitable for cryptographic purposes",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S312",
    "Name":"suspicious-telnet-usage",
    "Message":"Telnet is considered insecure. Use SSH or some other encrypted protocol.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S313",
    "Name":"suspicious-xmlc-element-tree-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S314",
    "Name":"suspicious-xml-element-tree-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S315",
    "Name":"suspicious-xml-expat-reader-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S316",
    "Name":"suspicious-xml-expat-builder-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S317",
    "Name":"suspicious-xml-sax-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S318",
    "Name":"suspicious-xml-mini-dom-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S319",
    "Name":"suspicious-xml-pull-dom-usage",
    "Message":"Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S320",
    "Name":"suspicious-xmle-tree-usage",
    "Message":"Using lxml to parse untrusted data is known to be vulnerable to XML attacks",
    "Details":"\u274c",
    "ParentGroup":"S"
  },
  {
    "Code":"S321",
    "Name":"suspicious-ftp-lib-usage",
    "Message":"FTP-related functions are being called. FTP is considered insecure. Use SSH\/SFTP\/SCP or some other encrypted protocol.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S323",
    "Name":"suspicious-unverified-context-usage",
    "Message":"Python allows using an insecure context via the _create_unverified_context that reverts to the previous behavior that does not validate certificates or perform hostname checks.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S324",
    "Name":"hashlib-insecure-hash-function",
    "Message":"Probable use of insecure hash functions in {library}: {string}",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S401",
    "Name":"suspicious-telnetlib-import",
    "Message":"telnetlib and related modules are considered insecure. Use SSH or another encrypted protocol.",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S402",
    "Name":"suspicious-ftplib-import",
    "Message":"ftplib and related modules are considered insecure. Use SSH, SFTP, SCP, or another encrypted protocol.",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S403",
    "Name":"suspicious-pickle-import",
    "Message":"pickle, cPickle, dill, and shelve modules are possibly insecure",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S404",
    "Name":"suspicious-subprocess-import",
    "Message":"subprocess module is possibly insecure",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S405",
    "Name":"suspicious-xml-etree-import",
    "Message":"xml.etree methods are vulnerable to XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S406",
    "Name":"suspicious-xml-sax-import",
    "Message":"xml.sax methods are vulnerable to XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S407",
    "Name":"suspicious-xml-expat-import",
    "Message":"xml.dom.expatbuilder is vulnerable to XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S408",
    "Name":"suspicious-xml-minidom-import",
    "Message":"xml.dom.minidom is vulnerable to XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S409",
    "Name":"suspicious-xml-pulldom-import",
    "Message":"xml.dom.pulldom is vulnerable to XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S410",
    "Name":"suspicious-lxml-import",
    "Message":"lxml is vulnerable to XML attacks",
    "Details":"\u274c",
    "ParentGroup":"S"
  },
  {
    "Code":"S411",
    "Name":"suspicious-xmlrpc-import",
    "Message":"XMLRPC is vulnerable to remote XML attacks",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S412",
    "Name":"suspicious-httpoxy-import",
    "Message":"httpoxy is a set of vulnerabilities that affect application code running inCGI, or CGI-like environments. The use of CGI for web applications should be avoided",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S413",
    "Name":"suspicious-pycrypto-import",
    "Message":"pycrypto library is known to have publicly disclosed buffer overflow vulnerability",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S415",
    "Name":"suspicious-pyghmi-import",
    "Message":"An IPMI-related module is being imported. Prefer an encrypted protocol over IPMI.",
    "Details":"\ud83e\uddea",
    "ParentGroup":"S"
  },
  {
    "Code":"S501",
    "Name":"request-with-no-cert-validation",
    "Message":"Probable use of {string} call with verify=False disabling SSL certificate checks",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S502",
    "Name":"ssl-insecure-version",
    "Message":"Call made with insecure SSL protocol: {protocol}",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S503",
    "Name":"ssl-with-bad-defaults",
    "Message":"Argument default set to insecure SSL protocol: {protocol}",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S504",
    "Name":"ssl-with-no-version",
    "Message":"ssl.wrap_socket called without an `ssl_version``",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S505",
    "Name":"weak-cryptographic-key",
    "Message":"{cryptographic_key} key sizes below {minimum_key_size} bits are considered breakable",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S506",
    "Name":"unsafe-yaml-load",
    "Message":"Probable use of unsafe loader {name} with yaml.load. Allows instantiation of arbitrary objects. Consider yaml.safe_load.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S507",
    "Name":"ssh-no-host-key-verification",
    "Message":"Paramiko call with policy set to automatically trust the unknown host key",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S508",
    "Name":"snmp-insecure-version",
    "Message":"The use of SNMPv1 and SNMPv2 is insecure. Use SNMPv3 if able.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S509",
    "Name":"snmp-weak-cryptography",
    "Message":"You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S601",
    "Name":"paramiko-call",
    "Message":"Possible shell injection via Paramiko call; check inputs are properly sanitized",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S602",
    "Name":"subprocess-popen-with-shell-equals-true",
    "Message":"subprocess call with shell=True seems safe, but may be changed in the future; consider rewriting without shell",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S603",
    "Name":"subprocess-without-shell-equals-true",
    "Message":"subprocess call: check for execution of untrusted input",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S604",
    "Name":"call-with-shell-equals-true",
    "Message":"Function call with shell=True parameter identified, security issue",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S605",
    "Name":"start-process-with-a-shell",
    "Message":"Starting a process with a shell: seems safe, but may be changed in the future; consider rewriting without shell",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S606",
    "Name":"start-process-with-no-shell",
    "Message":"Starting a process without a shell",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S607",
    "Name":"start-process-with-partial-path",
    "Message":"Starting a process with a partial executable path",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S608",
    "Name":"hardcoded-sql-expression",
    "Message":"Possible SQL injection vector through string-based query construction",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S609",
    "Name":"unix-command-wildcard-injection",
    "Message":"Possible wildcard injection in call due to * usage",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S610",
    "Name":"django-extra",
    "Message":"Use of Django extra can lead to SQL injection vulnerabilities",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S611",
    "Name":"django-raw-sql",
    "Message":"Use of RawSQL can lead to SQL injection vulnerabilities",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S612",
    "Name":"logging-config-insecure-listen",
    "Message":"Use of insecure logging.config.listen detected",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S701",
    "Name":"jinja2-autoescape-false",
    "Message":"Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function.",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S702",
    "Name":"mako-templates",
    "Message":"Mako templates allow HTML and JavaScript rendering by default and are inherently open to XSS attacks",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"S704",
    "Name":"unsafe-markup-use",
    "Message":"Unsafe use of {name} detected",
    "Details":null,
    "ParentGroup":"S"
  },
  {
    "Code":"BLE001",
    "Name":"blind-except",
    "Message":"Do not catch blind exception: {name}",
    "Details":null,
    "ParentGroup":"BLE"
  },
  {
    "Code":"FBT001",
    "Name":"boolean-type-hint-positional-argument",
    "Message":"Boolean-typed positional argument in function definition",
    "Details":null,
    "ParentGroup":"FBT"
  },
  {
    "Code":"FBT002",
    "Name":"boolean-default-value-positional-argument",
    "Message":"Boolean default positional argument in function definition",
    "Details":null,
    "ParentGroup":"FBT"
  },
  {
    "Code":"FBT003",
    "Name":"boolean-positional-value-in-call",
    "Message":"Boolean positional value in function call",
    "Details":null,
    "ParentGroup":"FBT"
  },
  {
    "Code":"B002",
    "Name":"unary-prefix-increment-decrement",
    "Message":"Python does not support the unary prefix increment operator (++)",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B003",
    "Name":"assignment-to-os-environ",
    "Message":"Assigning to os.environ doesn't clear the environment",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B004",
    "Name":"unreliable-callable-check",
    "Message":"Using hasattr(x, \"__call__\") to test if x is callable is unreliable. Use callable(x) for consistent results.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B005",
    "Name":"strip-with-multi-characters",
    "Message":"Using .strip() with multi-character strings is misleading",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B006",
    "Name":"mutable-argument-default",
    "Message":"Do not use mutable data structures for argument defaults",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B007",
    "Name":"unused-loop-control-variable",
    "Message":"Loop control variable {name} not used within loop body",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B008",
    "Name":"function-call-in-default-argument",
    "Message":"Do not perform function call {name} in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B009",
    "Name":"get-attr-with-constant",
    "Message":"Do not call getattr with a constant attribute value. It is not any safer than normal property access.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B010",
    "Name":"set-attr-with-constant",
    "Message":"Do not call setattr with a constant attribute value. It is not any safer than normal property access.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B011",
    "Name":"assert-false",
    "Message":"Do not assert False (python -O removes these calls), raise AssertionError()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B012",
    "Name":"jump-statement-in-finally",
    "Message":"{name} inside finally blocks cause exceptions to be silenced",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B013",
    "Name":"redundant-tuple-in-exception-handler",
    "Message":"A length-one tuple literal is redundant in exception handlers",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B014",
    "Name":"duplicate-handler-exception",
    "Message":"Exception handler with duplicate exception: {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B015",
    "Name":"useless-comparison",
    "Message":"Pointless comparison. Did you mean to assign a value? Otherwise, prepend assert or remove it.",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B016",
    "Name":"raise-literal",
    "Message":"Cannot raise a literal. Did you intend to return it or raise an Exception?",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B017",
    "Name":"assert-raises-exception",
    "Message":"Do not assert blind exception: {exception}",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B018",
    "Name":"useless-expression",
    "Message":"Found useless expression. Either assign it to a variable or remove it.",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B019",
    "Name":"cached-instance-method",
    "Message":"Use of functools.lru_cache or functools.cache on methods can lead to memory leaks",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B020",
    "Name":"loop-variable-overrides-iterator",
    "Message":"Loop control variable {name} overrides iterable it iterates",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B021",
    "Name":"f-string-docstring",
    "Message":"f-string used as docstring. Python will interpret this as a joined string, rather than a docstring.",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B022",
    "Name":"useless-contextlib-suppress",
    "Message":"No arguments passed to contextlib.suppress. No exceptions will be suppressed and therefore this context manager is redundant",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B023",
    "Name":"function-uses-loop-variable",
    "Message":"Function definition does not bind loop variable {name}",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B024",
    "Name":"abstract-base-class-without-abstract-method",
    "Message":"{name} is an abstract base class, but it has no abstract methods or properties",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B025",
    "Name":"duplicate-try-block-exception",
    "Message":"try-except* block with duplicate exception {name}",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B026",
    "Name":"star-arg-unpacking-after-keyword-arg",
    "Message":"Star-arg unpacking after a keyword argument is strongly discouraged",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B027",
    "Name":"empty-method-without-abstract-decorator",
    "Message":"{name} is an empty method in an abstract base class, but has no abstract decorator",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B028",
    "Name":"no-explicit-stacklevel",
    "Message":"No explicit stacklevel keyword argument found",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B029",
    "Name":"except-with-empty-tuple",
    "Message":"Using except* (): with an empty tuple does not catch anything; add exceptions to handle",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B030",
    "Name":"except-with-non-exception-classes",
    "Message":"except* handlers should only be exception classes or tuples of exception classes",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B031",
    "Name":"reuse-of-groupby-generator",
    "Message":"Using the generator returned from itertools.groupby() more than once will do nothing on the second usage",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B032",
    "Name":"unintentional-type-annotation",
    "Message":"Possible unintentional type annotation (using :). Did you mean to assign (using =)?",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B033",
    "Name":"duplicate-value",
    "Message":"Sets should not contain duplicate item {value}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B034",
    "Name":"re-sub-positional-args",
    "Message":"{method} should pass {param_name} and flags as keyword arguments to avoid confusion due to unintuitive argument positions",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B035",
    "Name":"static-key-dict-comprehension",
    "Message":"Dictionary comprehension uses static key: {key}",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B039",
    "Name":"mutable-contextvar-default",
    "Message":"Do not use mutable data structures for ContextVar defaults",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B901",
    "Name":"return-in-generator",
    "Message":"Using yield and return {value} in a generator function can lead to confusing behavior",
    "Details":"\ud83e\uddea",
    "ParentGroup":"B"
  },
  {
    "Code":"B903",
    "Name":"class-as-data-structure",
    "Message":"Class could be dataclass or namedtuple",
    "Details":"\ud83e\uddea",
    "ParentGroup":"B"
  },
  {
    "Code":"B904",
    "Name":"raise-without-from-inside-except",
    "Message":"Within an except* clause, raise exceptions with raise ... from err or raise ... from None to distinguish them from errors in exception handling",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B905",
    "Name":"zip-without-explicit-strict",
    "Message":"zip() without an explicit strict= parameter",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"B909",
    "Name":"loop-iterator-mutation",
    "Message":"Mutation to loop iterable {name} during iteration",
    "Details":"\ud83e\uddea",
    "ParentGroup":"B"
  },
  {
    "Code":"B911",
    "Name":"batched-without-explicit-strict",
    "Message":"itertools.batched() without an explicit strict parameter",
    "Details":null,
    "ParentGroup":"B"
  },
  {
    "Code":"B912",
    "Name":"map-without-explicit-strict",
    "Message":"map() without an explicit strict= parameter",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"B"
  },
  {
    "Code":"A001",
    "Name":"builtin-variable-shadowing",
    "Message":"Variable {name} is shadowing a Python builtin",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"A002",
    "Name":"builtin-argument-shadowing",
    "Message":"Function argument {name} is shadowing a Python builtin",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"A003",
    "Name":"builtin-attribute-shadowing",
    "Message":"Python builtin is shadowed by class attribute {name} from {row}",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"A004",
    "Name":"builtin-import-shadowing",
    "Message":"Import {name} is shadowing a Python builtin",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"A005",
    "Name":"stdlib-module-shadowing",
    "Message":"Module {name} shadows a Python standard-library module",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"A006",
    "Name":"builtin-lambda-argument-shadowing",
    "Message":"Lambda argument {name} is shadowing a Python builtin",
    "Details":null,
    "ParentGroup":"A"
  },
  {
    "Code":"COM812",
    "Name":"missing-trailing-comma",
    "Message":"Trailing comma missing",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"COM"
  },
  {
    "Code":"COM818",
    "Name":"trailing-comma-on-bare-tuple",
    "Message":"Trailing comma on bare tuple prohibited",
    "Details":null,
    "ParentGroup":"COM"
  },
  {
    "Code":"COM819",
    "Name":"prohibited-trailing-comma",
    "Message":"Trailing comma prohibited",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"COM"
  },
  {
    "Code":"C400",
    "Name":"unnecessary-generator-list",
    "Message":"Unnecessary generator (rewrite using list())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C401",
    "Name":"unnecessary-generator-set",
    "Message":"Unnecessary generator (rewrite using set())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C402",
    "Name":"unnecessary-generator-dict",
    "Message":"Unnecessary generator (rewrite as a dict comprehension)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C403",
    "Name":"unnecessary-list-comprehension-set",
    "Message":"Unnecessary list comprehension (rewrite as a set comprehension)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C404",
    "Name":"unnecessary-list-comprehension-dict",
    "Message":"Unnecessary list comprehension (rewrite as a dict comprehension)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C405",
    "Name":"unnecessary-literal-set",
    "Message":"Unnecessary {kind} literal (rewrite as a set literal)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C406",
    "Name":"unnecessary-literal-dict",
    "Message":"Unnecessary {obj_type} literal (rewrite as a dict literal)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C408",
    "Name":"unnecessary-collection-call",
    "Message":"Unnecessary {kind}() call (rewrite as a literal)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C409",
    "Name":"unnecessary-literal-within-tuple-call",
    "Message":"Unnecessary list literal passed to tuple() (rewrite as a tuple literal)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C410",
    "Name":"unnecessary-literal-within-list-call",
    "Message":"Unnecessary list literal passed to list() (remove the outer call to list())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C411",
    "Name":"unnecessary-list-call",
    "Message":"Unnecessary list() call (remove the outer call to list())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C413",
    "Name":"unnecessary-call-around-sorted",
    "Message":"Unnecessary {func}() call around sorted()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C414",
    "Name":"unnecessary-double-cast-or-process",
    "Message":"Unnecessary {inner}() call within {outer}()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C415",
    "Name":"unnecessary-subscript-reversal",
    "Message":"Unnecessary subscript reversal of iterable within {func}()",
    "Details":null,
    "ParentGroup":"C"
  },
  {
    "Code":"C416",
    "Name":"unnecessary-comprehension",
    "Message":"Unnecessary {kind} comprehension (rewrite using {kind}())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C417",
    "Name":"unnecessary-map",
    "Message":"Unnecessary map() usage (rewrite using a {object_type})",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C418",
    "Name":"unnecessary-literal-within-dict-call",
    "Message":"Unnecessary dict {kind} passed to dict() (remove the outer call to dict())",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C419",
    "Name":"unnecessary-comprehension-in-call",
    "Message":"Unnecessary list comprehension",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"C420",
    "Name":"unnecessary-dict-comprehension-for-iterable",
    "Message":"Unnecessary dict comprehension for iterable; use dict.fromkeys instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"C"
  },
  {
    "Code":"CPY001",
    "Name":"missing-copyright-notice",
    "Message":"Missing copyright notice at top of file",
    "Details":"\ud83e\uddea",
    "ParentGroup":"CPY"
  },
  {
    "Code":"DTZ001",
    "Name":"call-datetime-without-tzinfo",
    "Message":"datetime.datetime() called without a tzinfo argument",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ002",
    "Name":"call-datetime-today",
    "Message":"datetime.datetime.today() used",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ003",
    "Name":"call-datetime-utcnow",
    "Message":"datetime.datetime.utcnow() used",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ004",
    "Name":"call-datetime-utcfromtimestamp",
    "Message":"datetime.datetime.utcfromtimestamp() used",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ005",
    "Name":"call-datetime-now-without-tzinfo",
    "Message":"datetime.datetime.now() called without a tz argument",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ006",
    "Name":"call-datetime-fromtimestamp",
    "Message":"datetime.datetime.fromtimestamp() called without a tz argument",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ007",
    "Name":"call-datetime-strptime-without-zone",
    "Message":"Naive datetime constructed using datetime.datetime.strptime() without %z",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ011",
    "Name":"call-date-today",
    "Message":"datetime.date.today() used",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ012",
    "Name":"call-date-fromtimestamp",
    "Message":"datetime.date.fromtimestamp() used",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"DTZ901",
    "Name":"datetime-min-max",
    "Message":"Use of datetime.datetime.{min_max} without timezone information",
    "Details":null,
    "ParentGroup":"DTZ"
  },
  {
    "Code":"T100",
    "Name":"debugger",
    "Message":"Trace found: {name} used",
    "Details":null,
    "ParentGroup":"T"
  },
  {
    "Code":"DJ001",
    "Name":"django-nullable-model-string-field",
    "Message":"Avoid using null=True on string-based fields such as {field_name}",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ003",
    "Name":"django-locals-in-render-function",
    "Message":"Avoid passing locals() as context to a render function",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ006",
    "Name":"django-exclude-with-model-form",
    "Message":"Do not use exclude with ModelForm, use fields instead",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ007",
    "Name":"django-all-with-model-form",
    "Message":"Do not use __all__ with ModelForm, use fields instead",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ008",
    "Name":"django-model-without-dunder-str",
    "Message":"Model does not define __str__ method",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ012",
    "Name":"django-unordered-body-content-in-model",
    "Message":"Order of model's inner classes, methods, and fields does not follow the Django Style Guide: {element_type} should come before {prev_element_type}",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"DJ013",
    "Name":"django-non-leading-receiver-decorator",
    "Message":"@receiver decorator must be on top of all the other decorators",
    "Details":null,
    "ParentGroup":"DJ"
  },
  {
    "Code":"EM101",
    "Name":"raw-string-in-exception",
    "Message":"Exception must not use a string literal, assign to variable first",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"EM"
  },
  {
    "Code":"EM102",
    "Name":"f-string-in-exception",
    "Message":"Exception must not use an f-string literal, assign to variable first",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"EM"
  },
  {
    "Code":"EM103",
    "Name":"dot-format-in-exception",
    "Message":"Exception must not use a .format() string directly, assign to variable first",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"EM"
  },
  {
    "Code":"EXE001",
    "Name":"shebang-not-executable",
    "Message":"Shebang is present but file is not executable",
    "Details":null,
    "ParentGroup":"EXE"
  },
  {
    "Code":"EXE002",
    "Name":"shebang-missing-executable-file",
    "Message":"The file is executable but no shebang is present",
    "Details":null,
    "ParentGroup":"EXE"
  },
  {
    "Code":"EXE003",
    "Name":"shebang-missing-python",
    "Message":"Shebang should contain python, pytest, or uv run",
    "Details":null,
    "ParentGroup":"EXE"
  },
  {
    "Code":"EXE004",
    "Name":"shebang-leading-whitespace",
    "Message":"Avoid whitespace before shebang",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"EXE"
  },
  {
    "Code":"EXE005",
    "Name":"shebang-not-first-line",
    "Message":"Shebang should be at the beginning of the file",
    "Details":null,
    "ParentGroup":"EXE"
  },
  {
    "Code":"FIX001",
    "Name":"line-contains-fixme",
    "Message":"Line contains FIXME, consider resolving the issue",
    "Details":null,
    "ParentGroup":"FIX"
  },
  {
    "Code":"FIX002",
    "Name":"line-contains-todo",
    "Message":"Line contains TODO, consider resolving the issue",
    "Details":null,
    "ParentGroup":"FIX"
  },
  {
    "Code":"FIX003",
    "Name":"line-contains-xxx",
    "Message":"Line contains XXX, consider resolving the issue",
    "Details":null,
    "ParentGroup":"FIX"
  },
  {
    "Code":"FIX004",
    "Name":"line-contains-hack",
    "Message":"Line contains HACK, consider resolving the issue",
    "Details":null,
    "ParentGroup":"FIX"
  },
  {
    "Code":"FA100",
    "Name":"future-rewritable-type-annotation",
    "Message":"Add from __future__ import annotations to simplify {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FA"
  },
  {
    "Code":"FA102",
    "Name":"future-required-type-annotation",
    "Message":"Missing from __future__ import annotations, but uses {reason}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FA"
  },
  {
    "Code":"INT001",
    "Name":"f-string-in-get-text-func-call",
    "Message":"f-string is resolved before function call; consider _(\"string %s\") % arg",
    "Details":null,
    "ParentGroup":"INT"
  },
  {
    "Code":"INT002",
    "Name":"format-in-get-text-func-call",
    "Message":"format method argument is resolved before function call; consider _(\"string %s\") % arg",
    "Details":null,
    "ParentGroup":"INT"
  },
  {
    "Code":"INT003",
    "Name":"printf-in-get-text-func-call",
    "Message":"printf-style format is resolved before function call; consider _(\"string %s\") % arg",
    "Details":null,
    "ParentGroup":"INT"
  },
  {
    "Code":"ISC001",
    "Name":"single-line-implicit-string-concatenation",
    "Message":"Implicitly concatenated string literals on one line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ISC"
  },
  {
    "Code":"ISC002",
    "Name":"multi-line-implicit-string-concatenation",
    "Message":"Implicitly concatenated string literals over multiple lines",
    "Details":null,
    "ParentGroup":"ISC"
  },
  {
    "Code":"ISC003",
    "Name":"explicit-string-concatenation",
    "Message":"Explicitly concatenated string should be implicitly concatenated",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ISC"
  },
  {
    "Code":"ICN001",
    "Name":"unconventional-import-alias",
    "Message":"{name} should be imported as {asname}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"ICN"
  },
  {
    "Code":"ICN002",
    "Name":"banned-import-alias",
    "Message":"{name} should not be imported as {asname}",
    "Details":null,
    "ParentGroup":"ICN"
  },
  {
    "Code":"ICN003",
    "Name":"banned-import-from",
    "Message":"Members of {name} should not be imported explicitly",
    "Details":null,
    "ParentGroup":"ICN"
  },
  {
    "Code":"LOG001",
    "Name":"direct-logger-instantiation",
    "Message":"Use logging.getLogger() to instantiate loggers",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG002",
    "Name":"invalid-get-logger-argument",
    "Message":"Use __name__ with logging.getLogger()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG004",
    "Name":"log-exception-outside-except-handler",
    "Message":".exception() call outside exception handlers",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG007",
    "Name":"exception-without-exc-info",
    "Message":"Use of logging.exception with falsy exc_info",
    "Details":null,
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG009",
    "Name":"undocumented-warn",
    "Message":"Use of undocumented logging.WARN constant",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG014",
    "Name":"exc-info-outside-except-handler",
    "Message":"exc_info= outside exception handlers",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"LOG"
  },
  {
    "Code":"LOG015",
    "Name":"root-logger-call",
    "Message":"{}() call on root logger",
    "Details":null,
    "ParentGroup":"LOG"
  },
  {
    "Code":"G001",
    "Name":"logging-string-format",
    "Message":"Logging statement uses str.format",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"G002",
    "Name":"logging-percent-format",
    "Message":"Logging statement uses %",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"G003",
    "Name":"logging-string-concat",
    "Message":"Logging statement uses +",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"G004",
    "Name":"logging-f-string",
    "Message":"Logging statement uses f-string",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"G"
  },
  {
    "Code":"G010",
    "Name":"logging-warn",
    "Message":"Logging statement uses warn instead of warning",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"G"
  },
  {
    "Code":"G101",
    "Name":"logging-extra-attr-clash",
    "Message":"Logging statement uses an extra field that clashes with a LogRecord field: {key}",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"G201",
    "Name":"logging-exc-info",
    "Message":"Logging .exception(...) should be used instead of .error(..., exc_info=True)",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"G202",
    "Name":"logging-redundant-exc-info",
    "Message":"Logging statement has redundant exc_info",
    "Details":null,
    "ParentGroup":"G"
  },
  {
    "Code":"INP001",
    "Name":"implicit-namespace-package",
    "Message":"File {filename} is part of an implicit namespace package. Add an __init__.py.",
    "Details":null,
    "ParentGroup":"INP"
  },
  {
    "Code":"PIE790",
    "Name":"unnecessary-placeholder",
    "Message":"Unnecessary pass statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE794",
    "Name":"duplicate-class-field-definition",
    "Message":"Class field {name} is defined multiple times",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE796",
    "Name":"non-unique-enums",
    "Message":"Enum contains duplicate value: {value}",
    "Details":null,
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE800",
    "Name":"unnecessary-spread",
    "Message":"Unnecessary spread **",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE804",
    "Name":"unnecessary-dict-kwargs",
    "Message":"Unnecessary dict kwargs",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE807",
    "Name":"reimplemented-container-builtin",
    "Message":"Prefer {container} over useless lambda",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE808",
    "Name":"unnecessary-range-start",
    "Message":"Unnecessary start argument in range",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"PIE810",
    "Name":"multiple-starts-ends-with",
    "Message":"Call {attr} once with a tuple",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PIE"
  },
  {
    "Code":"T201",
    "Name":"print",
    "Message":"print found",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"T"
  },
  {
    "Code":"T203",
    "Name":"p-print",
    "Message":"pprint found",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"T"
  },
  {
    "Code":"PYI001",
    "Name":"unprefixed-type-param",
    "Message":"Name of private {kind} must start with _",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI002",
    "Name":"complex-if-statement-in-stub",
    "Message":"if test must be a simple comparison against sys.platform or sys.version_info",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI003",
    "Name":"unrecognized-version-info-check",
    "Message":"Unrecognized sys.version_info check",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI004",
    "Name":"patch-version-comparison",
    "Message":"Version comparison must use only major and minor version",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI005",
    "Name":"wrong-tuple-length-version-comparison",
    "Message":"Version comparison must be against a length-{expected_length} tuple",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI006",
    "Name":"bad-version-info-comparison",
    "Message":"Use < or >= for sys.version_info comparisons",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI007",
    "Name":"unrecognized-platform-check",
    "Message":"Unrecognized sys.platform check",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI008",
    "Name":"unrecognized-platform-name",
    "Message":"Unrecognized platform {platform}",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI009",
    "Name":"pass-statement-stub-body",
    "Message":"Empty body should contain ..., not pass",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI010",
    "Name":"non-empty-stub-body",
    "Message":"Function body must contain only ...",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI011",
    "Name":"typed-argument-default-in-stub",
    "Message":"Only simple default values allowed for typed arguments",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI012",
    "Name":"pass-in-class-body",
    "Message":"Class body must not contain pass",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI013",
    "Name":"ellipsis-in-non-empty-class-body",
    "Message":"Non-empty class body must not contain ...",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI014",
    "Name":"argument-default-in-stub",
    "Message":"Only simple default values allowed for arguments",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI015",
    "Name":"assignment-default-in-stub",
    "Message":"Only simple default values allowed for assignments",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI016",
    "Name":"duplicate-union-member",
    "Message":"Duplicate union member {}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI017",
    "Name":"complex-assignment-in-stub",
    "Message":"Stubs should not contain assignments to attributes or multiple targets",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI018",
    "Name":"unused-private-type-var",
    "Message":"Private {type_var_like_kind} {type_var_like_name} is never used",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI019",
    "Name":"custom-type-var-for-self",
    "Message":"Use Self instead of custom TypeVar {}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI020",
    "Name":"quoted-annotation-in-stub",
    "Message":"Quoted annotations should not be included in stubs",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI021",
    "Name":"docstring-in-stub",
    "Message":"Docstrings should not be included in stubs",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI024",
    "Name":"collections-named-tuple",
    "Message":"Use typing.NamedTuple instead of collections.namedtuple",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI025",
    "Name":"unaliased-collections-abc-set-import",
    "Message":"Use from collections.abc import Set as AbstractSet to avoid confusion with the set builtin",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI026",
    "Name":"type-alias-without-annotation",
    "Message":"Use {module}.TypeAlias for type alias, e.g., {name}: TypeAlias = {value}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI029",
    "Name":"str-or-repr-defined-in-stub",
    "Message":"Defining {name} in a stub is almost always redundant",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI030",
    "Name":"unnecessary-literal-union",
    "Message":"Multiple literal members in a union. Use a single literal, e.g. Literal[{}]",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI032",
    "Name":"any-eq-ne-annotation",
    "Message":"Prefer object to Any for the second parameter to {method_name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI033",
    "Name":"type-comment-in-stub",
    "Message":"Don't use type comments in stub file",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI034",
    "Name":"non-self-return-type",
    "Message":"__new__ methods usually return self at runtime",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI035",
    "Name":"unassigned-special-variable-in-stub",
    "Message":"{name} in a stub file must have a value, as it has the same semantics as {name} at runtime",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI036",
    "Name":"bad-exit-annotation",
    "Message":"Star-args in {method_name} should be annotated with object",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI041",
    "Name":"redundant-numeric-union",
    "Message":"Use {supertype} instead of {subtype} | {supertype}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI042",
    "Name":"snake-case-type-alias",
    "Message":"Type alias {name} should be CamelCase",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI043",
    "Name":"t-suffixed-type-alias",
    "Message":"Private type alias {name} should not be suffixed with T (the T suffix implies that an object is a TypeVar)",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI044",
    "Name":"future-annotations-in-stub",
    "Message":"from __future__ import annotations has no effect in stub files, since type checkers automatically treat stubs as having those semantics",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI045",
    "Name":"iter-method-return-iterable",
    "Message":"__aiter__ methods should return an AsyncIterator, not an AsyncIterable",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI046",
    "Name":"unused-private-protocol",
    "Message":"Private protocol {name} is never used",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI047",
    "Name":"unused-private-type-alias",
    "Message":"Private TypeAlias {name} is never used",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI048",
    "Name":"stub-body-multiple-statements",
    "Message":"Function body must contain exactly one statement",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI049",
    "Name":"unused-private-typed-dict",
    "Message":"Private TypedDict {name} is never used",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI050",
    "Name":"no-return-argument-annotation-in-stub",
    "Message":"Prefer {module}.Never over NoReturn for argument annotations",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI051",
    "Name":"redundant-literal-union",
    "Message":"Literal[{literal}] is redundant in a union with {builtin_type}",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI052",
    "Name":"unannotated-assignment-in-stub",
    "Message":"Need type annotation for {name}",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI053",
    "Name":"string-or-bytes-too-long",
    "Message":"String and bytes literals longer than 50 characters are not permitted",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI054",
    "Name":"numeric-literal-too-long",
    "Message":"Numeric literals with a string representation longer than ten characters are not permitted",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI055",
    "Name":"unnecessary-type-union",
    "Message":"Multiple type members in a union. Combine them into one, e.g., type[{union_str}].",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI056",
    "Name":"unsupported-method-call-on-all",
    "Message":"Calling .{name}() on __all__ may not be supported by all type checkers (use += instead)",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI057",
    "Name":"byte-string-usage",
    "Message":"Do not use {origin}.ByteString, which has unclear semantics and is deprecated",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI058",
    "Name":"generator-return-from-iter-method",
    "Message":"Use {return_type} as the return value for simple {method} methods",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI059",
    "Name":"generic-not-last-base-class",
    "Message":"Generic[] should always be the last base class",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI061",
    "Name":"redundant-none-literal",
    "Message":"Use None rather than Literal[None]",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI062",
    "Name":"duplicate-literal-member",
    "Message":"Duplicate literal member {}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI063",
    "Name":"pep484-style-positional-only-parameter",
    "Message":"Use PEP 570 syntax for positional-only parameters",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI064",
    "Name":"redundant-final-literal",
    "Message":"Final[Literal[{literal}]] can be replaced with a bare Final",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PYI"
  },
  {
    "Code":"PYI066",
    "Name":"bad-version-info-order",
    "Message":"Put branches for newer Python versions first when branching on sys.version_info comparisons",
    "Details":null,
    "ParentGroup":"PYI"
  },
  {
    "Code":"PT001",
    "Name":"pytest-fixture-incorrect-parentheses-style",
    "Message":"Use @pytest.fixture{expected} over @pytest.fixture{actual}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT002",
    "Name":"pytest-fixture-positional-args",
    "Message":"Configuration for fixture {function} specified via positional args, use kwargs",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT003",
    "Name":"pytest-extraneous-scope-function",
    "Message":"scope='function' is implied in @pytest.fixture()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT004",
    "Name":"pytest-missing-fixture-name-underscore",
    "Message":"Fixture {function} does not return anything, add leading underscore",
    "Details":"\u274c",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT005",
    "Name":"pytest-incorrect-fixture-name-underscore",
    "Message":"Fixture {function} returns a value, remove leading underscore",
    "Details":"\u274c",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT006",
    "Name":"pytest-parametrize-names-wrong-type",
    "Message":"Wrong type passed to first argument of pytest.mark.parametrize; expected {expected_string}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT007",
    "Name":"pytest-parametrize-values-wrong-type",
    "Message":"Wrong values type in pytest.mark.parametrize expected {values} of {row}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT008",
    "Name":"pytest-patch-with-lambda",
    "Message":"Use return_value= instead of patching with lambda",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT009",
    "Name":"pytest-unittest-assertion",
    "Message":"Use a regular assert instead of unittest-style {assertion}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT010",
    "Name":"pytest-raises-without-exception",
    "Message":"Set the expected exception in pytest.raises()",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT011",
    "Name":"pytest-raises-too-broad",
    "Message":"pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT012",
    "Name":"pytest-raises-with-multiple-statements",
    "Message":"pytest.raises() block should contain a single simple statement",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT013",
    "Name":"pytest-incorrect-pytest-import",
    "Message":"Incorrect import of pytest; use import pytest instead",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT014",
    "Name":"pytest-duplicate-parametrize-test-cases",
    "Message":"Duplicate of test case at index {index} in pytest.mark.parametrize",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT015",
    "Name":"pytest-assert-always-false",
    "Message":"Assertion always fails, replace with pytest.fail()",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT016",
    "Name":"pytest-fail-without-message",
    "Message":"No message passed to pytest.fail()",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT017",
    "Name":"pytest-assert-in-except",
    "Message":"Found assertion on exception {name} in except block, use pytest.raises() instead",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT018",
    "Name":"pytest-composite-assertion",
    "Message":"Assertion should be broken down into multiple parts",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT019",
    "Name":"pytest-fixture-param-without-value",
    "Message":"Fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT020",
    "Name":"pytest-deprecated-yield-fixture",
    "Message":"@pytest.yield_fixture is deprecated, use @pytest.fixture",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT021",
    "Name":"pytest-fixture-finalizer-callback",
    "Message":"Use yield instead of request.addfinalizer",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT022",
    "Name":"pytest-useless-yield-fixture",
    "Message":"No teardown in fixture {name}, use return instead of yield",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT023",
    "Name":"pytest-incorrect-mark-parentheses-style",
    "Message":"Use @pytest.mark.{mark_name}{expected_parens} over @pytest.mark.{mark_name}{actual_parens}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT024",
    "Name":"pytest-unnecessary-asyncio-mark-on-fixture",
    "Message":"pytest.mark.asyncio is unnecessary for fixtures",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT025",
    "Name":"pytest-erroneous-use-fixtures-on-fixture",
    "Message":"pytest.mark.usefixtures has no effect on fixtures",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT026",
    "Name":"pytest-use-fixtures-without-parameters",
    "Message":"Useless pytest.mark.usefixtures without parameters",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT027",
    "Name":"pytest-unittest-raises-assertion",
    "Message":"Use pytest.raises instead of unittest-style {assertion}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT028",
    "Name":"pytest-parameter-with-default-argument",
    "Message":"Test function parameter {} has default argument",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT029",
    "Name":"pytest-warns-without-warning",
    "Message":"Set the expected warning in pytest.warns()",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PT"
  },
  {
    "Code":"PT030",
    "Name":"pytest-warns-too-broad",
    "Message":"pytest.warns({warning}) is too broad, set the match parameter or use a more specific warning",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"PT031",
    "Name":"pytest-warns-with-multiple-statements",
    "Message":"pytest.warns() block should contain a single simple statement",
    "Details":null,
    "ParentGroup":"PT"
  },
  {
    "Code":"Q000",
    "Name":"bad-quotes-inline-string",
    "Message":"Single quotes found but double quotes preferred",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"Q"
  },
  {
    "Code":"Q001",
    "Name":"bad-quotes-multiline-string",
    "Message":"Single quote multiline found but double quotes preferred",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"Q"
  },
  {
    "Code":"Q002",
    "Name":"bad-quotes-docstring",
    "Message":"Single quote docstring found but double quotes preferred",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"Q"
  },
  {
    "Code":"Q003",
    "Name":"avoidable-escaped-quote",
    "Message":"Change outer quotes to avoid escaping inner quotes",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"Q"
  },
  {
    "Code":"Q004",
    "Name":"unnecessary-escaped-quote",
    "Message":"Unnecessary escape on inner quote character",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"Q"
  },
  {
    "Code":"RSE102",
    "Name":"unnecessary-paren-on-raise-exception",
    "Message":"Unnecessary parentheses on raised exception",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RSE"
  },
  {
    "Code":"RET501",
    "Name":"unnecessary-return-none",
    "Message":"Do not explicitly return None in function if it is the only possible return value",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET502",
    "Name":"implicit-return-value",
    "Message":"Do not implicitly return None in function able to return non-None value",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET503",
    "Name":"implicit-return",
    "Message":"Missing explicit return at the end of function able to return non-None value",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET504",
    "Name":"unnecessary-assign",
    "Message":"Unnecessary assignment to {name} before return statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET505",
    "Name":"superfluous-else-return",
    "Message":"Unnecessary {branch} after return statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET506",
    "Name":"superfluous-else-raise",
    "Message":"Unnecessary {branch} after raise statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET507",
    "Name":"superfluous-else-continue",
    "Message":"Unnecessary {branch} after continue statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"RET508",
    "Name":"superfluous-else-break",
    "Message":"Unnecessary {branch} after break statement",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RET"
  },
  {
    "Code":"SLF001",
    "Name":"private-member-access",
    "Message":"Private member accessed: {access}",
    "Details":null,
    "ParentGroup":"SLF"
  },
  {
    "Code":"SIM101",
    "Name":"duplicate-isinstance-call",
    "Message":"Multiple isinstance calls for {name}, merge into a single call",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM102",
    "Name":"collapsible-if",
    "Message":"Use a single if statement instead of nested if statements",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM103",
    "Name":"needless-bool",
    "Message":"Return the condition {condition} directly",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM105",
    "Name":"suppressible-exception",
    "Message":"Use contextlib.suppress({exception}) instead of try-except-pass",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM107",
    "Name":"return-in-try-except-finally",
    "Message":"Don't use return in try-except and finally",
    "Details":null,
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM108",
    "Name":"if-else-block-instead-of-if-exp",
    "Message":"Use ternary operator {contents} instead of if-else-block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM109",
    "Name":"compare-with-tuple",
    "Message":"Use {replacement} instead of multiple equality comparisons",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM110",
    "Name":"reimplemented-builtin",
    "Message":"Use {replacement} instead of for loop",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM112",
    "Name":"uncapitalized-environment-variables",
    "Message":"Use capitalized environment variable {expected} instead of {actual}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM113",
    "Name":"enumerate-for-loop",
    "Message":"Use enumerate() for index variable {index} in for loop",
    "Details":null,
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM114",
    "Name":"if-with-same-arms",
    "Message":"Combine if branches using logical or operator",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM115",
    "Name":"open-file-with-context-handler",
    "Message":"Use a context manager for opening files",
    "Details":null,
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM116",
    "Name":"if-else-block-instead-of-dict-lookup",
    "Message":"Use a dictionary instead of consecutive if statements",
    "Details":null,
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM117",
    "Name":"multiple-with-statements",
    "Message":"Use a single with statement with multiple contexts instead of nested with statements",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM118",
    "Name":"in-dict-keys",
    "Message":"Use key {operator} dict instead of key {operator} dict.keys()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM201",
    "Name":"negate-equal-op",
    "Message":"Use {left} != {right} instead of not {left} == {right}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM202",
    "Name":"negate-not-equal-op",
    "Message":"Use {left} == {right} instead of not {left} != {right}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM208",
    "Name":"double-negation",
    "Message":"Use {expr} instead of not (not {expr})",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM210",
    "Name":"if-expr-with-true-false",
    "Message":"Remove unnecessary True if ... else False",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM211",
    "Name":"if-expr-with-false-true",
    "Message":"Use not ... instead of False if ... else True",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM212",
    "Name":"if-expr-with-twisted-arms",
    "Message":"Use {expr_else} if {expr_else} else {expr_body} instead of {expr_body} if not {expr_else} else {expr_else}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM220",
    "Name":"expr-and-not-expr",
    "Message":"Use False instead of {name} and not {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM221",
    "Name":"expr-or-not-expr",
    "Message":"Use True instead of {name} or not {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM222",
    "Name":"expr-or-true",
    "Message":"Use {expr} instead of {replaced}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM223",
    "Name":"expr-and-false",
    "Message":"Use {expr} instead of {replaced}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM300",
    "Name":"yoda-conditions",
    "Message":"Yoda condition detected",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM401",
    "Name":"if-else-block-instead-of-dict-get",
    "Message":"Use {contents} instead of an if block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM905",
    "Name":"split-static-string",
    "Message":"Consider using a list literal instead of str.{}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM910",
    "Name":"dict-get-with-none-default",
    "Message":"Use {expected} instead of {actual}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SIM911",
    "Name":"zip-dict-keys-and-values",
    "Message":"Use {expected} instead of {actual}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"SIM"
  },
  {
    "Code":"SLOT000",
    "Name":"no-slots-in-str-subclass",
    "Message":"Subclasses of str should define __slots__",
    "Details":null,
    "ParentGroup":"SLOT"
  },
  {
    "Code":"SLOT001",
    "Name":"no-slots-in-tuple-subclass",
    "Message":"Subclasses of tuple should define __slots__",
    "Details":null,
    "ParentGroup":"SLOT"
  },
  {
    "Code":"SLOT002",
    "Name":"no-slots-in-namedtuple-subclass",
    "Message":"Subclasses of {namedtuple_kind} should define __slots__",
    "Details":null,
    "ParentGroup":"SLOT"
  },
  {
    "Code":"TID251",
    "Name":"banned-api",
    "Message":"{name} is banned: {message}",
    "Details":null,
    "ParentGroup":"TID"
  },
  {
    "Code":"TID252",
    "Name":"relative-imports",
    "Message":"Prefer absolute imports over relative imports from parent modules",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TID"
  },
  {
    "Code":"TID253",
    "Name":"banned-module-level-imports",
    "Message":"{name} is banned at the module level",
    "Details":null,
    "ParentGroup":"TID"
  },
  {
    "Code":"TD001",
    "Name":"invalid-todo-tag",
    "Message":"Invalid TODO tag: {tag}",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TD002",
    "Name":"missing-todo-author",
    "Message":"Missing author in TODO; try: # TODO(<author_name>): ... or # TODO @<author_name>: ...",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TD003",
    "Name":"missing-todo-link",
    "Message":"Missing issue link for this TODO",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TD004",
    "Name":"missing-todo-colon",
    "Message":"Missing colon in TODO",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TD005",
    "Name":"missing-todo-description",
    "Message":"Missing issue description after TODO",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TD006",
    "Name":"invalid-todo-capitalization",
    "Message":"Invalid TODO capitalization: {tag} should be TODO",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TD"
  },
  {
    "Code":"TD007",
    "Name":"missing-space-after-todo-colon",
    "Message":"Missing space after colon in TODO",
    "Details":null,
    "ParentGroup":"TD"
  },
  {
    "Code":"TC001",
    "Name":"typing-only-first-party-import",
    "Message":"Move application import {} into a type-checking block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC002",
    "Name":"typing-only-third-party-import",
    "Message":"Move third-party import {} into a type-checking block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC003",
    "Name":"typing-only-standard-library-import",
    "Message":"Move standard library import {} into a type-checking block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC004",
    "Name":"runtime-import-in-type-checking-block",
    "Message":"Move import {qualified_name} out of type-checking block. Import is used for more than type hinting.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC005",
    "Name":"empty-type-checking-block",
    "Message":"Found empty type-checking block",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC006",
    "Name":"runtime-cast-value",
    "Message":"Add quotes to type expression in typing.cast()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC007",
    "Name":"unquoted-type-alias",
    "Message":"Add quotes to type alias",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC008",
    "Name":"quoted-type-alias",
    "Message":"Remove quotes from type alias",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"TC"
  },
  {
    "Code":"TC010",
    "Name":"runtime-string-union",
    "Message":"Invalid string member in X | Y-style union type",
    "Details":null,
    "ParentGroup":"TC"
  },
  {
    "Code":"ARG001",
    "Name":"unused-function-argument",
    "Message":"Unused function argument: {name}",
    "Details":null,
    "ParentGroup":"ARG"
  },
  {
    "Code":"ARG002",
    "Name":"unused-method-argument",
    "Message":"Unused method argument: {name}",
    "Details":null,
    "ParentGroup":"ARG"
  },
  {
    "Code":"ARG003",
    "Name":"unused-class-method-argument",
    "Message":"Unused class method argument: {name}",
    "Details":null,
    "ParentGroup":"ARG"
  },
  {
    "Code":"ARG004",
    "Name":"unused-static-method-argument",
    "Message":"Unused static method argument: {name}",
    "Details":null,
    "ParentGroup":"ARG"
  },
  {
    "Code":"ARG005",
    "Name":"unused-lambda-argument",
    "Message":"Unused lambda argument: {name}",
    "Details":null,
    "ParentGroup":"ARG"
  },
  {
    "Code":"PTH100",
    "Name":"os-path-abspath",
    "Message":"os.path.abspath() should be replaced by Path.resolve()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH101",
    "Name":"os-chmod",
    "Message":"os.chmod() should be replaced by Path.chmod()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH102",
    "Name":"os-mkdir",
    "Message":"os.mkdir() should be replaced by Path.mkdir()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH103",
    "Name":"os-makedirs",
    "Message":"os.makedirs() should be replaced by Path.mkdir(parents=True)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH104",
    "Name":"os-rename",
    "Message":"os.rename() should be replaced by Path.rename()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH105",
    "Name":"os-replace",
    "Message":"os.replace() should be replaced by Path.replace()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH106",
    "Name":"os-rmdir",
    "Message":"os.rmdir() should be replaced by Path.rmdir()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH107",
    "Name":"os-remove",
    "Message":"os.remove() should be replaced by Path.unlink()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH108",
    "Name":"os-unlink",
    "Message":"os.unlink() should be replaced by Path.unlink()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH109",
    "Name":"os-getcwd",
    "Message":"os.getcwd() should be replaced by Path.cwd()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH110",
    "Name":"os-path-exists",
    "Message":"os.path.exists() should be replaced by Path.exists()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH111",
    "Name":"os-path-expanduser",
    "Message":"os.path.expanduser() should be replaced by Path.expanduser()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH112",
    "Name":"os-path-isdir",
    "Message":"os.path.isdir() should be replaced by Path.is_dir()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH113",
    "Name":"os-path-isfile",
    "Message":"os.path.isfile() should be replaced by Path.is_file()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH114",
    "Name":"os-path-islink",
    "Message":"os.path.islink() should be replaced by Path.is_symlink()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH115",
    "Name":"os-readlink",
    "Message":"os.readlink() should be replaced by Path.readlink()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH116",
    "Name":"os-stat",
    "Message":"os.stat() should be replaced by Path.stat(), Path.owner(), or Path.group()",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH117",
    "Name":"os-path-isabs",
    "Message":"os.path.isabs() should be replaced by Path.is_absolute()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH118",
    "Name":"os-path-join",
    "Message":"os.{module}.join() should be replaced by Path with \/ operator",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH119",
    "Name":"os-path-basename",
    "Message":"os.path.basename() should be replaced by Path.name",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH120",
    "Name":"os-path-dirname",
    "Message":"os.path.dirname() should be replaced by Path.parent",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH121",
    "Name":"os-path-samefile",
    "Message":"os.path.samefile() should be replaced by Path.samefile()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH122",
    "Name":"os-path-splitext",
    "Message":"os.path.splitext() should be replaced by Path.suffix, Path.stem, and Path.parent",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH123",
    "Name":"builtin-open",
    "Message":"open() should be replaced by Path.open()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH124",
    "Name":"py-path",
    "Message":"py.path is in maintenance mode, use pathlib instead",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH201",
    "Name":"path-constructor-current-directory",
    "Message":"Do not pass the current directory explicitly to Path",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH202",
    "Name":"os-path-getsize",
    "Message":"os.path.getsize should be replaced by Path.stat().st_size",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH203",
    "Name":"os-path-getatime",
    "Message":"os.path.getatime should be replaced by Path.stat().st_atime",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH204",
    "Name":"os-path-getmtime",
    "Message":"os.path.getmtime should be replaced by Path.stat().st_mtime",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH205",
    "Name":"os-path-getctime",
    "Message":"os.path.getctime should be replaced by Path.stat().st_ctime",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH206",
    "Name":"os-sep-split",
    "Message":"Replace .split(os.sep) with Path.parts",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH207",
    "Name":"glob",
    "Message":"Replace {function} with Path.glob or Path.rglob",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH208",
    "Name":"os-listdir",
    "Message":"Use pathlib.Path.iterdir() instead.",
    "Details":null,
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH210",
    "Name":"invalid-pathlib-with-suffix",
    "Message":"Invalid suffix passed to .with_suffix()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"PTH211",
    "Name":"os-symlink",
    "Message":"os.symlink should be replaced by Path.symlink_to",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PTH"
  },
  {
    "Code":"FLY002",
    "Name":"static-join-to-f-string",
    "Message":"Consider {expression} instead of string join",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FLY"
  },
  {
    "Code":"I001",
    "Name":"unsorted-imports",
    "Message":"Import block is un-sorted or un-formatted",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"I"
  },
  {
    "Code":"I002",
    "Name":"missing-required-import",
    "Message":"Missing required import: {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"I"
  },
  {
    "Code":"C901",
    "Name":"complex-structure",
    "Message":"{name} is too complex ({complexity} > {max_complexity})",
    "Details":null,
    "ParentGroup":"C"
  },
  {
    "Code":"NPY001",
    "Name":"numpy-deprecated-type-alias",
    "Message":"Type alias np.{type_name} is deprecated, replace with builtin type",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"NPY"
  },
  {
    "Code":"NPY002",
    "Name":"numpy-legacy-random",
    "Message":"Replace legacy np.random.{method_name} call with np.random.Generator",
    "Details":null,
    "ParentGroup":"NPY"
  },
  {
    "Code":"NPY003",
    "Name":"numpy-deprecated-function",
    "Message":"np.{existing} is deprecated; use np.{replacement} instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"NPY"
  },
  {
    "Code":"NPY201",
    "Name":"numpy2-deprecation",
    "Message":"np.{existing} will be removed in NumPy 2.0. {migration_guide}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"NPY"
  },
  {
    "Code":"PD002",
    "Name":"pandas-use-of-inplace-argument",
    "Message":"inplace=True should be avoided; it has inconsistent behavior",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PD"
  },
  {
    "Code":"PD003",
    "Name":"pandas-use-of-dot-is-null",
    "Message":".isna is preferred to .isnull; functionality is equivalent",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD004",
    "Name":"pandas-use-of-dot-not-null",
    "Message":".notna is preferred to .notnull; functionality is equivalent",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD007",
    "Name":"pandas-use-of-dot-ix",
    "Message":".ix is deprecated; use more explicit .loc or .iloc",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD008",
    "Name":"pandas-use-of-dot-at",
    "Message":"Use .loc instead of .at. If speed is important, use NumPy.",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD009",
    "Name":"pandas-use-of-dot-iat",
    "Message":"Use .iloc instead of .iat. If speed is important, use NumPy.",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD010",
    "Name":"pandas-use-of-dot-pivot-or-unstack",
    "Message":".pivot_table is preferred to .pivot or .unstack; provides same functionality",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD011",
    "Name":"pandas-use-of-dot-values",
    "Message":"Use .to_numpy() instead of .values",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD012",
    "Name":"pandas-use-of-dot-read-table",
    "Message":"Use .read_csv instead of .read_table to read CSV files",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD013",
    "Name":"pandas-use-of-dot-stack",
    "Message":".melt is preferred to .stack; provides same functionality",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD015",
    "Name":"pandas-use-of-pd-merge",
    "Message":"Use .merge method instead of pd.merge function. They have equivalent functionality.",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD101",
    "Name":"pandas-nunique-constant-series-check",
    "Message":"Using series.nunique() for checking that a series is constant is inefficient",
    "Details":null,
    "ParentGroup":"PD"
  },
  {
    "Code":"PD901",
    "Name":"pandas-df-variable-name",
    "Message":"Avoid using the generic variable name df for DataFrames",
    "Details":"\u274c",
    "ParentGroup":"PD"
  },
  {
    "Code":"N801",
    "Name":"invalid-class-name",
    "Message":"Class name {name} should use CapWords convention",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N802",
    "Name":"invalid-function-name",
    "Message":"Function name {name} should be lowercase",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N803",
    "Name":"invalid-argument-name",
    "Message":"Argument name {name} should be lowercase",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N804",
    "Name":"invalid-first-argument-name-for-class-method",
    "Message":"First argument of a class method should be named cls",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"N"
  },
  {
    "Code":"N805",
    "Name":"invalid-first-argument-name-for-method",
    "Message":"First argument of a method should be named self",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"N"
  },
  {
    "Code":"N806",
    "Name":"non-lowercase-variable-in-function",
    "Message":"Variable {name} in function should be lowercase",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N807",
    "Name":"dunder-function-name",
    "Message":"Function name should not start and end with __",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N811",
    "Name":"constant-imported-as-non-constant",
    "Message":"Constant {name} imported as non-constant {asname}",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N812",
    "Name":"lowercase-imported-as-non-lowercase",
    "Message":"Lowercase {name} imported as non-lowercase {asname}",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N813",
    "Name":"camelcase-imported-as-lowercase",
    "Message":"Camelcase {name} imported as lowercase {asname}",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N814",
    "Name":"camelcase-imported-as-constant",
    "Message":"Camelcase {name} imported as constant {asname}",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N815",
    "Name":"mixed-case-variable-in-class-scope",
    "Message":"Variable {name} in class scope should not be mixedCase",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N816",
    "Name":"mixed-case-variable-in-global-scope",
    "Message":"Variable {name} in global scope should not be mixedCase",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N817",
    "Name":"camelcase-imported-as-acronym",
    "Message":"CamelCase {name} imported as acronym {asname}",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N818",
    "Name":"error-suffix-on-exception-name",
    "Message":"Exception name {name} should be named with an Error suffix",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"N999",
    "Name":"invalid-module-name",
    "Message":"Invalid module name: '{name}'",
    "Details":null,
    "ParentGroup":"N"
  },
  {
    "Code":"PERF101",
    "Name":"unnecessary-list-cast",
    "Message":"Do not cast an iterable to list before iterating over it",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PERF"
  },
  {
    "Code":"PERF102",
    "Name":"incorrect-dict-iterator",
    "Message":"When using only the {subset} of a dict use the {subset}() method",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PERF"
  },
  {
    "Code":"PERF203",
    "Name":"try-except-in-loop",
    "Message":"try-except within a loop incurs performance overhead",
    "Details":null,
    "ParentGroup":"PERF"
  },
  {
    "Code":"PERF401",
    "Name":"manual-list-comprehension",
    "Message":"Use {message_str} to create a transformed list",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PERF"
  },
  {
    "Code":"PERF402",
    "Name":"manual-list-copy",
    "Message":"Use list or list.copy to create a copy of a list",
    "Details":null,
    "ParentGroup":"PERF"
  },
  {
    "Code":"PERF403",
    "Name":"manual-dict-comprehension",
    "Message":"Use a dictionary comprehension instead of {modifier} for-loop",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PERF"
  },
  {
    "Code":"E101",
    "Name":"mixed-spaces-and-tabs",
    "Message":"Indentation contains mixed spaces and tabs",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E111",
    "Name":"indentation-with-invalid-multiple",
    "Message":"Indentation is not a multiple of {indent_width}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E112",
    "Name":"no-indented-block",
    "Message":"Expected an indented block",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E113",
    "Name":"unexpected-indentation",
    "Message":"Unexpected indentation",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E114",
    "Name":"indentation-with-invalid-multiple-comment",
    "Message":"Indentation is not a multiple of {indent_width} (comment)",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E115",
    "Name":"no-indented-block-comment",
    "Message":"Expected an indented block (comment)",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E116",
    "Name":"unexpected-indentation-comment",
    "Message":"Unexpected indentation (comment)",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E117",
    "Name":"over-indented",
    "Message":"Over-indented (comment)",
    "Details":"\ud83e\uddea",
    "ParentGroup":"E"
  },
  {
    "Code":"E201",
    "Name":"whitespace-after-open-bracket",
    "Message":"Whitespace after '{symbol}'",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E202",
    "Name":"whitespace-before-close-bracket",
    "Message":"Whitespace before '{symbol}'",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E203",
    "Name":"whitespace-before-punctuation",
    "Message":"Whitespace before '{symbol}'",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E204",
    "Name":"whitespace-after-decorator",
    "Message":"Whitespace after decorator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E211",
    "Name":"whitespace-before-parameters",
    "Message":"Whitespace before '{bracket}'",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E221",
    "Name":"multiple-spaces-before-operator",
    "Message":"Multiple spaces before operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E222",
    "Name":"multiple-spaces-after-operator",
    "Message":"Multiple spaces after operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E223",
    "Name":"tab-before-operator",
    "Message":"Tab before operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E224",
    "Name":"tab-after-operator",
    "Message":"Tab after operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E225",
    "Name":"missing-whitespace-around-operator",
    "Message":"Missing whitespace around operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E226",
    "Name":"missing-whitespace-around-arithmetic-operator",
    "Message":"Missing whitespace around arithmetic operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E227",
    "Name":"missing-whitespace-around-bitwise-or-shift-operator",
    "Message":"Missing whitespace around bitwise or shift operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E228",
    "Name":"missing-whitespace-around-modulo-operator",
    "Message":"Missing whitespace around modulo operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E231",
    "Name":"missing-whitespace",
    "Message":"Missing whitespace after {}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E241",
    "Name":"multiple-spaces-after-comma",
    "Message":"Multiple spaces after comma",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E242",
    "Name":"tab-after-comma",
    "Message":"Tab after comma",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E251",
    "Name":"unexpected-spaces-around-keyword-parameter-equals",
    "Message":"Unexpected spaces around keyword \/ parameter equals",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E252",
    "Name":"missing-whitespace-around-parameter-equals",
    "Message":"Missing whitespace around parameter equals",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E261",
    "Name":"too-few-spaces-before-inline-comment",
    "Message":"Insert at least two spaces before an inline comment",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E262",
    "Name":"no-space-after-inline-comment",
    "Message":"Inline comment should start with #",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E265",
    "Name":"no-space-after-block-comment",
    "Message":"Block comment should start with #",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E266",
    "Name":"multiple-leading-hashes-for-block-comment",
    "Message":"Too many leading # before block comment",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E271",
    "Name":"multiple-spaces-after-keyword",
    "Message":"Multiple spaces after keyword",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E272",
    "Name":"multiple-spaces-before-keyword",
    "Message":"Multiple spaces before keyword",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E273",
    "Name":"tab-after-keyword",
    "Message":"Tab after keyword",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E274",
    "Name":"tab-before-keyword",
    "Message":"Tab before keyword",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E275",
    "Name":"missing-whitespace-after-keyword",
    "Message":"Missing whitespace after keyword",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E301",
    "Name":"blank-line-between-methods",
    "Message":"Expected {BLANK_LINES_NESTED_LEVEL:?} blank line, found 0",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E302",
    "Name":"blank-lines-top-level",
    "Message":"Expected {expected_blank_lines:?} blank lines, found {actual_blank_lines}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E303",
    "Name":"too-many-blank-lines",
    "Message":"Too many blank lines ({actual_blank_lines})",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E304",
    "Name":"blank-line-after-decorator",
    "Message":"Blank lines found after function decorator ({lines})",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E305",
    "Name":"blank-lines-after-function-or-class",
    "Message":"Expected 2 blank lines after class or function definition, found ({blank_lines})",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E306",
    "Name":"blank-lines-before-nested-definition",
    "Message":"Expected 1 blank line before a nested definition, found 0",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E401",
    "Name":"multiple-imports-on-one-line",
    "Message":"Multiple imports on one line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E402",
    "Name":"module-import-not-at-top-of-file",
    "Message":"Module level import not at top of cell",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E501",
    "Name":"line-too-long",
    "Message":"Line too long ({width} > {limit})",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E502",
    "Name":"redundant-backslash",
    "Message":"Redundant backslash",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E701",
    "Name":"multiple-statements-on-one-line-colon",
    "Message":"Multiple statements on one line (colon)",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E702",
    "Name":"multiple-statements-on-one-line-semicolon",
    "Message":"Multiple statements on one line (semicolon)",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E703",
    "Name":"useless-semicolon",
    "Message":"Statement ends with an unnecessary semicolon",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E711",
    "Name":"none-comparison",
    "Message":"Comparison to None should be cond is None",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E712",
    "Name":"true-false-comparison",
    "Message":"Avoid equality comparisons to True; use {cond}: for truth checks",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E713",
    "Name":"not-in-test",
    "Message":"Test for membership should be not in",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E714",
    "Name":"not-is-test",
    "Message":"Test for object identity should be is not",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E721",
    "Name":"type-comparison",
    "Message":"Use is and is not for type comparisons, or isinstance() for isinstance checks",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E722",
    "Name":"bare-except",
    "Message":"Do not use bare except",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E731",
    "Name":"lambda-assignment",
    "Message":"Do not assign a lambda expression, use a def",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"E"
  },
  {
    "Code":"E741",
    "Name":"ambiguous-variable-name",
    "Message":"Ambiguous variable name: {name}",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E742",
    "Name":"ambiguous-class-name",
    "Message":"Ambiguous class name: {name}",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E743",
    "Name":"ambiguous-function-name",
    "Message":"Ambiguous function name: {name}",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E902",
    "Name":"io-error",
    "Message":"{message}",
    "Details":null,
    "ParentGroup":"E"
  },
  {
    "Code":"E999",
    "Name":"syntax-error",
    "Message":"SyntaxError",
    "Details":"\u274c",
    "ParentGroup":"E"
  },
  {
    "Code":"W191",
    "Name":"tab-indentation",
    "Message":"Indentation contains tabs",
    "Details":null,
    "ParentGroup":"W"
  },
  {
    "Code":"W291",
    "Name":"trailing-whitespace",
    "Message":"Trailing whitespace",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"W"
  },
  {
    "Code":"W292",
    "Name":"missing-newline-at-end-of-file",
    "Message":"No newline at end of file",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"W"
  },
  {
    "Code":"W293",
    "Name":"blank-line-with-whitespace",
    "Message":"Blank line contains whitespace",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"W"
  },
  {
    "Code":"W391",
    "Name":"too-many-newlines-at-end-of-file",
    "Message":"Too many newlines at end of {domain}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"W"
  },
  {
    "Code":"W505",
    "Name":"doc-line-too-long",
    "Message":"Doc line too long ({width} > {limit})",
    "Details":null,
    "ParentGroup":"W"
  },
  {
    "Code":"W605",
    "Name":"invalid-escape-sequence",
    "Message":"Invalid escape sequence: \\{ch}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"W"
  },
  {
    "Code":"DOC201",
    "Name":"docstring-missing-returns",
    "Message":"return is not documented in docstring",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"DOC202",
    "Name":"docstring-extraneous-returns",
    "Message":"Docstring should not have a returns section because the function doesn't return anything",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"DOC402",
    "Name":"docstring-missing-yields",
    "Message":"yield is not documented in docstring",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"DOC403",
    "Name":"docstring-extraneous-yields",
    "Message":"Docstring has a \"Yields\" section but the function doesn't yield anything",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"DOC501",
    "Name":"docstring-missing-exception",
    "Message":"Raised exception {id} missing from docstring",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"DOC502",
    "Name":"docstring-extraneous-exception",
    "Message":"Raised exception is not explicitly raised: {id}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"DOC"
  },
  {
    "Code":"D100",
    "Name":"undocumented-public-module",
    "Message":"Missing docstring in public module",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D101",
    "Name":"undocumented-public-class",
    "Message":"Missing docstring in public class",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D102",
    "Name":"undocumented-public-method",
    "Message":"Missing docstring in public method",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D103",
    "Name":"undocumented-public-function",
    "Message":"Missing docstring in public function",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D104",
    "Name":"undocumented-public-package",
    "Message":"Missing docstring in public package",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D105",
    "Name":"undocumented-magic-method",
    "Message":"Missing docstring in magic method",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D106",
    "Name":"undocumented-public-nested-class",
    "Message":"Missing docstring in public nested class",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D107",
    "Name":"undocumented-public-init",
    "Message":"Missing docstring in __init__",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D200",
    "Name":"unnecessary-multiline-docstring",
    "Message":"One-line docstring should fit on one line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D201",
    "Name":"blank-line-before-function",
    "Message":"No blank lines allowed before function docstring (found {num_lines})",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D202",
    "Name":"blank-line-after-function",
    "Message":"No blank lines allowed after function docstring (found {num_lines})",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D203",
    "Name":"incorrect-blank-line-before-class",
    "Message":"1 blank line required before class docstring",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D204",
    "Name":"incorrect-blank-line-after-class",
    "Message":"1 blank line required after class docstring",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D205",
    "Name":"missing-blank-line-after-summary",
    "Message":"1 blank line required between summary line and description",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D206",
    "Name":"docstring-tab-indentation",
    "Message":"Docstring should be indented with spaces, not tabs",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D207",
    "Name":"under-indentation",
    "Message":"Docstring is under-indented",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D208",
    "Name":"over-indentation",
    "Message":"Docstring is over-indented",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D209",
    "Name":"new-line-after-last-paragraph",
    "Message":"Multi-line docstring closing quotes should be on a separate line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D210",
    "Name":"surrounding-whitespace",
    "Message":"No whitespaces allowed surrounding docstring text",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D211",
    "Name":"blank-line-before-class",
    "Message":"No blank lines allowed before class docstring",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D212",
    "Name":"multi-line-summary-first-line",
    "Message":"Multi-line docstring summary should start at the first line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D213",
    "Name":"multi-line-summary-second-line",
    "Message":"Multi-line docstring summary should start at the second line",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D214",
    "Name":"overindented-section",
    "Message":"Section is over-indented (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D215",
    "Name":"overindented-section-underline",
    "Message":"Section underline is over-indented (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D300",
    "Name":"triple-single-quotes",
    "Message":"Use triple double quotes \"\"\"",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D301",
    "Name":"escape-sequence-in-docstring",
    "Message":"Use r\"\"\" if any backslashes in a docstring",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D400",
    "Name":"missing-trailing-period",
    "Message":"First line should end with a period",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D401",
    "Name":"non-imperative-mood",
    "Message":"First line of docstring should be in imperative mood: \"{first_line}\"",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D402",
    "Name":"signature-in-docstring",
    "Message":"First line should not be the function's signature",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D403",
    "Name":"first-word-uncapitalized",
    "Message":"First word of the docstring should be capitalized: {} -> {}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D404",
    "Name":"docstring-starts-with-this",
    "Message":"First word of the docstring should not be \"This\"",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D405",
    "Name":"non-capitalized-section-name",
    "Message":"Section name should be properly capitalized (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D406",
    "Name":"missing-new-line-after-section-name",
    "Message":"Section name should end with a newline (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D407",
    "Name":"missing-dashed-underline-after-section",
    "Message":"Missing dashed underline after section (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D408",
    "Name":"missing-section-underline-after-name",
    "Message":"Section underline should be in the line following the section's name (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D409",
    "Name":"mismatched-section-underline-length",
    "Message":"Section underline should match the length of its name (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D410",
    "Name":"no-blank-line-after-section",
    "Message":"Missing blank line after section (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D411",
    "Name":"no-blank-line-before-section",
    "Message":"Missing blank line before section (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D412",
    "Name":"blank-lines-between-header-and-content",
    "Message":"No blank lines allowed between a section header and its content (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D413",
    "Name":"missing-blank-line-after-last-section",
    "Message":"Missing blank line after last section (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D414",
    "Name":"empty-docstring-section",
    "Message":"Section has no content (\"{name}\")",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D415",
    "Name":"missing-terminal-punctuation",
    "Message":"First line should end with a period, question mark, or exclamation point",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D416",
    "Name":"missing-section-name-colon",
    "Message":"Section name should end with a colon (\"{name}\")",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"D"
  },
  {
    "Code":"D417",
    "Name":"undocumented-param",
    "Message":"Missing argument description in the docstring for {definition}: {name}",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D418",
    "Name":"overload-with-docstring",
    "Message":"Function decorated with @overload shouldn't contain a docstring",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"D419",
    "Name":"empty-docstring",
    "Message":"Docstring is empty",
    "Details":null,
    "ParentGroup":"D"
  },
  {
    "Code":"F401",
    "Name":"unused-import",
    "Message":"{name} imported but unused; consider using importlib.util.find_spec to test for availability",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F402",
    "Name":"import-shadowed-by-loop-var",
    "Message":"Import {name} from {row} shadowed by loop variable",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F403",
    "Name":"undefined-local-with-import-star",
    "Message":"from {name} import * used; unable to detect undefined names",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F404",
    "Name":"late-future-import",
    "Message":"from __future__ imports must occur at the beginning of the file",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F405",
    "Name":"undefined-local-with-import-star-usage",
    "Message":"{name} may be undefined, or defined from star imports",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F406",
    "Name":"undefined-local-with-nested-import-star-usage",
    "Message":"from {name} import * only allowed at module level",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F407",
    "Name":"future-feature-not-defined",
    "Message":"Future feature {name} is not defined",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F501",
    "Name":"percent-format-invalid-format",
    "Message":"%-format string has invalid format string: {message}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F502",
    "Name":"percent-format-expected-mapping",
    "Message":"%-format string expected mapping but got sequence",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F503",
    "Name":"percent-format-expected-sequence",
    "Message":"%-format string expected sequence but got mapping",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F504",
    "Name":"percent-format-extra-named-arguments",
    "Message":"%-format string has unused named argument(s): {message}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F505",
    "Name":"percent-format-missing-argument",
    "Message":"%-format string is missing argument(s) for placeholder(s): {message}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F506",
    "Name":"percent-format-mixed-positional-and-named",
    "Message":"%-format string has mixed positional and named placeholders",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F507",
    "Name":"percent-format-positional-count-mismatch",
    "Message":"%-format string has {wanted} placeholder(s) but {got} substitution(s)",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F508",
    "Name":"percent-format-star-requires-sequence",
    "Message":"%-format string * specifier requires sequence",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F509",
    "Name":"percent-format-unsupported-format-character",
    "Message":"%-format string has unsupported format character {char}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F521",
    "Name":"string-dot-format-invalid-format",
    "Message":".format call has invalid format string: {message}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F522",
    "Name":"string-dot-format-extra-named-arguments",
    "Message":".format call has unused named argument(s): {message}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F523",
    "Name":"string-dot-format-extra-positional-arguments",
    "Message":".format call has unused arguments at position(s): {message}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F524",
    "Name":"string-dot-format-missing-arguments",
    "Message":".format call is missing argument(s) for placeholder(s): {message}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F525",
    "Name":"string-dot-format-mixing-automatic",
    "Message":".format string mixes automatic and manual numbering",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F541",
    "Name":"f-string-missing-placeholders",
    "Message":"f-string without any placeholders",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F601",
    "Name":"multi-value-repeated-key-literal",
    "Message":"Dictionary key literal {name} repeated",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F602",
    "Name":"multi-value-repeated-key-variable",
    "Message":"Dictionary key {name} repeated",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F621",
    "Name":"expressions-in-star-assignment",
    "Message":"Too many expressions in star-unpacking assignment",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F622",
    "Name":"multiple-starred-expressions",
    "Message":"Two starred expressions in assignment",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F631",
    "Name":"assert-tuple",
    "Message":"Assert test is a non-empty tuple, which is always True",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F632",
    "Name":"is-literal",
    "Message":"Use == to compare constant literals",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F633",
    "Name":"invalid-print-syntax",
    "Message":"Use of >> is invalid with print function",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F634",
    "Name":"if-tuple",
    "Message":"If test is a tuple, which is always True",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F701",
    "Name":"break-outside-loop",
    "Message":"break outside loop",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F702",
    "Name":"continue-outside-loop",
    "Message":"continue not properly in loop",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F704",
    "Name":"yield-outside-function",
    "Message":"{keyword} statement outside of a function",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F706",
    "Name":"return-outside-function",
    "Message":"return statement outside of a function\/method",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F707",
    "Name":"default-except-not-last",
    "Message":"An except block as not the last exception handler",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F722",
    "Name":"forward-annotation-syntax-error",
    "Message":"Syntax error in forward annotation: {parse_error}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F811",
    "Name":"redefined-while-unused",
    "Message":"Redefinition of unused {name} from {row}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F821",
    "Name":"undefined-name",
    "Message":"Undefined name {name}. {tip}",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F822",
    "Name":"undefined-export",
    "Message":"Undefined name {name} in __all__",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F823",
    "Name":"undefined-local",
    "Message":"Local variable {name} referenced before assignment",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F841",
    "Name":"unused-variable",
    "Message":"Local variable {name} is assigned to but never used",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"F842",
    "Name":"unused-annotation",
    "Message":"Local variable {name} is annotated but never used",
    "Details":null,
    "ParentGroup":"F"
  },
  {
    "Code":"F901",
    "Name":"raise-not-implemented",
    "Message":"raise NotImplemented should be raise NotImplementedError",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"F"
  },
  {
    "Code":"PGH001",
    "Name":"eval",
    "Message":"No builtin eval() allowed",
    "Details":"\u274c",
    "ParentGroup":"PGH"
  },
  {
    "Code":"PGH002",
    "Name":"deprecated-log-warn",
    "Message":"warn is deprecated in favor of warning",
    "Details":"\u274c\ud83d\udee0\ufe0f",
    "ParentGroup":"PGH"
  },
  {
    "Code":"PGH003",
    "Name":"blanket-type-ignore",
    "Message":"Use specific rule codes when ignoring type issues",
    "Details":null,
    "ParentGroup":"PGH"
  },
  {
    "Code":"PGH004",
    "Name":"blanket-noqa",
    "Message":"Use specific rule codes when using noqa",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PGH"
  },
  {
    "Code":"PGH005",
    "Name":"invalid-mock-access",
    "Message":"Mock method should be called: {name}",
    "Details":null,
    "ParentGroup":"PGH"
  },
  {
    "Code":"PLC0105",
    "Name":"type-name-incorrect-variance",
    "Message":"{kind} name \"{param_name}\" does not reflect its {variance}; consider renaming it to \"{replacement_name}\"",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0131",
    "Name":"type-bivariance",
    "Message":"{kind} cannot be both covariant and contravariant",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0132",
    "Name":"type-param-name-mismatch",
    "Message":"{kind} name {param_name} does not match assigned variable name {var_name}",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0205",
    "Name":"single-string-slots",
    "Message":"Class __slots__ should be a non-string iterable",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0206",
    "Name":"dict-index-missing-items",
    "Message":"Extracting value from dictionary without calling .items()",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0207",
    "Name":"missing-maxsplit-arg",
    "Message":"Replace with {suggested_split_type}(..., maxsplit=1).",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0208",
    "Name":"iteration-over-set",
    "Message":"Use a sequence type instead of a set when iterating over values",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0414",
    "Name":"useless-import-alias",
    "Message":"Import alias does not rename original package",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC0415",
    "Name":"import-outside-top-level",
    "Message":"import should be at the top-level of a file",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC1802",
    "Name":"len-test",
    "Message":"len({expression}) used as condition without comparison",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC1901",
    "Name":"compare-to-empty-string",
    "Message":"{existing} can be simplified to {replacement} as an empty string is falsey",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC2401",
    "Name":"non-ascii-name",
    "Message":"{kind} name {name} contains a non-ASCII character",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC2403",
    "Name":"non-ascii-import-name",
    "Message":"Module alias {name} contains a non-ASCII character",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC2701",
    "Name":"import-private-name",
    "Message":"Private name import {name} from external module {module}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC2801",
    "Name":"unnecessary-dunder-call",
    "Message":"Unnecessary dunder call to {method}. {replacement}.",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLC3002",
    "Name":"unnecessary-direct-lambda-call",
    "Message":"Lambda expression called directly. Execute the expression inline instead.",
    "Details":null,
    "ParentGroup":"PLC"
  },
  {
    "Code":"PLE0100",
    "Name":"yield-in-init",
    "Message":"__init__ method is a generator",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0101",
    "Name":"return-in-init",
    "Message":"Explicit return in __init__",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0115",
    "Name":"nonlocal-and-global",
    "Message":"Name {name} is both nonlocal and global",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0116",
    "Name":"continue-in-finally",
    "Message":"continue not supported inside finally clause",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0117",
    "Name":"nonlocal-without-binding",
    "Message":"Nonlocal name {name} found without binding",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0118",
    "Name":"load-before-global-declaration",
    "Message":"Name {name} is used prior to global declaration on {row}",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0237",
    "Name":"non-slot-assignment",
    "Message":"Attribute {name} is not defined in class's __slots__",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0241",
    "Name":"duplicate-bases",
    "Message":"Duplicate base {base} for class {class}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0302",
    "Name":"unexpected-special-method-signature",
    "Message":"The special method {} expects {}, {} {} given",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0303",
    "Name":"invalid-length-return-type",
    "Message":"__len__ does not return a non-negative integer",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0304",
    "Name":"invalid-bool-return-type",
    "Message":"__bool__ does not return bool",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0305",
    "Name":"invalid-index-return-type",
    "Message":"__index__ does not return an integer",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0307",
    "Name":"invalid-str-return-type",
    "Message":"__str__ does not return str",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0308",
    "Name":"invalid-bytes-return-type",
    "Message":"__bytes__ does not return bytes",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0309",
    "Name":"invalid-hash-return-type",
    "Message":"__hash__ does not return an integer",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0604",
    "Name":"invalid-all-object",
    "Message":"Invalid object in __all__, must contain only strings",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0605",
    "Name":"invalid-all-format",
    "Message":"Invalid format for __all__, must be tuple or list",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0643",
    "Name":"potential-index-error",
    "Message":"Expression is likely to raise IndexError",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE0704",
    "Name":"misplaced-bare-raise",
    "Message":"Bare raise statement is not inside an exception handler",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1132",
    "Name":"repeated-keyword-argument",
    "Message":"Repeated keyword argument: {duplicate_keyword}",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1141",
    "Name":"dict-iter-missing-items",
    "Message":"Unpacking a dictionary in iteration without calling .items()",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1142",
    "Name":"await-outside-async",
    "Message":"await should be used within an async function",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1205",
    "Name":"logging-too-many-args",
    "Message":"Too many arguments for logging format string",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1206",
    "Name":"logging-too-few-args",
    "Message":"Not enough arguments for logging format string",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1300",
    "Name":"bad-string-format-character",
    "Message":"Unsupported format character '{format_char}'",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1307",
    "Name":"bad-string-format-type",
    "Message":"Format type does not match argument type",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1310",
    "Name":"bad-str-strip-call",
    "Message":"String {strip} call contains duplicate characters (did you mean {removal}?)",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1507",
    "Name":"invalid-envvar-value",
    "Message":"Invalid type for initial os.getenv argument; expected str",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1519",
    "Name":"singledispatch-method",
    "Message":"@singledispatch decorator should not be used on methods",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1520",
    "Name":"singledispatchmethod-function",
    "Message":"@singledispatchmethod decorator should not be used on non-method functions",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE1700",
    "Name":"yield-from-in-async-function",
    "Message":"yield from statement in async function; use async for instead",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2502",
    "Name":"bidirectional-unicode",
    "Message":"Contains control characters that can permit obfuscated code",
    "Details":null,
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2510",
    "Name":"invalid-character-backspace",
    "Message":"Invalid unescaped character backspace, use \"\\b\" instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2512",
    "Name":"invalid-character-sub",
    "Message":"Invalid unescaped character SUB, use \"\\x1a\" instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2513",
    "Name":"invalid-character-esc",
    "Message":"Invalid unescaped character ESC, use \"\\x1b\" instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2514",
    "Name":"invalid-character-nul",
    "Message":"Invalid unescaped character NUL, use \"\\0\" instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE2515",
    "Name":"invalid-character-zero-width-space",
    "Message":"Invalid unescaped character zero-width-space, use \"\\u200B\" instead",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLE4703",
    "Name":"modified-iterating-set",
    "Message":"Iterated set {name} is modified within the for loop",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLE"
  },
  {
    "Code":"PLR0124",
    "Name":"comparison-with-itself",
    "Message":"Name compared with itself, consider replacing {actual}",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0133",
    "Name":"comparison-of-constant",
    "Message":"Two constants compared in a comparison, consider replacing {left_constant} {op} {right_constant}",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0202",
    "Name":"no-classmethod-decorator",
    "Message":"Class method defined without decorator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0203",
    "Name":"no-staticmethod-decorator",
    "Message":"Static method defined without decorator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0206",
    "Name":"property-with-parameters",
    "Message":"Cannot have defined parameters for properties",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0402",
    "Name":"manual-from-import",
    "Message":"Use from {module} import {name} in lieu of alias",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0904",
    "Name":"too-many-public-methods",
    "Message":"Too many public methods ({methods} > {max_methods})",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0911",
    "Name":"too-many-return-statements",
    "Message":"Too many return statements ({returns} > {max_returns})",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0912",
    "Name":"too-many-branches",
    "Message":"Too many branches ({branches} > {max_branches})",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0913",
    "Name":"too-many-arguments",
    "Message":"Too many arguments in function definition ({c_args} > {max_args})",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0914",
    "Name":"too-many-locals",
    "Message":"Too many local variables ({current_amount}\/{max_amount})",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0915",
    "Name":"too-many-statements",
    "Message":"Too many statements ({statements} > {max_statements})",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0916",
    "Name":"too-many-boolean-expressions",
    "Message":"Too many Boolean expressions ({expressions} > {max_expressions})",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR0917",
    "Name":"too-many-positional-arguments",
    "Message":"Too many positional arguments ({c_pos}\/{max_pos})",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1701",
    "Name":"repeated-isinstance-calls",
    "Message":"Merge isinstance calls: {expression}",
    "Details":"\u274c\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1702",
    "Name":"too-many-nested-blocks",
    "Message":"Too many nested blocks ({nested_blocks} > {max_nested_blocks})",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1704",
    "Name":"redefined-argument-from-local",
    "Message":"Redefining argument with the local name {name}",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1706",
    "Name":"and-or-ternary",
    "Message":"Consider using if-else expression",
    "Details":"\u274c",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1711",
    "Name":"useless-return",
    "Message":"Useless return statement at end of function",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1714",
    "Name":"repeated-equality-comparison",
    "Message":"Consider merging multiple comparisons: {expression}. Use a set if the elements are hashable.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1716",
    "Name":"boolean-chained-comparison",
    "Message":"Contains chained boolean comparison that can be simplified",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1722",
    "Name":"sys-exit-alias",
    "Message":"Use sys.exit() instead of {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1730",
    "Name":"if-stmt-min-max",
    "Message":"Replace if statement with {replacement}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1733",
    "Name":"unnecessary-dict-index-lookup",
    "Message":"Unnecessary lookup of dictionary value by key",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR1736",
    "Name":"unnecessary-list-index-lookup",
    "Message":"List index lookup in enumerate() loop",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR2004",
    "Name":"magic-value-comparison",
    "Message":"Magic value used in comparison, consider replacing {value} with a constant variable",
    "Details":null,
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR2044",
    "Name":"empty-comment",
    "Message":"Line with empty comment",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR5501",
    "Name":"collapsible-else-if",
    "Message":"Use elif instead of else then if, to reduce indentation",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR6104",
    "Name":"non-augmented-assignment",
    "Message":"Use {operator} to perform an augmented assignment directly",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR6201",
    "Name":"literal-membership",
    "Message":"Use a set literal when testing for membership",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLR6301",
    "Name":"no-self-use",
    "Message":"Method {method_name} could be a function, class method, or static method",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLR"
  },
  {
    "Code":"PLW0108",
    "Name":"unnecessary-lambda",
    "Message":"Lambda may be unnecessary; consider inlining inner function",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0120",
    "Name":"useless-else-on-loop",
    "Message":"else clause on loop without a break statement; remove the else and dedent its contents",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0127",
    "Name":"self-assigning-variable",
    "Message":"Self-assignment of variable {name}",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0128",
    "Name":"redeclared-assigned-name",
    "Message":"Redeclared variable {name} in assignment",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0129",
    "Name":"assert-on-string-literal",
    "Message":"Asserting on an empty string literal will never pass",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0131",
    "Name":"named-expr-without-context",
    "Message":"Named expression used without context",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0133",
    "Name":"useless-exception-statement",
    "Message":"Missing raise statement on exception",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0177",
    "Name":"nan-comparison",
    "Message":"Comparing against a NaN value; use math.isnan instead",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0211",
    "Name":"bad-staticmethod-argument",
    "Message":"First argument of a static method should not be named {argument_name}",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0244",
    "Name":"redefined-slots-in-subclass",
    "Message":"Slot {slot_name} redefined from base class {base}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0245",
    "Name":"super-without-brackets",
    "Message":"super call is missing parentheses",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0406",
    "Name":"import-self",
    "Message":"Module {name} imports itself",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0602",
    "Name":"global-variable-not-assigned",
    "Message":"Using global for {name} but no assignment is done",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0603",
    "Name":"global-statement",
    "Message":"Using the global statement to update {name} is discouraged",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0604",
    "Name":"global-at-module-level",
    "Message":"global at module level is redundant",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0642",
    "Name":"self-or-cls-assignment",
    "Message":"Reassigned {} variable in {method_type} method",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW0711",
    "Name":"binary-op-exception",
    "Message":"Exception to catch is the result of a binary and operation",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1501",
    "Name":"bad-open-mode",
    "Message":"{mode} is not a valid mode for open",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1507",
    "Name":"shallow-copy-environ",
    "Message":"Shallow copy of os.environ via copy.copy(os.environ)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1508",
    "Name":"invalid-envvar-default",
    "Message":"Invalid type for environment variable default; expected str or None",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1509",
    "Name":"subprocess-popen-preexec-fn",
    "Message":"preexec_fn argument is unsafe when using threads",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1510",
    "Name":"subprocess-run-without-check",
    "Message":"subprocess.run without explicit check argument",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1514",
    "Name":"unspecified-encoding",
    "Message":"{function_name} in text mode without explicit encoding argument",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW1641",
    "Name":"eq-without-hash",
    "Message":"Object does not implement __hash__ method",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW2101",
    "Name":"useless-with-lock",
    "Message":"Threading lock directly created in with statement has no effect",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW2901",
    "Name":"redefined-loop-name",
    "Message":"Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target",
    "Details":null,
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW3201",
    "Name":"bad-dunder-method-name",
    "Message":"Dunder method {name} has no special meaning in Python 3",
    "Details":"\ud83e\uddea",
    "ParentGroup":"PLW"
  },
  {
    "Code":"PLW3301",
    "Name":"nested-min-max",
    "Message":"Nested {func} calls can be flattened",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"PLW"
  },
  {
    "Code":"UP001",
    "Name":"useless-metaclass-type",
    "Message":"__metaclass__ = type is implied",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP003",
    "Name":"type-of-primitive",
    "Message":"Use {} instead of type(...)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP004",
    "Name":"useless-object-inheritance",
    "Message":"Class {name} inherits from object",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP005",
    "Name":"deprecated-unittest-alias",
    "Message":"{alias} is deprecated, use {target}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP006",
    "Name":"non-pep585-annotation",
    "Message":"Use {to} instead of {from} for type annotation",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP007",
    "Name":"non-pep604-annotation-union",
    "Message":"Use X | Y for type annotations",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP008",
    "Name":"super-call-with-parameters",
    "Message":"Use super() instead of super(__class__, self)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP009",
    "Name":"utf8-encoding-declaration",
    "Message":"UTF-8 encoding declaration is unnecessary",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP010",
    "Name":"unnecessary-future-import",
    "Message":"Unnecessary __future__ import {import} for target Python version",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP011",
    "Name":"lru-cache-without-parameters",
    "Message":"Unnecessary parentheses to functools.lru_cache",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP012",
    "Name":"unnecessary-encode-utf8",
    "Message":"Unnecessary call to encode as UTF-8",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP013",
    "Name":"convert-typed-dict-functional-to-class",
    "Message":"Convert {name} from TypedDict functional to class syntax",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP014",
    "Name":"convert-named-tuple-functional-to-class",
    "Message":"Convert {name} from NamedTuple functional to class syntax",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP015",
    "Name":"redundant-open-modes",
    "Message":"Unnecessary mode argument",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP017",
    "Name":"datetime-timezone-utc",
    "Message":"Use datetime.UTC alias",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP018",
    "Name":"native-literals",
    "Message":"Unnecessary {literal_type} call (rewrite as a literal)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP019",
    "Name":"typing-text-str-alias",
    "Message":"typing.Text is deprecated, use str",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP020",
    "Name":"open-alias",
    "Message":"Use builtin open",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP021",
    "Name":"replace-universal-newlines",
    "Message":"universal_newlines is deprecated, use text",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP022",
    "Name":"replace-stdout-stderr",
    "Message":"Prefer capture_output over sending stdout and stderr to PIPE",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP023",
    "Name":"deprecated-c-element-tree",
    "Message":"cElementTree is deprecated, use ElementTree",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP024",
    "Name":"os-error-alias",
    "Message":"Replace aliased errors with OSError",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP025",
    "Name":"unicode-kind-prefix",
    "Message":"Remove unicode literals from strings",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP026",
    "Name":"deprecated-mock-import",
    "Message":"mock is deprecated, use unittest.mock",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP027",
    "Name":"unpacked-list-comprehension",
    "Message":"Replace unpacked list comprehension with a generator expression",
    "Details":"\u274c",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP028",
    "Name":"yield-in-for-loop",
    "Message":"Replace yield over for loop with yield from",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP029",
    "Name":"unnecessary-builtin-import",
    "Message":"Unnecessary builtin import: {import}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP030",
    "Name":"format-literals",
    "Message":"Use implicit references for positional format fields",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP031",
    "Name":"printf-string-formatting",
    "Message":"Use format specifiers instead of percent format",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP032",
    "Name":"f-string",
    "Message":"Use f-string instead of format call",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP033",
    "Name":"lru-cache-with-maxsize-none",
    "Message":"Use @functools.cache instead of @functools.lru_cache(maxsize=None)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP034",
    "Name":"extraneous-parentheses",
    "Message":"Avoid extraneous parentheses",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP035",
    "Name":"deprecated-import",
    "Message":"Import from {target} instead: {names}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP036",
    "Name":"outdated-version-block",
    "Message":"Version block is outdated for minimum Python version",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP037",
    "Name":"quoted-annotation",
    "Message":"Remove quotes from type annotation",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP038",
    "Name":"non-pep604-isinstance",
    "Message":"Use X | Y in {} call instead of (X, Y)",
    "Details":"\u274c\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP039",
    "Name":"unnecessary-class-parentheses",
    "Message":"Unnecessary parentheses after class definition",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP040",
    "Name":"non-pep695-type-alias",
    "Message":"Type alias {name} uses {type_alias_method} instead of the type keyword",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP041",
    "Name":"timeout-error-alias",
    "Message":"Replace aliased errors with TimeoutError",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP042",
    "Name":"replace-str-enum",
    "Message":"Class {name} inherits from both str and enum.Enum",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP043",
    "Name":"unnecessary-default-type-args",
    "Message":"Unnecessary default type arguments",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP044",
    "Name":"non-pep646-unpack",
    "Message":"Use * for unpacking",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP045",
    "Name":"non-pep604-annotation-optional",
    "Message":"Use X | None for type annotations",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP046",
    "Name":"non-pep695-generic-class",
    "Message":"Generic class {name} uses Generic subclass instead of type parameters",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP047",
    "Name":"non-pep695-generic-function",
    "Message":"Generic function {name} should use type parameters",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP049",
    "Name":"private-type-parameter",
    "Message":"Generic {} uses private type parameters",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"UP050",
    "Name":"useless-class-metaclass-type",
    "Message":"Class {name} uses metaclass=type, which is redundant",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"UP"
  },
  {
    "Code":"FURB101",
    "Name":"read-whole-file",
    "Message":"open and read should be replaced by Path({filename}).{suggestion}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB103",
    "Name":"write-whole-file",
    "Message":"open and write should be replaced by Path({filename}).{suggestion}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB105",
    "Name":"print-empty-string",
    "Message":"Unnecessary empty string passed to print",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB110",
    "Name":"if-exp-instead-of-or-operator",
    "Message":"Replace ternary if expression with or operator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB113",
    "Name":"repeated-append",
    "Message":"Use {suggestion} instead of repeatedly calling {name}.append()",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB116",
    "Name":"f-string-number-format",
    "Message":"Replace {function_name} call with {display}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB118",
    "Name":"reimplemented-operator",
    "Message":"Use operator.{operator} instead of defining a {target}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB122",
    "Name":"for-loop-writes",
    "Message":"Use of {}.write in a for loop",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB129",
    "Name":"readlines-in-for",
    "Message":"Instead of calling readlines(), iterate over file object directly",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB131",
    "Name":"delete-full-slice",
    "Message":"Prefer clear over deleting a full slice",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB132",
    "Name":"check-and-remove-from-set",
    "Message":"Use {suggestion} instead of check and remove",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB136",
    "Name":"if-expr-min-max",
    "Message":"Replace if expression with {min_max} call",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB140",
    "Name":"reimplemented-starmap",
    "Message":"Use itertools.starmap instead of the generator",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB142",
    "Name":"for-loop-set-mutations",
    "Message":"Use of set.{}() in a for loop",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB145",
    "Name":"slice-copy",
    "Message":"Prefer copy method over slicing",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB148",
    "Name":"unnecessary-enumerate",
    "Message":"enumerate value is unused, use for x in range(len(y)) instead",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB152",
    "Name":"math-constant",
    "Message":"Replace {literal} with math.{constant}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB154",
    "Name":"repeated-global",
    "Message":"Use of repeated consecutive {}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB156",
    "Name":"hardcoded-string-charset",
    "Message":"Use of hardcoded string charset",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB157",
    "Name":"verbose-decimal-constructor",
    "Message":"Verbose expression in Decimal constructor",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB161",
    "Name":"bit-count",
    "Message":"Use of bin({existing}).count('1')",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB162",
    "Name":"fromisoformat-replace-z",
    "Message":"Unnecessary timezone replacement with zero offset",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB163",
    "Name":"redundant-log-base",
    "Message":"Prefer math.{log_function}({arg}) over math.log with a redundant base",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB164",
    "Name":"unnecessary-from-float",
    "Message":"Verbose method {method_name} in {constructor} construction",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB166",
    "Name":"int-on-sliced-str",
    "Message":"Use of int with explicit base={base} after removing prefix",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB167",
    "Name":"regex-flag-alias",
    "Message":"Use of regular expression alias re.{}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB168",
    "Name":"isinstance-type-none",
    "Message":"Prefer is operator over isinstance to check if an object is None",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB169",
    "Name":"type-none-comparison",
    "Message":"When checking against None, use {} instead of comparison with type(None)",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB171",
    "Name":"single-item-membership-test",
    "Message":"Membership test against single-item container",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB177",
    "Name":"implicit-cwd",
    "Message":"Prefer Path.cwd() over Path().resolve() for current-directory lookups",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB180",
    "Name":"meta-class-abc-meta",
    "Message":"Use of metaclass=abc.ABCMeta to define abstract base class",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB181",
    "Name":"hashlib-digest-hex",
    "Message":"Use of hashlib's .digest().hex()",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB187",
    "Name":"list-reverse-copy",
    "Message":"Use of assignment of reversed on list {name}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB188",
    "Name":"slice-to-remove-prefix-or-suffix",
    "Message":"Prefer str.removeprefix() over conditionally replacing with slice.",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB189",
    "Name":"subclass-builtin",
    "Message":"Subclassing {subclass} can be error prone, use collections.{replacement} instead",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"FURB192",
    "Name":"sorted-min-max",
    "Message":"Prefer min over sorted() to compute the minimum value in a sequence",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"FURB"
  },
  {
    "Code":"RUF001",
    "Name":"ambiguous-unicode-character-string",
    "Message":"String contains ambiguous {}. Did you mean {}?",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF002",
    "Name":"ambiguous-unicode-character-docstring",
    "Message":"Docstring contains ambiguous {}. Did you mean {}?",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF003",
    "Name":"ambiguous-unicode-character-comment",
    "Message":"Comment contains ambiguous {}. Did you mean {}?",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF005",
    "Name":"collection-literal-concatenation",
    "Message":"Consider {expression} instead of concatenation",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF006",
    "Name":"asyncio-dangling-task",
    "Message":"Store a reference to the return value of {expr}.{method}",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF007",
    "Name":"zip-instead-of-pairwise",
    "Message":"Prefer itertools.pairwise() over zip() when iterating over successive pairs",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF008",
    "Name":"mutable-dataclass-default",
    "Message":"Do not use mutable default values for dataclass attributes",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF009",
    "Name":"function-call-in-dataclass-default-argument",
    "Message":"Do not perform function call {name} in dataclass defaults",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF010",
    "Name":"explicit-f-string-type-conversion",
    "Message":"Use explicit conversion flag",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF011",
    "Name":"ruff-static-key-dict-comprehension",
    "Message":"Dictionary comprehension uses static key",
    "Details":"\u274c",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF012",
    "Name":"mutable-class-default",
    "Message":"Mutable class attributes should be annotated with typing.ClassVar",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF013",
    "Name":"implicit-optional",
    "Message":"PEP 484 prohibits implicit Optional",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF015",
    "Name":"unnecessary-iterable-allocation-for-first-element",
    "Message":"Prefer next({iterable}) over single element slice",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF016",
    "Name":"invalid-index-type",
    "Message":"Slice in indexed access to type {value_type} uses type {index_type} instead of an integer",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF017",
    "Name":"quadratic-list-summation",
    "Message":"Avoid quadratic list summation",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF018",
    "Name":"assignment-in-assert",
    "Message":"Avoid assignment expressions in assert statements",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF019",
    "Name":"unnecessary-key-check",
    "Message":"Unnecessary key check before dictionary access",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF020",
    "Name":"never-union",
    "Message":"{never_like} | T is equivalent to T",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF021",
    "Name":"parenthesize-chained-operators",
    "Message":"Parenthesize a and b expressions when chaining and and or together, to make the precedence clear",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF022",
    "Name":"unsorted-dunder-all",
    "Message":"__all__ is not sorted",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF023",
    "Name":"unsorted-dunder-slots",
    "Message":"{}.__slots__ is not sorted",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF024",
    "Name":"mutable-fromkeys-value",
    "Message":"Do not pass mutable objects as values to dict.fromkeys",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF026",
    "Name":"default-factory-kwarg",
    "Message":"default_factory is a positional-only argument to defaultdict",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF027",
    "Name":"missing-f-string-syntax",
    "Message":"Possible f-string without an f prefix",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF028",
    "Name":"invalid-formatter-suppression-comment",
    "Message":"This suppression comment is invalid because {}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF029",
    "Name":"unused-async",
    "Message":"Function {name} is declared async, but doesn't await or use async features.",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF030",
    "Name":"assert-with-print-message",
    "Message":"print() call in assert statement is likely unintentional",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF031",
    "Name":"incorrectly-parenthesized-tuple-in-subscript",
    "Message":"Use parentheses for tuples in subscripts",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF032",
    "Name":"decimal-from-float-literal",
    "Message":"Decimal() called with float literal argument",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF033",
    "Name":"post-init-default",
    "Message":"__post_init__ method with argument defaults",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF034",
    "Name":"useless-if-else",
    "Message":"Useless if-else condition",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF035",
    "Name":"ruff-unsafe-markup-use",
    "Message":"Unsafe use of {name} detected",
    "Details":"\u274c",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF036",
    "Name":"none-not-at-end-of-union",
    "Message":"None not at the end of the type annotation.",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF037",
    "Name":"unnecessary-empty-iterable-within-deque-call",
    "Message":"Unnecessary empty iterable within a deque call",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF038",
    "Name":"redundant-bool-literal",
    "Message":"Literal[True, False, ...] can be replaced with Literal[...] | bool",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF039",
    "Name":"unraw-re-pattern",
    "Message":"First argument to {call} is not raw string",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF040",
    "Name":"invalid-assert-message-literal-argument",
    "Message":"Non-string literal used as assert message",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF041",
    "Name":"unnecessary-nested-literal",
    "Message":"Unnecessary nested Literal",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF043",
    "Name":"pytest-raises-ambiguous-pattern",
    "Message":"Pattern passed to match= contains metacharacters but is neither escaped nor raw",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF045",
    "Name":"implicit-class-var-in-dataclass",
    "Message":"Assignment without annotation found in dataclass body",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF046",
    "Name":"unnecessary-cast-to-int",
    "Message":"Value being cast to int is already an integer",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF047",
    "Name":"needless-else",
    "Message":"Empty else clause",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF048",
    "Name":"map-int-version-parsing",
    "Message":"__version__ may contain non-integral-like elements",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF049",
    "Name":"dataclass-enum",
    "Message":"An enum class should not be decorated with @dataclass",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF051",
    "Name":"if-key-in-dict-del",
    "Message":"Use pop instead of key in dict followed by del dict[key]",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF052",
    "Name":"used-dummy-variable",
    "Message":"Local dummy variable {} is accessed",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF053",
    "Name":"class-with-mixed-type-vars",
    "Message":"Class with type parameter list inherits from Generic",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF054",
    "Name":"indented-form-feed",
    "Message":"Indented form feed",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF055",
    "Name":"unnecessary-regular-expression",
    "Message":"Plain string pattern passed to re function",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF056",
    "Name":"falsy-dict-get-fallback",
    "Message":"Avoid providing a falsy fallback to dict.get() in boolean test positions. The default fallback None is already falsy.",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF057",
    "Name":"unnecessary-round",
    "Message":"Value being rounded is already an integer",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF058",
    "Name":"starmap-zip",
    "Message":"itertools.starmap called on zip iterable",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF059",
    "Name":"unused-unpacked-variable",
    "Message":"Unpacked variable {name} is never used",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF060",
    "Name":"in-empty-collection",
    "Message":"Unnecessary membership test on empty collection",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF061",
    "Name":"legacy-form-pytest-raises",
    "Message":"Use context-manager form of pytest.{}()",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF063",
    "Name":"access-annotations-from-class-dict",
    "Message":"Use {suggestion} instead of __dict__ access",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF064",
    "Name":"non-octal-permissions",
    "Message":"Non-octal mode",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF065",
    "Name":"logging-eager-conversion",
    "Message":"Unnecessary {call_arg} conversion when formatting with {format_str}",
    "Details":"\ud83e\uddea",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF100",
    "Name":"unused-noqa",
    "Message":"Unused noqa directive",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF101",
    "Name":"redirected-noqa",
    "Message":"{original} is a redirect to {target}",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF102",
    "Name":"invalid-rule-code",
    "Message":"Invalid rule code in # noqa: {}",
    "Details":"\ud83e\uddea\ud83d\udee0\ufe0f",
    "ParentGroup":"RUF"
  },
  {
    "Code":"RUF200",
    "Name":"invalid-pyproject-toml",
    "Message":"Failed to parse pyproject.toml: {message}",
    "Details":null,
    "ParentGroup":"RUF"
  },
  {
    "Code":"TRY002",
    "Name":"raise-vanilla-class",
    "Message":"Create your own exception",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY003",
    "Name":"raise-vanilla-args",
    "Message":"Avoid specifying long messages outside the exception class",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY004",
    "Name":"type-check-without-type-error",
    "Message":"Prefer TypeError exception for invalid type",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY200",
    "Name":"reraise-no-cause",
    "Message":"Use raise from to specify exception cause",
    "Details":"\u274c",
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY201",
    "Name":"verbose-raise",
    "Message":"Use raise without specifying exception name",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY203",
    "Name":"useless-try-except",
    "Message":"Remove exception handler; error is immediately re-raised",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY300",
    "Name":"try-consider-else",
    "Message":"Consider moving this statement to an else block",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY301",
    "Name":"raise-within-try",
    "Message":"Abstract raise to an inner function",
    "Details":null,
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY400",
    "Name":"error-instead-of-exception",
    "Message":"Use logging.exception instead of logging.error",
    "Details":"\ud83d\udee0\ufe0f",
    "ParentGroup":"TRY"
  },
  {
    "Code":"TRY401",
    "Name":"verbose-log-message",
    "Message":"Redundant exception object included in logging.exception call",
    "Details":null,
    "ParentGroup":"TRY"
  }
]