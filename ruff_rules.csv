Code,Name,Message,Details,Parent_Group
AIR001,airflow-variable-name-task-id-mismatch,"Task variable name should match the task_id: ""{task_id}""",,AIR
AIR002,airflow-dag-no-schedule-argument,DAG or @dag should have an explicit schedule argument,,AIR
AIR301,airflow3-removal,{deprecated} is removed in Airflow 3.0,üõ†Ô∏è,AIR
AIR302,airflow3-moved-to-provider,{deprecated} is moved into {provider} provider in Airflow 3.0;,üõ†Ô∏è,AIR
AIR311,airflow3-suggested-update,{deprecated} is removed in Airflow 3.0; It still works in Airflow 3.0 but is expected to be removed in a future version.,üõ†Ô∏è,AIR
AIR312,airflow3-suggested-to-move-to-provider,{deprecated} is deprecated and moved into {provider} provider in Airflow 3.0; It still works in Airflow 3.0 but is expected to be removed in a future version.,üõ†Ô∏è,AIR
ERA001,commented-out-code,Found commented-out code,,ERA
FAST001,fast-api-redundant-response-model,FastAPI route with redundant response_model argument,üõ†Ô∏è,FAST
FAST002,fast-api-non-annotated-dependency,FastAPI dependency without Annotated,üõ†Ô∏è,FAST
FAST003,fast-api-unused-path-parameter,"Parameter {arg_name} appears in route path, but not in {function_name} signature",üõ†Ô∏è,FAST
YTT101,sys-version-slice3,"sys.version[:3] referenced (python3.10), use sys.version_info",,YTT
YTT102,sys-version2,"sys.version[2] referenced (python3.10), use sys.version_info",,YTT
YTT103,sys-version-cmp-str3,"sys.version compared to string (python3.10), use sys.version_info",,YTT
YTT201,sys-version-info0-eq3,"sys.version_info[0] == 3 referenced (python4), use >=",,YTT
YTT202,six-py3,"six.PY3 referenced (python4), use not six.PY2",,YTT
YTT203,sys-version-info1-cmp-int,"sys.version_info[1] compared to integer (python4), compare sys.version_info to tuple",,YTT
YTT204,sys-version-info-minor-cmp-int,"sys.version_info.minor compared to integer (python4), compare sys.version_info to tuple",,YTT
YTT301,sys-version0,"sys.version[0] referenced (python10), use sys.version_info",,YTT
YTT302,sys-version-cmp-str10,"sys.version compared to string (python10), use sys.version_info",,YTT
YTT303,sys-version-slice1,"sys.version[:1] referenced (python10), use sys.version_info",,YTT
ANN001,missing-type-function-argument,Missing type annotation for function argument {name},,ANN
ANN002,missing-type-args,Missing type annotation for *{name},,ANN
ANN003,missing-type-kwargs,Missing type annotation for **{name},,ANN
ANN101,missing-type-self,Missing type annotation for {name} in method,‚ùå,ANN
ANN102,missing-type-cls,Missing type annotation for {name} in classmethod,‚ùå,ANN
ANN201,missing-return-type-undocumented-public-function,Missing return type annotation for public function {name},üõ†Ô∏è,ANN
ANN202,missing-return-type-private-function,Missing return type annotation for private function {name},üõ†Ô∏è,ANN
ANN204,missing-return-type-special-method,Missing return type annotation for special method {name},üõ†Ô∏è,ANN
ANN205,missing-return-type-static-method,Missing return type annotation for staticmethod {name},üõ†Ô∏è,ANN
ANN206,missing-return-type-class-method,Missing return type annotation for classmethod {name},üõ†Ô∏è,ANN
ANN401,any-type,Dynamically typed expressions (typing.Any) are disallowed in {name},,ANN
ASYNC100,cancel-scope-no-checkpoint,"A with {method_name}(...): context does not contain any await statements. This makes it pointless, as the timeout can only be triggered by a checkpoint.",,ASYNC
ASYNC105,trio-sync-call,Call to {method_name} is not immediately awaited,üõ†Ô∏è,ASYNC
ASYNC109,async-function-with-timeout,Async function definition with a timeout parameter,,ASYNC
ASYNC110,async-busy-wait,Use {module}.Event instead of awaiting {module}.sleep in a while loop,,ASYNC
ASYNC115,async-zero-sleep,Use {module}.lowlevel.checkpoint() instead of {module}.sleep(0),üõ†Ô∏è,ASYNC
ASYNC116,long-sleep-not-forever,{module}.sleep() with >24 hour interval should usually be {module}.sleep_forever(),üõ†Ô∏è,ASYNC
ASYNC210,blocking-http-call-in-async-function,Async functions should not call blocking HTTP methods,,ASYNC
ASYNC212,blocking-http-call-httpx-in-async-function,"Blocking httpx method {name}.{call}() in async context, use httpx.AsyncClient",üß™,ASYNC
ASYNC220,create-subprocess-in-async-function,Async functions should not create subprocesses with blocking methods,,ASYNC
ASYNC221,run-process-in-async-function,Async functions should not run processes with blocking methods,,ASYNC
ASYNC222,wait-for-process-in-async-function,Async functions should not wait on processes with blocking methods,,ASYNC
ASYNC230,blocking-open-call-in-async-function,Async functions should not open files with blocking methods like open,,ASYNC
ASYNC240,blocking-path-method-in-async-function,"Async functions should not use {path_library} methods, use trio.Path or anyio.path",üß™,ASYNC
ASYNC250,blocking-input-in-async-function,Blocking call to input() in async context,üß™,ASYNC
ASYNC251,blocking-sleep-in-async-function,Async functions should not call time.sleep,,ASYNC
S101,assert,Use of assert detected,,S
S102,exec-builtin,Use of exec detected,,S
S103,bad-file-permissions,os.chmod setting a permissive mask {mask:#o} on file or directory,,S
S104,hardcoded-bind-all-interfaces,Possible binding to all interfaces,,S
S105,hardcoded-password-string,"Possible hardcoded password assigned to: ""{}""",,S
S106,hardcoded-password-func-arg,"Possible hardcoded password assigned to argument: ""{}""",,S
S107,hardcoded-password-default,"Possible hardcoded password assigned to function default: ""{}""",,S
S108,hardcoded-temp-file,"Probable insecure usage of temporary file or directory: ""{}""",,S
S110,try-except-pass,"try-except-pass detected, consider logging the exception",,S
S112,try-except-continue,"try-except-continue detected, consider logging the exception",,S
S113,request-without-timeout,Probable use of {module} call without timeout,,S
S201,flask-debug-true,Use of debug=True in Flask app detected,,S
S202,tarfile-unsafe-members,Uses of tarfile.extractall(),,S
S301,suspicious-pickle-usage,"pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue",,S
S302,suspicious-marshal-usage,Deserialization with the marshal module is possibly dangerous,,S
S303,suspicious-insecure-hash-usage,"Use of insecure MD2, MD4, MD5, or SHA1 hash function",,S
S304,suspicious-insecure-cipher-usage,"Use of insecure cipher, replace with a known secure cipher such as AES",,S
S305,suspicious-insecure-cipher-mode-usage,"Use of insecure block cipher mode, replace with a known secure mode such as CBC or CTR",,S
S306,suspicious-mktemp-usage,Use of insecure and deprecated function (mktemp),,S
S307,suspicious-eval-usage,Use of possibly insecure function; consider using ast.literal_eval,,S
S308,suspicious-mark-safe-usage,Use of mark_safe may expose cross-site scripting vulnerabilities,,S
S310,suspicious-url-open-usage,Audit URL open for permitted schemes. Allowing use of file: or custom schemes is often unexpected.,,S
S311,suspicious-non-cryptographic-random-usage,Standard pseudo-random generators are not suitable for cryptographic purposes,,S
S312,suspicious-telnet-usage,Telnet is considered insecure. Use SSH or some other encrypted protocol.,,S
S313,suspicious-xmlc-element-tree-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S314,suspicious-xml-element-tree-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S315,suspicious-xml-expat-reader-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S316,suspicious-xml-expat-builder-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S317,suspicious-xml-sax-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S318,suspicious-xml-mini-dom-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S319,suspicious-xml-pull-dom-usage,Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents,,S
S320,suspicious-xmle-tree-usage,Using lxml to parse untrusted data is known to be vulnerable to XML attacks,‚ùå,S
S321,suspicious-ftp-lib-usage,FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.,,S
S323,suspicious-unverified-context-usage,Python allows using an insecure context via the _create_unverified_context that reverts to the previous behavior that does not validate certificates or perform hostname checks.,,S
S324,hashlib-insecure-hash-function,Probable use of insecure hash functions in {library}: {string},,S
S401,suspicious-telnetlib-import,telnetlib and related modules are considered insecure. Use SSH or another encrypted protocol.,üß™,S
S402,suspicious-ftplib-import,"ftplib and related modules are considered insecure. Use SSH, SFTP, SCP, or another encrypted protocol.",üß™,S
S403,suspicious-pickle-import,"pickle, cPickle, dill, and shelve modules are possibly insecure",üß™,S
S404,suspicious-subprocess-import,subprocess module is possibly insecure,üß™,S
S405,suspicious-xml-etree-import,xml.etree methods are vulnerable to XML attacks,üß™,S
S406,suspicious-xml-sax-import,xml.sax methods are vulnerable to XML attacks,üß™,S
S407,suspicious-xml-expat-import,xml.dom.expatbuilder is vulnerable to XML attacks,üß™,S
S408,suspicious-xml-minidom-import,xml.dom.minidom is vulnerable to XML attacks,üß™,S
S409,suspicious-xml-pulldom-import,xml.dom.pulldom is vulnerable to XML attacks,üß™,S
S410,suspicious-lxml-import,lxml is vulnerable to XML attacks,‚ùå,S
S411,suspicious-xmlrpc-import,XMLRPC is vulnerable to remote XML attacks,üß™,S
S412,suspicious-httpoxy-import,"httpoxy is a set of vulnerabilities that affect application code running inCGI, or CGI-like environments. The use of CGI for web applications should be avoided",üß™,S
S413,suspicious-pycrypto-import,pycrypto library is known to have publicly disclosed buffer overflow vulnerability,üß™,S
S415,suspicious-pyghmi-import,An IPMI-related module is being imported. Prefer an encrypted protocol over IPMI.,üß™,S
S501,request-with-no-cert-validation,Probable use of {string} call with verify=False disabling SSL certificate checks,,S
S502,ssl-insecure-version,Call made with insecure SSL protocol: {protocol},,S
S503,ssl-with-bad-defaults,Argument default set to insecure SSL protocol: {protocol},,S
S504,ssl-with-no-version,ssl.wrap_socket called without an `ssl_version``,,S
S505,weak-cryptographic-key,{cryptographic_key} key sizes below {minimum_key_size} bits are considered breakable,,S
S506,unsafe-yaml-load,Probable use of unsafe loader {name} with yaml.load. Allows instantiation of arbitrary objects. Consider yaml.safe_load.,,S
S507,ssh-no-host-key-verification,Paramiko call with policy set to automatically trust the unknown host key,,S
S508,snmp-insecure-version,The use of SNMPv1 and SNMPv2 is insecure. Use SNMPv3 if able.,,S
S509,snmp-weak-cryptography,You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure.,,S
S601,paramiko-call,Possible shell injection via Paramiko call; check inputs are properly sanitized,,S
S602,subprocess-popen-with-shell-equals-true,"subprocess call with shell=True seems safe, but may be changed in the future; consider rewriting without shell",,S
S603,subprocess-without-shell-equals-true,subprocess call: check for execution of untrusted input,,S
S604,call-with-shell-equals-true,"Function call with shell=True parameter identified, security issue",,S
S605,start-process-with-a-shell,"Starting a process with a shell: seems safe, but may be changed in the future; consider rewriting without shell",,S
S606,start-process-with-no-shell,Starting a process without a shell,,S
S607,start-process-with-partial-path,Starting a process with a partial executable path,,S
S608,hardcoded-sql-expression,Possible SQL injection vector through string-based query construction,,S
S609,unix-command-wildcard-injection,Possible wildcard injection in call due to * usage,,S
S610,django-extra,Use of Django extra can lead to SQL injection vulnerabilities,,S
S611,django-raw-sql,Use of RawSQL can lead to SQL injection vulnerabilities,,S
S612,logging-config-insecure-listen,Use of insecure logging.config.listen detected,,S
S701,jinja2-autoescape-false,Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function.,,S
S702,mako-templates,Mako templates allow HTML and JavaScript rendering by default and are inherently open to XSS attacks,,S
S704,unsafe-markup-use,Unsafe use of {name} detected,,S
BLE001,blind-except,Do not catch blind exception: {name},,BLE
FBT001,boolean-type-hint-positional-argument,Boolean-typed positional argument in function definition,,FBT
FBT002,boolean-default-value-positional-argument,Boolean default positional argument in function definition,,FBT
FBT003,boolean-positional-value-in-call,Boolean positional value in function call,,FBT
B002,unary-prefix-increment-decrement,Python does not support the unary prefix increment operator (++),,B
B003,assignment-to-os-environ,Assigning to os.environ doesn't clear the environment,,B
B004,unreliable-callable-check,"Using hasattr(x, ""__call__"") to test if x is callable is unreliable. Use callable(x) for consistent results.",üõ†Ô∏è,B
B005,strip-with-multi-characters,Using .strip() with multi-character strings is misleading,,B
B006,mutable-argument-default,Do not use mutable data structures for argument defaults,üõ†Ô∏è,B
B007,unused-loop-control-variable,Loop control variable {name} not used within loop body,üõ†Ô∏è,B
B008,function-call-in-default-argument,"Do not perform function call {name} in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable",,B
B009,get-attr-with-constant,Do not call getattr with a constant attribute value. It is not any safer than normal property access.,üõ†Ô∏è,B
B010,set-attr-with-constant,Do not call setattr with a constant attribute value. It is not any safer than normal property access.,üõ†Ô∏è,B
B011,assert-false,"Do not assert False (python -O removes these calls), raise AssertionError()",üõ†Ô∏è,B
B012,jump-statement-in-finally,{name} inside finally blocks cause exceptions to be silenced,,B
B013,redundant-tuple-in-exception-handler,A length-one tuple literal is redundant in exception handlers,üõ†Ô∏è,B
B014,duplicate-handler-exception,Exception handler with duplicate exception: {name},üõ†Ô∏è,B
B015,useless-comparison,"Pointless comparison. Did you mean to assign a value? Otherwise, prepend assert or remove it.",,B
B016,raise-literal,Cannot raise a literal. Did you intend to return it or raise an Exception?,,B
B017,assert-raises-exception,Do not assert blind exception: {exception},,B
B018,useless-expression,Found useless expression. Either assign it to a variable or remove it.,,B
B019,cached-instance-method,Use of functools.lru_cache or functools.cache on methods can lead to memory leaks,,B
B020,loop-variable-overrides-iterator,Loop control variable {name} overrides iterable it iterates,,B
B021,f-string-docstring,"f-string used as docstring. Python will interpret this as a joined string, rather than a docstring.",,B
B022,useless-contextlib-suppress,No arguments passed to contextlib.suppress. No exceptions will be suppressed and therefore this context manager is redundant,,B
B023,function-uses-loop-variable,Function definition does not bind loop variable {name},,B
B024,abstract-base-class-without-abstract-method,"{name} is an abstract base class, but it has no abstract methods or properties",,B
B025,duplicate-try-block-exception,try-except* block with duplicate exception {name},,B
B026,star-arg-unpacking-after-keyword-arg,Star-arg unpacking after a keyword argument is strongly discouraged,,B
B027,empty-method-without-abstract-decorator,"{name} is an empty method in an abstract base class, but has no abstract decorator",,B
B028,no-explicit-stacklevel,No explicit stacklevel keyword argument found,üõ†Ô∏è,B
B029,except-with-empty-tuple,Using except* (): with an empty tuple does not catch anything; add exceptions to handle,,B
B030,except-with-non-exception-classes,except* handlers should only be exception classes or tuples of exception classes,,B
B031,reuse-of-groupby-generator,Using the generator returned from itertools.groupby() more than once will do nothing on the second usage,,B
B032,unintentional-type-annotation,Possible unintentional type annotation (using :). Did you mean to assign (using =)?,,B
B033,duplicate-value,Sets should not contain duplicate item {value},üõ†Ô∏è,B
B034,re-sub-positional-args,{method} should pass {param_name} and flags as keyword arguments to avoid confusion due to unintuitive argument positions,,B
B035,static-key-dict-comprehension,Dictionary comprehension uses static key: {key},,B
B039,mutable-contextvar-default,Do not use mutable data structures for ContextVar defaults,,B
B901,return-in-generator,Using yield and return {value} in a generator function can lead to confusing behavior,üß™,B
B903,class-as-data-structure,Class could be dataclass or namedtuple,üß™,B
B904,raise-without-from-inside-except,"Within an except* clause, raise exceptions with raise ... from err or raise ... from None to distinguish them from errors in exception handling",,B
B905,zip-without-explicit-strict,zip() without an explicit strict= parameter,üõ†Ô∏è,B
B909,loop-iterator-mutation,Mutation to loop iterable {name} during iteration,üß™,B
B911,batched-without-explicit-strict,itertools.batched() without an explicit strict parameter,,B
B912,map-without-explicit-strict,map() without an explicit strict= parameter,üß™üõ†Ô∏è,B
A001,builtin-variable-shadowing,Variable {name} is shadowing a Python builtin,,A
A002,builtin-argument-shadowing,Function argument {name} is shadowing a Python builtin,,A
A003,builtin-attribute-shadowing,Python builtin is shadowed by class attribute {name} from {row},,A
A004,builtin-import-shadowing,Import {name} is shadowing a Python builtin,,A
A005,stdlib-module-shadowing,Module {name} shadows a Python standard-library module,,A
A006,builtin-lambda-argument-shadowing,Lambda argument {name} is shadowing a Python builtin,,A
COM812,missing-trailing-comma,Trailing comma missing,üõ†Ô∏è,COM
COM818,trailing-comma-on-bare-tuple,Trailing comma on bare tuple prohibited,,COM
COM819,prohibited-trailing-comma,Trailing comma prohibited,üõ†Ô∏è,COM
C400,unnecessary-generator-list,Unnecessary generator (rewrite using list()),üõ†Ô∏è,C
C401,unnecessary-generator-set,Unnecessary generator (rewrite using set()),üõ†Ô∏è,C
C402,unnecessary-generator-dict,Unnecessary generator (rewrite as a dict comprehension),üõ†Ô∏è,C
C403,unnecessary-list-comprehension-set,Unnecessary list comprehension (rewrite as a set comprehension),üõ†Ô∏è,C
C404,unnecessary-list-comprehension-dict,Unnecessary list comprehension (rewrite as a dict comprehension),üõ†Ô∏è,C
C405,unnecessary-literal-set,Unnecessary {kind} literal (rewrite as a set literal),üõ†Ô∏è,C
C406,unnecessary-literal-dict,Unnecessary {obj_type} literal (rewrite as a dict literal),üõ†Ô∏è,C
C408,unnecessary-collection-call,Unnecessary {kind}() call (rewrite as a literal),üõ†Ô∏è,C
C409,unnecessary-literal-within-tuple-call,Unnecessary list literal passed to tuple() (rewrite as a tuple literal),üõ†Ô∏è,C
C410,unnecessary-literal-within-list-call,Unnecessary list literal passed to list() (remove the outer call to list()),üõ†Ô∏è,C
C411,unnecessary-list-call,Unnecessary list() call (remove the outer call to list()),üõ†Ô∏è,C
C413,unnecessary-call-around-sorted,Unnecessary {func}() call around sorted(),üõ†Ô∏è,C
C414,unnecessary-double-cast-or-process,Unnecessary {inner}() call within {outer}(),üõ†Ô∏è,C
C415,unnecessary-subscript-reversal,Unnecessary subscript reversal of iterable within {func}(),,C
C416,unnecessary-comprehension,Unnecessary {kind} comprehension (rewrite using {kind}()),üõ†Ô∏è,C
C417,unnecessary-map,Unnecessary map() usage (rewrite using a {object_type}),üõ†Ô∏è,C
C418,unnecessary-literal-within-dict-call,Unnecessary dict {kind} passed to dict() (remove the outer call to dict()),üõ†Ô∏è,C
C419,unnecessary-comprehension-in-call,Unnecessary list comprehension,üõ†Ô∏è,C
C420,unnecessary-dict-comprehension-for-iterable,Unnecessary dict comprehension for iterable; use dict.fromkeys instead,üõ†Ô∏è,C
CPY001,missing-copyright-notice,Missing copyright notice at top of file,üß™,CPY
DTZ001,call-datetime-without-tzinfo,datetime.datetime() called without a tzinfo argument,,DTZ
DTZ002,call-datetime-today,datetime.datetime.today() used,,DTZ
DTZ003,call-datetime-utcnow,datetime.datetime.utcnow() used,,DTZ
DTZ004,call-datetime-utcfromtimestamp,datetime.datetime.utcfromtimestamp() used,,DTZ
DTZ005,call-datetime-now-without-tzinfo,datetime.datetime.now() called without a tz argument,,DTZ
DTZ006,call-datetime-fromtimestamp,datetime.datetime.fromtimestamp() called without a tz argument,,DTZ
DTZ007,call-datetime-strptime-without-zone,Naive datetime constructed using datetime.datetime.strptime() without %z,,DTZ
DTZ011,call-date-today,datetime.date.today() used,,DTZ
DTZ012,call-date-fromtimestamp,datetime.date.fromtimestamp() used,,DTZ
DTZ901,datetime-min-max,Use of datetime.datetime.{min_max} without timezone information,,DTZ
T100,debugger,Trace found: {name} used,,T
DJ001,django-nullable-model-string-field,Avoid using null=True on string-based fields such as {field_name},,DJ
DJ003,django-locals-in-render-function,Avoid passing locals() as context to a render function,,DJ
DJ006,django-exclude-with-model-form,"Do not use exclude with ModelForm, use fields instead",,DJ
DJ007,django-all-with-model-form,"Do not use __all__ with ModelForm, use fields instead",,DJ
DJ008,django-model-without-dunder-str,Model does not define __str__ method,,DJ
DJ012,django-unordered-body-content-in-model,"Order of model's inner classes, methods, and fields does not follow the Django Style Guide: {element_type} should come before {prev_element_type}",,DJ
DJ013,django-non-leading-receiver-decorator,@receiver decorator must be on top of all the other decorators,,DJ
EM101,raw-string-in-exception,"Exception must not use a string literal, assign to variable first",üõ†Ô∏è,EM
EM102,f-string-in-exception,"Exception must not use an f-string literal, assign to variable first",üõ†Ô∏è,EM
EM103,dot-format-in-exception,"Exception must not use a .format() string directly, assign to variable first",üõ†Ô∏è,EM
EXE001,shebang-not-executable,Shebang is present but file is not executable,,EXE
EXE002,shebang-missing-executable-file,The file is executable but no shebang is present,,EXE
EXE003,shebang-missing-python,"Shebang should contain python, pytest, or uv run",,EXE
EXE004,shebang-leading-whitespace,Avoid whitespace before shebang,üõ†Ô∏è,EXE
EXE005,shebang-not-first-line,Shebang should be at the beginning of the file,,EXE
FIX001,line-contains-fixme,"Line contains FIXME, consider resolving the issue",,FIX
FIX002,line-contains-todo,"Line contains TODO, consider resolving the issue",,FIX
FIX003,line-contains-xxx,"Line contains XXX, consider resolving the issue",,FIX
FIX004,line-contains-hack,"Line contains HACK, consider resolving the issue",,FIX
FA100,future-rewritable-type-annotation,Add from __future__ import annotations to simplify {name},üõ†Ô∏è,FA
FA102,future-required-type-annotation,"Missing from __future__ import annotations, but uses {reason}",üõ†Ô∏è,FA
INT001,f-string-in-get-text-func-call,"f-string is resolved before function call; consider _(""string %s"") % arg",,INT
INT002,format-in-get-text-func-call,"format method argument is resolved before function call; consider _(""string %s"") % arg",,INT
INT003,printf-in-get-text-func-call,"printf-style format is resolved before function call; consider _(""string %s"") % arg",,INT
ISC001,single-line-implicit-string-concatenation,Implicitly concatenated string literals on one line,üõ†Ô∏è,ISC
ISC002,multi-line-implicit-string-concatenation,Implicitly concatenated string literals over multiple lines,,ISC
ISC003,explicit-string-concatenation,Explicitly concatenated string should be implicitly concatenated,üõ†Ô∏è,ISC
ICN001,unconventional-import-alias,{name} should be imported as {asname},üõ†Ô∏è,ICN
ICN002,banned-import-alias,{name} should not be imported as {asname},,ICN
ICN003,banned-import-from,Members of {name} should not be imported explicitly,,ICN
LOG001,direct-logger-instantiation,Use logging.getLogger() to instantiate loggers,üõ†Ô∏è,LOG
LOG002,invalid-get-logger-argument,Use __name__ with logging.getLogger(),üõ†Ô∏è,LOG
LOG004,log-exception-outside-except-handler,.exception() call outside exception handlers,üß™üõ†Ô∏è,LOG
LOG007,exception-without-exc-info,Use of logging.exception with falsy exc_info,,LOG
LOG009,undocumented-warn,Use of undocumented logging.WARN constant,üõ†Ô∏è,LOG
LOG014,exc-info-outside-except-handler,exc_info= outside exception handlers,üõ†Ô∏è,LOG
LOG015,root-logger-call,{}() call on root logger,,LOG
G001,logging-string-format,Logging statement uses str.format,,G
G002,logging-percent-format,Logging statement uses %,,G
G003,logging-string-concat,Logging statement uses +,,G
G004,logging-f-string,Logging statement uses f-string,üõ†Ô∏è,G
G010,logging-warn,Logging statement uses warn instead of warning,üõ†Ô∏è,G
G101,logging-extra-attr-clash,Logging statement uses an extra field that clashes with a LogRecord field: {key},,G
G201,logging-exc-info,"Logging .exception(...) should be used instead of .error(..., exc_info=True)",,G
G202,logging-redundant-exc-info,Logging statement has redundant exc_info,,G
INP001,implicit-namespace-package,File {filename} is part of an implicit namespace package. Add an __init__.py.,,INP
PIE790,unnecessary-placeholder,Unnecessary pass statement,üõ†Ô∏è,PIE
PIE794,duplicate-class-field-definition,Class field {name} is defined multiple times,üõ†Ô∏è,PIE
PIE796,non-unique-enums,Enum contains duplicate value: {value},,PIE
PIE800,unnecessary-spread,Unnecessary spread **,üõ†Ô∏è,PIE
PIE804,unnecessary-dict-kwargs,Unnecessary dict kwargs,üõ†Ô∏è,PIE
PIE807,reimplemented-container-builtin,Prefer {container} over useless lambda,üõ†Ô∏è,PIE
PIE808,unnecessary-range-start,Unnecessary start argument in range,üõ†Ô∏è,PIE
PIE810,multiple-starts-ends-with,Call {attr} once with a tuple,üõ†Ô∏è,PIE
T201,print,print found,üõ†Ô∏è,T
T203,p-print,pprint found,üõ†Ô∏è,T
PYI001,unprefixed-type-param,Name of private {kind} must start with _,,PYI
PYI002,complex-if-statement-in-stub,if test must be a simple comparison against sys.platform or sys.version_info,,PYI
PYI003,unrecognized-version-info-check,Unrecognized sys.version_info check,,PYI
PYI004,patch-version-comparison,Version comparison must use only major and minor version,,PYI
PYI005,wrong-tuple-length-version-comparison,Version comparison must be against a length-{expected_length} tuple,,PYI
PYI006,bad-version-info-comparison,Use < or >= for sys.version_info comparisons,,PYI
PYI007,unrecognized-platform-check,Unrecognized sys.platform check,,PYI
PYI008,unrecognized-platform-name,Unrecognized platform {platform},,PYI
PYI009,pass-statement-stub-body,"Empty body should contain ..., not pass",üõ†Ô∏è,PYI
PYI010,non-empty-stub-body,Function body must contain only ...,üõ†Ô∏è,PYI
PYI011,typed-argument-default-in-stub,Only simple default values allowed for typed arguments,üõ†Ô∏è,PYI
PYI012,pass-in-class-body,Class body must not contain pass,üõ†Ô∏è,PYI
PYI013,ellipsis-in-non-empty-class-body,Non-empty class body must not contain ...,üõ†Ô∏è,PYI
PYI014,argument-default-in-stub,Only simple default values allowed for arguments,üõ†Ô∏è,PYI
PYI015,assignment-default-in-stub,Only simple default values allowed for assignments,üõ†Ô∏è,PYI
PYI016,duplicate-union-member,Duplicate union member {},üõ†Ô∏è,PYI
PYI017,complex-assignment-in-stub,Stubs should not contain assignments to attributes or multiple targets,,PYI
PYI018,unused-private-type-var,Private {type_var_like_kind} {type_var_like_name} is never used,üõ†Ô∏è,PYI
PYI019,custom-type-var-for-self,Use Self instead of custom TypeVar {},üõ†Ô∏è,PYI
PYI020,quoted-annotation-in-stub,Quoted annotations should not be included in stubs,üõ†Ô∏è,PYI
PYI021,docstring-in-stub,Docstrings should not be included in stubs,üõ†Ô∏è,PYI
PYI024,collections-named-tuple,Use typing.NamedTuple instead of collections.namedtuple,,PYI
PYI025,unaliased-collections-abc-set-import,Use from collections.abc import Set as AbstractSet to avoid confusion with the set builtin,üõ†Ô∏è,PYI
PYI026,type-alias-without-annotation,"Use {module}.TypeAlias for type alias, e.g., {name}: TypeAlias = {value}",üõ†Ô∏è,PYI
PYI029,str-or-repr-defined-in-stub,Defining {name} in a stub is almost always redundant,üõ†Ô∏è,PYI
PYI030,unnecessary-literal-union,"Multiple literal members in a union. Use a single literal, e.g. Literal[{}]",üõ†Ô∏è,PYI
PYI032,any-eq-ne-annotation,Prefer object to Any for the second parameter to {method_name},üõ†Ô∏è,PYI
PYI033,type-comment-in-stub,Don't use type comments in stub file,,PYI
PYI034,non-self-return-type,__new__ methods usually return self at runtime,üõ†Ô∏è,PYI
PYI035,unassigned-special-variable-in-stub,"{name} in a stub file must have a value, as it has the same semantics as {name} at runtime",,PYI
PYI036,bad-exit-annotation,Star-args in {method_name} should be annotated with object,üõ†Ô∏è,PYI
PYI041,redundant-numeric-union,Use {supertype} instead of {subtype} | {supertype},üõ†Ô∏è,PYI
PYI042,snake-case-type-alias,Type alias {name} should be CamelCase,,PYI
PYI043,t-suffixed-type-alias,Private type alias {name} should not be suffixed with T (the T suffix implies that an object is a TypeVar),,PYI
PYI044,future-annotations-in-stub,"from __future__ import annotations has no effect in stub files, since type checkers automatically treat stubs as having those semantics",üõ†Ô∏è,PYI
PYI045,iter-method-return-iterable,"__aiter__ methods should return an AsyncIterator, not an AsyncIterable",,PYI
PYI046,unused-private-protocol,Private protocol {name} is never used,,PYI
PYI047,unused-private-type-alias,Private TypeAlias {name} is never used,,PYI
PYI048,stub-body-multiple-statements,Function body must contain exactly one statement,,PYI
PYI049,unused-private-typed-dict,Private TypedDict {name} is never used,,PYI
PYI050,no-return-argument-annotation-in-stub,Prefer {module}.Never over NoReturn for argument annotations,,PYI
PYI051,redundant-literal-union,Literal[{literal}] is redundant in a union with {builtin_type},,PYI
PYI052,unannotated-assignment-in-stub,Need type annotation for {name},,PYI
PYI053,string-or-bytes-too-long,String and bytes literals longer than 50 characters are not permitted,üõ†Ô∏è,PYI
PYI054,numeric-literal-too-long,Numeric literals with a string representation longer than ten characters are not permitted,üõ†Ô∏è,PYI
PYI055,unnecessary-type-union,"Multiple type members in a union. Combine them into one, e.g., type[{union_str}].",üõ†Ô∏è,PYI
PYI056,unsupported-method-call-on-all,Calling .{name}() on __all__ may not be supported by all type checkers (use += instead),,PYI
PYI057,byte-string-usage,"Do not use {origin}.ByteString, which has unclear semantics and is deprecated",,PYI
PYI058,generator-return-from-iter-method,Use {return_type} as the return value for simple {method} methods,üõ†Ô∏è,PYI
PYI059,generic-not-last-base-class,Generic[] should always be the last base class,üõ†Ô∏è,PYI
PYI061,redundant-none-literal,Use None rather than Literal[None],üõ†Ô∏è,PYI
PYI062,duplicate-literal-member,Duplicate literal member {},üõ†Ô∏è,PYI
PYI063,pep484-style-positional-only-parameter,Use PEP 570 syntax for positional-only parameters,,PYI
PYI064,redundant-final-literal,Final[Literal[{literal}]] can be replaced with a bare Final,üõ†Ô∏è,PYI
PYI066,bad-version-info-order,Put branches for newer Python versions first when branching on sys.version_info comparisons,,PYI
PT001,pytest-fixture-incorrect-parentheses-style,Use @pytest.fixture{expected} over @pytest.fixture{actual},üõ†Ô∏è,PT
PT002,pytest-fixture-positional-args,"Configuration for fixture {function} specified via positional args, use kwargs",,PT
PT003,pytest-extraneous-scope-function,scope='function' is implied in @pytest.fixture(),üõ†Ô∏è,PT
PT004,pytest-missing-fixture-name-underscore,"Fixture {function} does not return anything, add leading underscore",‚ùå,PT
PT005,pytest-incorrect-fixture-name-underscore,"Fixture {function} returns a value, remove leading underscore",‚ùå,PT
PT006,pytest-parametrize-names-wrong-type,Wrong type passed to first argument of pytest.mark.parametrize; expected {expected_string},üõ†Ô∏è,PT
PT007,pytest-parametrize-values-wrong-type,Wrong values type in pytest.mark.parametrize expected {values} of {row},üõ†Ô∏è,PT
PT008,pytest-patch-with-lambda,Use return_value= instead of patching with lambda,,PT
PT009,pytest-unittest-assertion,Use a regular assert instead of unittest-style {assertion},üõ†Ô∏è,PT
PT010,pytest-raises-without-exception,Set the expected exception in pytest.raises(),,PT
PT011,pytest-raises-too-broad,"pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception",,PT
PT012,pytest-raises-with-multiple-statements,pytest.raises() block should contain a single simple statement,,PT
PT013,pytest-incorrect-pytest-import,Incorrect import of pytest; use import pytest instead,,PT
PT014,pytest-duplicate-parametrize-test-cases,Duplicate of test case at index {index} in pytest.mark.parametrize,üõ†Ô∏è,PT
PT015,pytest-assert-always-false,"Assertion always fails, replace with pytest.fail()",,PT
PT016,pytest-fail-without-message,No message passed to pytest.fail(),,PT
PT017,pytest-assert-in-except,"Found assertion on exception {name} in except block, use pytest.raises() instead",,PT
PT018,pytest-composite-assertion,Assertion should be broken down into multiple parts,üõ†Ô∏è,PT
PT019,pytest-fixture-param-without-value,"Fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead",,PT
PT020,pytest-deprecated-yield-fixture,"@pytest.yield_fixture is deprecated, use @pytest.fixture",,PT
PT021,pytest-fixture-finalizer-callback,Use yield instead of request.addfinalizer,,PT
PT022,pytest-useless-yield-fixture,"No teardown in fixture {name}, use return instead of yield",üõ†Ô∏è,PT
PT023,pytest-incorrect-mark-parentheses-style,Use @pytest.mark.{mark_name}{expected_parens} over @pytest.mark.{mark_name}{actual_parens},üõ†Ô∏è,PT
PT024,pytest-unnecessary-asyncio-mark-on-fixture,pytest.mark.asyncio is unnecessary for fixtures,üõ†Ô∏è,PT
PT025,pytest-erroneous-use-fixtures-on-fixture,pytest.mark.usefixtures has no effect on fixtures,üõ†Ô∏è,PT
PT026,pytest-use-fixtures-without-parameters,Useless pytest.mark.usefixtures without parameters,üõ†Ô∏è,PT
PT027,pytest-unittest-raises-assertion,Use pytest.raises instead of unittest-style {assertion},üõ†Ô∏è,PT
PT028,pytest-parameter-with-default-argument,Test function parameter {} has default argument,,PT
PT029,pytest-warns-without-warning,Set the expected warning in pytest.warns(),üß™,PT
PT030,pytest-warns-too-broad,"pytest.warns({warning}) is too broad, set the match parameter or use a more specific warning",,PT
PT031,pytest-warns-with-multiple-statements,pytest.warns() block should contain a single simple statement,,PT
Q000,bad-quotes-inline-string,Single quotes found but double quotes preferred,üõ†Ô∏è,Q
Q001,bad-quotes-multiline-string,Single quote multiline found but double quotes preferred,üõ†Ô∏è,Q
Q002,bad-quotes-docstring,Single quote docstring found but double quotes preferred,üõ†Ô∏è,Q
Q003,avoidable-escaped-quote,Change outer quotes to avoid escaping inner quotes,üõ†Ô∏è,Q
Q004,unnecessary-escaped-quote,Unnecessary escape on inner quote character,üõ†Ô∏è,Q
RSE102,unnecessary-paren-on-raise-exception,Unnecessary parentheses on raised exception,üõ†Ô∏è,RSE
RET501,unnecessary-return-none,Do not explicitly return None in function if it is the only possible return value,üõ†Ô∏è,RET
RET502,implicit-return-value,Do not implicitly return None in function able to return non-None value,üõ†Ô∏è,RET
RET503,implicit-return,Missing explicit return at the end of function able to return non-None value,üõ†Ô∏è,RET
RET504,unnecessary-assign,Unnecessary assignment to {name} before return statement,üõ†Ô∏è,RET
RET505,superfluous-else-return,Unnecessary {branch} after return statement,üõ†Ô∏è,RET
RET506,superfluous-else-raise,Unnecessary {branch} after raise statement,üõ†Ô∏è,RET
RET507,superfluous-else-continue,Unnecessary {branch} after continue statement,üõ†Ô∏è,RET
RET508,superfluous-else-break,Unnecessary {branch} after break statement,üõ†Ô∏è,RET
SLF001,private-member-access,Private member accessed: {access},,SLF
SIM101,duplicate-isinstance-call,"Multiple isinstance calls for {name}, merge into a single call",üõ†Ô∏è,SIM
SIM102,collapsible-if,Use a single if statement instead of nested if statements,üõ†Ô∏è,SIM
SIM103,needless-bool,Return the condition {condition} directly,üõ†Ô∏è,SIM
SIM105,suppressible-exception,Use contextlib.suppress({exception}) instead of try-except-pass,üõ†Ô∏è,SIM
SIM107,return-in-try-except-finally,Don't use return in try-except and finally,,SIM
SIM108,if-else-block-instead-of-if-exp,Use ternary operator {contents} instead of if-else-block,üõ†Ô∏è,SIM
SIM109,compare-with-tuple,Use {replacement} instead of multiple equality comparisons,üõ†Ô∏è,SIM
SIM110,reimplemented-builtin,Use {replacement} instead of for loop,üõ†Ô∏è,SIM
SIM112,uncapitalized-environment-variables,Use capitalized environment variable {expected} instead of {actual},üõ†Ô∏è,SIM
SIM113,enumerate-for-loop,Use enumerate() for index variable {index} in for loop,,SIM
SIM114,if-with-same-arms,Combine if branches using logical or operator,üõ†Ô∏è,SIM
SIM115,open-file-with-context-handler,Use a context manager for opening files,,SIM
SIM116,if-else-block-instead-of-dict-lookup,Use a dictionary instead of consecutive if statements,,SIM
SIM117,multiple-with-statements,Use a single with statement with multiple contexts instead of nested with statements,üõ†Ô∏è,SIM
SIM118,in-dict-keys,Use key {operator} dict instead of key {operator} dict.keys(),üõ†Ô∏è,SIM
SIM201,negate-equal-op,Use {left} != {right} instead of not {left} == {right},üõ†Ô∏è,SIM
SIM202,negate-not-equal-op,Use {left} == {right} instead of not {left} != {right},üõ†Ô∏è,SIM
SIM208,double-negation,Use {expr} instead of not (not {expr}),üõ†Ô∏è,SIM
SIM210,if-expr-with-true-false,Remove unnecessary True if ... else False,üõ†Ô∏è,SIM
SIM211,if-expr-with-false-true,Use not ... instead of False if ... else True,üõ†Ô∏è,SIM
SIM212,if-expr-with-twisted-arms,Use {expr_else} if {expr_else} else {expr_body} instead of {expr_body} if not {expr_else} else {expr_else},üõ†Ô∏è,SIM
SIM220,expr-and-not-expr,Use False instead of {name} and not {name},üõ†Ô∏è,SIM
SIM221,expr-or-not-expr,Use True instead of {name} or not {name},üõ†Ô∏è,SIM
SIM222,expr-or-true,Use {expr} instead of {replaced},üõ†Ô∏è,SIM
SIM223,expr-and-false,Use {expr} instead of {replaced},üõ†Ô∏è,SIM
SIM300,yoda-conditions,Yoda condition detected,üõ†Ô∏è,SIM
SIM401,if-else-block-instead-of-dict-get,Use {contents} instead of an if block,üõ†Ô∏è,SIM
SIM905,split-static-string,Consider using a list literal instead of str.{},üõ†Ô∏è,SIM
SIM910,dict-get-with-none-default,Use {expected} instead of {actual},üõ†Ô∏è,SIM
SIM911,zip-dict-keys-and-values,Use {expected} instead of {actual},üõ†Ô∏è,SIM
SLOT000,no-slots-in-str-subclass,Subclasses of str should define __slots__,,SLOT
SLOT001,no-slots-in-tuple-subclass,Subclasses of tuple should define __slots__,,SLOT
SLOT002,no-slots-in-namedtuple-subclass,Subclasses of {namedtuple_kind} should define __slots__,,SLOT
TID251,banned-api,{name} is banned: {message},,TID
TID252,relative-imports,Prefer absolute imports over relative imports from parent modules,üõ†Ô∏è,TID
TID253,banned-module-level-imports,{name} is banned at the module level,,TID
TD001,invalid-todo-tag,Invalid TODO tag: {tag},,TD
TD002,missing-todo-author,Missing author in TODO; try: # TODO(<author_name>): ... or # TODO @<author_name>: ...,,TD
TD003,missing-todo-link,Missing issue link for this TODO,,TD
TD004,missing-todo-colon,Missing colon in TODO,,TD
TD005,missing-todo-description,Missing issue description after TODO,,TD
TD006,invalid-todo-capitalization,Invalid TODO capitalization: {tag} should be TODO,üõ†Ô∏è,TD
TD007,missing-space-after-todo-colon,Missing space after colon in TODO,,TD
TC001,typing-only-first-party-import,Move application import {} into a type-checking block,üõ†Ô∏è,TC
TC002,typing-only-third-party-import,Move third-party import {} into a type-checking block,üõ†Ô∏è,TC
TC003,typing-only-standard-library-import,Move standard library import {} into a type-checking block,üõ†Ô∏è,TC
TC004,runtime-import-in-type-checking-block,Move import {qualified_name} out of type-checking block. Import is used for more than type hinting.,üõ†Ô∏è,TC
TC005,empty-type-checking-block,Found empty type-checking block,üõ†Ô∏è,TC
TC006,runtime-cast-value,Add quotes to type expression in typing.cast(),üõ†Ô∏è,TC
TC007,unquoted-type-alias,Add quotes to type alias,üõ†Ô∏è,TC
TC008,quoted-type-alias,Remove quotes from type alias,üß™üõ†Ô∏è,TC
TC010,runtime-string-union,Invalid string member in X | Y-style union type,,TC
ARG001,unused-function-argument,Unused function argument: {name},,ARG
ARG002,unused-method-argument,Unused method argument: {name},,ARG
ARG003,unused-class-method-argument,Unused class method argument: {name},,ARG
ARG004,unused-static-method-argument,Unused static method argument: {name},,ARG
ARG005,unused-lambda-argument,Unused lambda argument: {name},,ARG
PTH100,os-path-abspath,os.path.abspath() should be replaced by Path.resolve(),üõ†Ô∏è,PTH
PTH101,os-chmod,os.chmod() should be replaced by Path.chmod(),üõ†Ô∏è,PTH
PTH102,os-mkdir,os.mkdir() should be replaced by Path.mkdir(),üõ†Ô∏è,PTH
PTH103,os-makedirs,os.makedirs() should be replaced by Path.mkdir(parents=True),üõ†Ô∏è,PTH
PTH104,os-rename,os.rename() should be replaced by Path.rename(),üõ†Ô∏è,PTH
PTH105,os-replace,os.replace() should be replaced by Path.replace(),üõ†Ô∏è,PTH
PTH106,os-rmdir,os.rmdir() should be replaced by Path.rmdir(),üõ†Ô∏è,PTH
PTH107,os-remove,os.remove() should be replaced by Path.unlink(),üõ†Ô∏è,PTH
PTH108,os-unlink,os.unlink() should be replaced by Path.unlink(),üõ†Ô∏è,PTH
PTH109,os-getcwd,os.getcwd() should be replaced by Path.cwd(),üõ†Ô∏è,PTH
PTH110,os-path-exists,os.path.exists() should be replaced by Path.exists(),üõ†Ô∏è,PTH
PTH111,os-path-expanduser,os.path.expanduser() should be replaced by Path.expanduser(),üõ†Ô∏è,PTH
PTH112,os-path-isdir,os.path.isdir() should be replaced by Path.is_dir(),üõ†Ô∏è,PTH
PTH113,os-path-isfile,os.path.isfile() should be replaced by Path.is_file(),üõ†Ô∏è,PTH
PTH114,os-path-islink,os.path.islink() should be replaced by Path.is_symlink(),üõ†Ô∏è,PTH
PTH115,os-readlink,os.readlink() should be replaced by Path.readlink(),üõ†Ô∏è,PTH
PTH116,os-stat,"os.stat() should be replaced by Path.stat(), Path.owner(), or Path.group()",,PTH
PTH117,os-path-isabs,os.path.isabs() should be replaced by Path.is_absolute(),üõ†Ô∏è,PTH
PTH118,os-path-join,os.{module}.join() should be replaced by Path with / operator,,PTH
PTH119,os-path-basename,os.path.basename() should be replaced by Path.name,üõ†Ô∏è,PTH
PTH120,os-path-dirname,os.path.dirname() should be replaced by Path.parent,üõ†Ô∏è,PTH
PTH121,os-path-samefile,os.path.samefile() should be replaced by Path.samefile(),üõ†Ô∏è,PTH
PTH122,os-path-splitext,"os.path.splitext() should be replaced by Path.suffix, Path.stem, and Path.parent",,PTH
PTH123,builtin-open,open() should be replaced by Path.open(),üõ†Ô∏è,PTH
PTH124,py-path,"py.path is in maintenance mode, use pathlib instead",,PTH
PTH201,path-constructor-current-directory,Do not pass the current directory explicitly to Path,üõ†Ô∏è,PTH
PTH202,os-path-getsize,os.path.getsize should be replaced by Path.stat().st_size,üõ†Ô∏è,PTH
PTH203,os-path-getatime,os.path.getatime should be replaced by Path.stat().st_atime,üõ†Ô∏è,PTH
PTH204,os-path-getmtime,os.path.getmtime should be replaced by Path.stat().st_mtime,üõ†Ô∏è,PTH
PTH205,os-path-getctime,os.path.getctime should be replaced by Path.stat().st_ctime,üõ†Ô∏è,PTH
PTH206,os-sep-split,Replace .split(os.sep) with Path.parts,,PTH
PTH207,glob,Replace {function} with Path.glob or Path.rglob,,PTH
PTH208,os-listdir,Use pathlib.Path.iterdir() instead.,,PTH
PTH210,invalid-pathlib-with-suffix,Invalid suffix passed to .with_suffix(),üõ†Ô∏è,PTH
PTH211,os-symlink,os.symlink should be replaced by Path.symlink_to,üõ†Ô∏è,PTH
FLY002,static-join-to-f-string,Consider {expression} instead of string join,üõ†Ô∏è,FLY
I001,unsorted-imports,Import block is un-sorted or un-formatted,üõ†Ô∏è,I
I002,missing-required-import,Missing required import: {name},üõ†Ô∏è,I
C901,complex-structure,{name} is too complex ({complexity} > {max_complexity}),,C
NPY001,numpy-deprecated-type-alias,"Type alias np.{type_name} is deprecated, replace with builtin type",üõ†Ô∏è,NPY
NPY002,numpy-legacy-random,Replace legacy np.random.{method_name} call with np.random.Generator,,NPY
NPY003,numpy-deprecated-function,np.{existing} is deprecated; use np.{replacement} instead,üõ†Ô∏è,NPY
NPY201,numpy2-deprecation,np.{existing} will be removed in NumPy 2.0. {migration_guide},üõ†Ô∏è,NPY
PD002,pandas-use-of-inplace-argument,inplace=True should be avoided; it has inconsistent behavior,üõ†Ô∏è,PD
PD003,pandas-use-of-dot-is-null,.isna is preferred to .isnull; functionality is equivalent,,PD
PD004,pandas-use-of-dot-not-null,.notna is preferred to .notnull; functionality is equivalent,,PD
PD007,pandas-use-of-dot-ix,.ix is deprecated; use more explicit .loc or .iloc,,PD
PD008,pandas-use-of-dot-at,"Use .loc instead of .at. If speed is important, use NumPy.",,PD
PD009,pandas-use-of-dot-iat,"Use .iloc instead of .iat. If speed is important, use NumPy.",,PD
PD010,pandas-use-of-dot-pivot-or-unstack,.pivot_table is preferred to .pivot or .unstack; provides same functionality,,PD
PD011,pandas-use-of-dot-values,Use .to_numpy() instead of .values,,PD
PD012,pandas-use-of-dot-read-table,Use .read_csv instead of .read_table to read CSV files,,PD
PD013,pandas-use-of-dot-stack,.melt is preferred to .stack; provides same functionality,,PD
PD015,pandas-use-of-pd-merge,Use .merge method instead of pd.merge function. They have equivalent functionality.,,PD
PD101,pandas-nunique-constant-series-check,Using series.nunique() for checking that a series is constant is inefficient,,PD
PD901,pandas-df-variable-name,Avoid using the generic variable name df for DataFrames,‚ùå,PD
N801,invalid-class-name,Class name {name} should use CapWords convention,,N
N802,invalid-function-name,Function name {name} should be lowercase,,N
N803,invalid-argument-name,Argument name {name} should be lowercase,,N
N804,invalid-first-argument-name-for-class-method,First argument of a class method should be named cls,üõ†Ô∏è,N
N805,invalid-first-argument-name-for-method,First argument of a method should be named self,üõ†Ô∏è,N
N806,non-lowercase-variable-in-function,Variable {name} in function should be lowercase,,N
N807,dunder-function-name,Function name should not start and end with __,,N
N811,constant-imported-as-non-constant,Constant {name} imported as non-constant {asname},,N
N812,lowercase-imported-as-non-lowercase,Lowercase {name} imported as non-lowercase {asname},,N
N813,camelcase-imported-as-lowercase,Camelcase {name} imported as lowercase {asname},,N
N814,camelcase-imported-as-constant,Camelcase {name} imported as constant {asname},,N
N815,mixed-case-variable-in-class-scope,Variable {name} in class scope should not be mixedCase,,N
N816,mixed-case-variable-in-global-scope,Variable {name} in global scope should not be mixedCase,,N
N817,camelcase-imported-as-acronym,CamelCase {name} imported as acronym {asname},,N
N818,error-suffix-on-exception-name,Exception name {name} should be named with an Error suffix,,N
N999,invalid-module-name,Invalid module name: '{name}',,N
PERF101,unnecessary-list-cast,Do not cast an iterable to list before iterating over it,üõ†Ô∏è,PERF
PERF102,incorrect-dict-iterator,When using only the {subset} of a dict use the {subset}() method,üõ†Ô∏è,PERF
PERF203,try-except-in-loop,try-except within a loop incurs performance overhead,,PERF
PERF401,manual-list-comprehension,Use {message_str} to create a transformed list,üõ†Ô∏è,PERF
PERF402,manual-list-copy,Use list or list.copy to create a copy of a list,,PERF
PERF403,manual-dict-comprehension,Use a dictionary comprehension instead of {modifier} for-loop,üõ†Ô∏è,PERF
E101,mixed-spaces-and-tabs,Indentation contains mixed spaces and tabs,,E
E111,indentation-with-invalid-multiple,Indentation is not a multiple of {indent_width},üß™,E
E112,no-indented-block,Expected an indented block,üß™,E
E113,unexpected-indentation,Unexpected indentation,üß™,E
E114,indentation-with-invalid-multiple-comment,Indentation is not a multiple of {indent_width} (comment),üß™,E
E115,no-indented-block-comment,Expected an indented block (comment),üß™,E
E116,unexpected-indentation-comment,Unexpected indentation (comment),üß™,E
E117,over-indented,Over-indented (comment),üß™,E
E201,whitespace-after-open-bracket,Whitespace after '{symbol}',üß™üõ†Ô∏è,E
E202,whitespace-before-close-bracket,Whitespace before '{symbol}',üß™üõ†Ô∏è,E
E203,whitespace-before-punctuation,Whitespace before '{symbol}',üß™üõ†Ô∏è,E
E204,whitespace-after-decorator,Whitespace after decorator,üß™üõ†Ô∏è,E
E211,whitespace-before-parameters,Whitespace before '{bracket}',üß™üõ†Ô∏è,E
E221,multiple-spaces-before-operator,Multiple spaces before operator,üß™üõ†Ô∏è,E
E222,multiple-spaces-after-operator,Multiple spaces after operator,üß™üõ†Ô∏è,E
E223,tab-before-operator,Tab before operator,üß™üõ†Ô∏è,E
E224,tab-after-operator,Tab after operator,üß™üõ†Ô∏è,E
E225,missing-whitespace-around-operator,Missing whitespace around operator,üß™üõ†Ô∏è,E
E226,missing-whitespace-around-arithmetic-operator,Missing whitespace around arithmetic operator,üß™üõ†Ô∏è,E
E227,missing-whitespace-around-bitwise-or-shift-operator,Missing whitespace around bitwise or shift operator,üß™üõ†Ô∏è,E
E228,missing-whitespace-around-modulo-operator,Missing whitespace around modulo operator,üß™üõ†Ô∏è,E
E231,missing-whitespace,Missing whitespace after {},üß™üõ†Ô∏è,E
E241,multiple-spaces-after-comma,Multiple spaces after comma,üß™üõ†Ô∏è,E
E242,tab-after-comma,Tab after comma,üß™üõ†Ô∏è,E
E251,unexpected-spaces-around-keyword-parameter-equals,Unexpected spaces around keyword / parameter equals,üß™üõ†Ô∏è,E
E252,missing-whitespace-around-parameter-equals,Missing whitespace around parameter equals,üß™üõ†Ô∏è,E
E261,too-few-spaces-before-inline-comment,Insert at least two spaces before an inline comment,üß™üõ†Ô∏è,E
E262,no-space-after-inline-comment,Inline comment should start with #,üß™üõ†Ô∏è,E
E265,no-space-after-block-comment,Block comment should start with #,üß™üõ†Ô∏è,E
E266,multiple-leading-hashes-for-block-comment,Too many leading # before block comment,üß™üõ†Ô∏è,E
E271,multiple-spaces-after-keyword,Multiple spaces after keyword,üß™üõ†Ô∏è,E
E272,multiple-spaces-before-keyword,Multiple spaces before keyword,üß™üõ†Ô∏è,E
E273,tab-after-keyword,Tab after keyword,üß™üõ†Ô∏è,E
E274,tab-before-keyword,Tab before keyword,üß™üõ†Ô∏è,E
E275,missing-whitespace-after-keyword,Missing whitespace after keyword,üß™üõ†Ô∏è,E
E301,blank-line-between-methods,"Expected {BLANK_LINES_NESTED_LEVEL:?} blank line, found 0",üß™üõ†Ô∏è,E
E302,blank-lines-top-level,"Expected {expected_blank_lines:?} blank lines, found {actual_blank_lines}",üß™üõ†Ô∏è,E
E303,too-many-blank-lines,Too many blank lines ({actual_blank_lines}),üß™üõ†Ô∏è,E
E304,blank-line-after-decorator,Blank lines found after function decorator ({lines}),üß™üõ†Ô∏è,E
E305,blank-lines-after-function-or-class,"Expected 2 blank lines after class or function definition, found ({blank_lines})",üß™üõ†Ô∏è,E
E306,blank-lines-before-nested-definition,"Expected 1 blank line before a nested definition, found 0",üß™üõ†Ô∏è,E
E401,multiple-imports-on-one-line,Multiple imports on one line,üõ†Ô∏è,E
E402,module-import-not-at-top-of-file,Module level import not at top of cell,,E
E501,line-too-long,Line too long ({width} > {limit}),,E
E502,redundant-backslash,Redundant backslash,üß™üõ†Ô∏è,E
E701,multiple-statements-on-one-line-colon,Multiple statements on one line (colon),,E
E702,multiple-statements-on-one-line-semicolon,Multiple statements on one line (semicolon),,E
E703,useless-semicolon,Statement ends with an unnecessary semicolon,üõ†Ô∏è,E
E711,none-comparison,Comparison to None should be cond is None,üõ†Ô∏è,E
E712,true-false-comparison,Avoid equality comparisons to True; use {cond}: for truth checks,üõ†Ô∏è,E
E713,not-in-test,Test for membership should be not in,üõ†Ô∏è,E
E714,not-is-test,Test for object identity should be is not,üõ†Ô∏è,E
E721,type-comparison,"Use is and is not for type comparisons, or isinstance() for isinstance checks",,E
E722,bare-except,Do not use bare except,,E
E731,lambda-assignment,"Do not assign a lambda expression, use a def",üõ†Ô∏è,E
E741,ambiguous-variable-name,Ambiguous variable name: {name},,E
E742,ambiguous-class-name,Ambiguous class name: {name},,E
E743,ambiguous-function-name,Ambiguous function name: {name},,E
E902,io-error,{message},,E
E999,syntax-error,SyntaxError,‚ùå,E
W191,tab-indentation,Indentation contains tabs,,W
W291,trailing-whitespace,Trailing whitespace,üõ†Ô∏è,W
W292,missing-newline-at-end-of-file,No newline at end of file,üõ†Ô∏è,W
W293,blank-line-with-whitespace,Blank line contains whitespace,üõ†Ô∏è,W
W391,too-many-newlines-at-end-of-file,Too many newlines at end of {domain},üß™üõ†Ô∏è,W
W505,doc-line-too-long,Doc line too long ({width} > {limit}),,W
W605,invalid-escape-sequence,Invalid escape sequence: \{ch},üõ†Ô∏è,W
DOC201,docstring-missing-returns,return is not documented in docstring,üß™,DOC
DOC202,docstring-extraneous-returns,Docstring should not have a returns section because the function doesn't return anything,üß™,DOC
DOC402,docstring-missing-yields,yield is not documented in docstring,üß™,DOC
DOC403,docstring-extraneous-yields,"Docstring has a ""Yields"" section but the function doesn't yield anything",üß™,DOC
DOC501,docstring-missing-exception,Raised exception {id} missing from docstring,üß™,DOC
DOC502,docstring-extraneous-exception,Raised exception is not explicitly raised: {id},üß™,DOC
D100,undocumented-public-module,Missing docstring in public module,,D
D101,undocumented-public-class,Missing docstring in public class,,D
D102,undocumented-public-method,Missing docstring in public method,,D
D103,undocumented-public-function,Missing docstring in public function,,D
D104,undocumented-public-package,Missing docstring in public package,,D
D105,undocumented-magic-method,Missing docstring in magic method,,D
D106,undocumented-public-nested-class,Missing docstring in public nested class,,D
D107,undocumented-public-init,Missing docstring in __init__,,D
D200,unnecessary-multiline-docstring,One-line docstring should fit on one line,üõ†Ô∏è,D
D201,blank-line-before-function,No blank lines allowed before function docstring (found {num_lines}),üõ†Ô∏è,D
D202,blank-line-after-function,No blank lines allowed after function docstring (found {num_lines}),üõ†Ô∏è,D
D203,incorrect-blank-line-before-class,1 blank line required before class docstring,üõ†Ô∏è,D
D204,incorrect-blank-line-after-class,1 blank line required after class docstring,üõ†Ô∏è,D
D205,missing-blank-line-after-summary,1 blank line required between summary line and description,üõ†Ô∏è,D
D206,docstring-tab-indentation,"Docstring should be indented with spaces, not tabs",,D
D207,under-indentation,Docstring is under-indented,üõ†Ô∏è,D
D208,over-indentation,Docstring is over-indented,üõ†Ô∏è,D
D209,new-line-after-last-paragraph,Multi-line docstring closing quotes should be on a separate line,üõ†Ô∏è,D
D210,surrounding-whitespace,No whitespaces allowed surrounding docstring text,üõ†Ô∏è,D
D211,blank-line-before-class,No blank lines allowed before class docstring,üõ†Ô∏è,D
D212,multi-line-summary-first-line,Multi-line docstring summary should start at the first line,üõ†Ô∏è,D
D213,multi-line-summary-second-line,Multi-line docstring summary should start at the second line,üõ†Ô∏è,D
D214,overindented-section,"Section is over-indented (""{name}"")",üõ†Ô∏è,D
D215,overindented-section-underline,"Section underline is over-indented (""{name}"")",üõ†Ô∏è,D
D300,triple-single-quotes,"Use triple double quotes """"""",üõ†Ô∏è,D
D301,escape-sequence-in-docstring,"Use r"""""" if any backslashes in a docstring",üõ†Ô∏è,D
D400,missing-trailing-period,First line should end with a period,üõ†Ô∏è,D
D401,non-imperative-mood,"First line of docstring should be in imperative mood: ""{first_line}""",,D
D402,signature-in-docstring,First line should not be the function's signature,,D
D403,first-word-uncapitalized,First word of the docstring should be capitalized: {} -> {},üõ†Ô∏è,D
D404,docstring-starts-with-this,"First word of the docstring should not be ""This""",,D
D405,non-capitalized-section-name,"Section name should be properly capitalized (""{name}"")",üõ†Ô∏è,D
D406,missing-new-line-after-section-name,"Section name should end with a newline (""{name}"")",üõ†Ô∏è,D
D407,missing-dashed-underline-after-section,"Missing dashed underline after section (""{name}"")",üõ†Ô∏è,D
D408,missing-section-underline-after-name,"Section underline should be in the line following the section's name (""{name}"")",üõ†Ô∏è,D
D409,mismatched-section-underline-length,"Section underline should match the length of its name (""{name}"")",üõ†Ô∏è,D
D410,no-blank-line-after-section,"Missing blank line after section (""{name}"")",üõ†Ô∏è,D
D411,no-blank-line-before-section,"Missing blank line before section (""{name}"")",üõ†Ô∏è,D
D412,blank-lines-between-header-and-content,"No blank lines allowed between a section header and its content (""{name}"")",üõ†Ô∏è,D
D413,missing-blank-line-after-last-section,"Missing blank line after last section (""{name}"")",üõ†Ô∏è,D
D414,empty-docstring-section,"Section has no content (""{name}"")",,D
D415,missing-terminal-punctuation,"First line should end with a period, question mark, or exclamation point",üõ†Ô∏è,D
D416,missing-section-name-colon,"Section name should end with a colon (""{name}"")",üõ†Ô∏è,D
D417,undocumented-param,Missing argument description in the docstring for {definition}: {name},,D
D418,overload-with-docstring,Function decorated with @overload shouldn't contain a docstring,,D
D419,empty-docstring,Docstring is empty,,D
F401,unused-import,{name} imported but unused; consider using importlib.util.find_spec to test for availability,üõ†Ô∏è,F
F402,import-shadowed-by-loop-var,Import {name} from {row} shadowed by loop variable,,F
F403,undefined-local-with-import-star,from {name} import * used; unable to detect undefined names,,F
F404,late-future-import,from __future__ imports must occur at the beginning of the file,,F
F405,undefined-local-with-import-star-usage,"{name} may be undefined, or defined from star imports",,F
F406,undefined-local-with-nested-import-star-usage,from {name} import * only allowed at module level,,F
F407,future-feature-not-defined,Future feature {name} is not defined,,F
F501,percent-format-invalid-format,%-format string has invalid format string: {message},,F
F502,percent-format-expected-mapping,%-format string expected mapping but got sequence,,F
F503,percent-format-expected-sequence,%-format string expected sequence but got mapping,,F
F504,percent-format-extra-named-arguments,%-format string has unused named argument(s): {message},üõ†Ô∏è,F
F505,percent-format-missing-argument,%-format string is missing argument(s) for placeholder(s): {message},,F
F506,percent-format-mixed-positional-and-named,%-format string has mixed positional and named placeholders,,F
F507,percent-format-positional-count-mismatch,%-format string has {wanted} placeholder(s) but {got} substitution(s),,F
F508,percent-format-star-requires-sequence,%-format string * specifier requires sequence,,F
F509,percent-format-unsupported-format-character,%-format string has unsupported format character {char},,F
F521,string-dot-format-invalid-format,.format call has invalid format string: {message},,F
F522,string-dot-format-extra-named-arguments,.format call has unused named argument(s): {message},üõ†Ô∏è,F
F523,string-dot-format-extra-positional-arguments,.format call has unused arguments at position(s): {message},üõ†Ô∏è,F
F524,string-dot-format-missing-arguments,.format call is missing argument(s) for placeholder(s): {message},,F
F525,string-dot-format-mixing-automatic,.format string mixes automatic and manual numbering,,F
F541,f-string-missing-placeholders,f-string without any placeholders,üõ†Ô∏è,F
F601,multi-value-repeated-key-literal,Dictionary key literal {name} repeated,üõ†Ô∏è,F
F602,multi-value-repeated-key-variable,Dictionary key {name} repeated,üõ†Ô∏è,F
F621,expressions-in-star-assignment,Too many expressions in star-unpacking assignment,,F
F622,multiple-starred-expressions,Two starred expressions in assignment,,F
F631,assert-tuple,"Assert test is a non-empty tuple, which is always True",,F
F632,is-literal,Use == to compare constant literals,üõ†Ô∏è,F
F633,invalid-print-syntax,Use of >> is invalid with print function,,F
F634,if-tuple,"If test is a tuple, which is always True",,F
F701,break-outside-loop,break outside loop,,F
F702,continue-outside-loop,continue not properly in loop,,F
F704,yield-outside-function,{keyword} statement outside of a function,,F
F706,return-outside-function,return statement outside of a function/method,,F
F707,default-except-not-last,An except block as not the last exception handler,,F
F722,forward-annotation-syntax-error,Syntax error in forward annotation: {parse_error},,F
F811,redefined-while-unused,Redefinition of unused {name} from {row},üõ†Ô∏è,F
F821,undefined-name,Undefined name {name}. {tip},,F
F822,undefined-export,Undefined name {name} in __all__,,F
F823,undefined-local,Local variable {name} referenced before assignment,,F
F841,unused-variable,Local variable {name} is assigned to but never used,üõ†Ô∏è,F
F842,unused-annotation,Local variable {name} is annotated but never used,,F
F901,raise-not-implemented,raise NotImplemented should be raise NotImplementedError,üõ†Ô∏è,F
PGH001,eval,No builtin eval() allowed,‚ùå,PGH
PGH002,deprecated-log-warn,warn is deprecated in favor of warning,‚ùåüõ†Ô∏è,PGH
PGH003,blanket-type-ignore,Use specific rule codes when ignoring type issues,,PGH
PGH004,blanket-noqa,Use specific rule codes when using noqa,üõ†Ô∏è,PGH
PGH005,invalid-mock-access,Mock method should be called: {name},,PGH
PLC0105,type-name-incorrect-variance,"{kind} name ""{param_name}"" does not reflect its {variance}; consider renaming it to ""{replacement_name}""",,PLC
PLC0131,type-bivariance,{kind} cannot be both covariant and contravariant,,PLC
PLC0132,type-param-name-mismatch,{kind} name {param_name} does not match assigned variable name {var_name},,PLC
PLC0205,single-string-slots,Class __slots__ should be a non-string iterable,,PLC
PLC0206,dict-index-missing-items,Extracting value from dictionary without calling .items(),,PLC
PLC0207,missing-maxsplit-arg,"Replace with {suggested_split_type}(..., maxsplit=1).",üß™üõ†Ô∏è,PLC
PLC0208,iteration-over-set,Use a sequence type instead of a set when iterating over values,üõ†Ô∏è,PLC
PLC0414,useless-import-alias,Import alias does not rename original package,üõ†Ô∏è,PLC
PLC0415,import-outside-top-level,import should be at the top-level of a file,,PLC
PLC1802,len-test,len({expression}) used as condition without comparison,üõ†Ô∏è,PLC
PLC1901,compare-to-empty-string,{existing} can be simplified to {replacement} as an empty string is falsey,üß™,PLC
PLC2401,non-ascii-name,{kind} name {name} contains a non-ASCII character,,PLC
PLC2403,non-ascii-import-name,Module alias {name} contains a non-ASCII character,,PLC
PLC2701,import-private-name,Private name import {name} from external module {module},üß™,PLC
PLC2801,unnecessary-dunder-call,Unnecessary dunder call to {method}. {replacement}.,üß™üõ†Ô∏è,PLC
PLC3002,unnecessary-direct-lambda-call,Lambda expression called directly. Execute the expression inline instead.,,PLC
PLE0100,yield-in-init,__init__ method is a generator,,PLE
PLE0101,return-in-init,Explicit return in __init__,,PLE
PLE0115,nonlocal-and-global,Name {name} is both nonlocal and global,,PLE
PLE0116,continue-in-finally,continue not supported inside finally clause,,PLE
PLE0117,nonlocal-without-binding,Nonlocal name {name} found without binding,,PLE
PLE0118,load-before-global-declaration,Name {name} is used prior to global declaration on {row},,PLE
PLE0237,non-slot-assignment,Attribute {name} is not defined in class's __slots__,,PLE
PLE0241,duplicate-bases,Duplicate base {base} for class {class},üõ†Ô∏è,PLE
PLE0302,unexpected-special-method-signature,"The special method {} expects {}, {} {} given",,PLE
PLE0303,invalid-length-return-type,__len__ does not return a non-negative integer,,PLE
PLE0304,invalid-bool-return-type,__bool__ does not return bool,üß™,PLE
PLE0305,invalid-index-return-type,__index__ does not return an integer,,PLE
PLE0307,invalid-str-return-type,__str__ does not return str,,PLE
PLE0308,invalid-bytes-return-type,__bytes__ does not return bytes,,PLE
PLE0309,invalid-hash-return-type,__hash__ does not return an integer,,PLE
PLE0604,invalid-all-object,"Invalid object in __all__, must contain only strings",,PLE
PLE0605,invalid-all-format,"Invalid format for __all__, must be tuple or list",,PLE
PLE0643,potential-index-error,Expression is likely to raise IndexError,,PLE
PLE0704,misplaced-bare-raise,Bare raise statement is not inside an exception handler,,PLE
PLE1132,repeated-keyword-argument,Repeated keyword argument: {duplicate_keyword},,PLE
PLE1141,dict-iter-missing-items,Unpacking a dictionary in iteration without calling .items(),üß™üõ†Ô∏è,PLE
PLE1142,await-outside-async,await should be used within an async function,,PLE
PLE1205,logging-too-many-args,Too many arguments for logging format string,,PLE
PLE1206,logging-too-few-args,Not enough arguments for logging format string,,PLE
PLE1300,bad-string-format-character,Unsupported format character '{format_char}',,PLE
PLE1307,bad-string-format-type,Format type does not match argument type,,PLE
PLE1310,bad-str-strip-call,String {strip} call contains duplicate characters (did you mean {removal}?),,PLE
PLE1507,invalid-envvar-value,Invalid type for initial os.getenv argument; expected str,,PLE
PLE1519,singledispatch-method,@singledispatch decorator should not be used on methods,üõ†Ô∏è,PLE
PLE1520,singledispatchmethod-function,@singledispatchmethod decorator should not be used on non-method functions,üõ†Ô∏è,PLE
PLE1700,yield-from-in-async-function,yield from statement in async function; use async for instead,,PLE
PLE2502,bidirectional-unicode,Contains control characters that can permit obfuscated code,,PLE
PLE2510,invalid-character-backspace,"Invalid unescaped character backspace, use ""\b"" instead",üõ†Ô∏è,PLE
PLE2512,invalid-character-sub,"Invalid unescaped character SUB, use ""\x1a"" instead",üõ†Ô∏è,PLE
PLE2513,invalid-character-esc,"Invalid unescaped character ESC, use ""\x1b"" instead",üõ†Ô∏è,PLE
PLE2514,invalid-character-nul,"Invalid unescaped character NUL, use ""\0"" instead",üõ†Ô∏è,PLE
PLE2515,invalid-character-zero-width-space,"Invalid unescaped character zero-width-space, use ""\u200B"" instead",üõ†Ô∏è,PLE
PLE4703,modified-iterating-set,Iterated set {name} is modified within the for loop,üß™üõ†Ô∏è,PLE
PLR0124,comparison-with-itself,"Name compared with itself, consider replacing {actual}",,PLR
PLR0133,comparison-of-constant,"Two constants compared in a comparison, consider replacing {left_constant} {op} {right_constant}",,PLR
PLR0202,no-classmethod-decorator,Class method defined without decorator,üß™üõ†Ô∏è,PLR
PLR0203,no-staticmethod-decorator,Static method defined without decorator,üß™üõ†Ô∏è,PLR
PLR0206,property-with-parameters,Cannot have defined parameters for properties,,PLR
PLR0402,manual-from-import,Use from {module} import {name} in lieu of alias,üõ†Ô∏è,PLR
PLR0904,too-many-public-methods,Too many public methods ({methods} > {max_methods}),üß™,PLR
PLR0911,too-many-return-statements,Too many return statements ({returns} > {max_returns}),,PLR
PLR0912,too-many-branches,Too many branches ({branches} > {max_branches}),,PLR
PLR0913,too-many-arguments,Too many arguments in function definition ({c_args} > {max_args}),,PLR
PLR0914,too-many-locals,Too many local variables ({current_amount}/{max_amount}),üß™,PLR
PLR0915,too-many-statements,Too many statements ({statements} > {max_statements}),,PLR
PLR0916,too-many-boolean-expressions,Too many Boolean expressions ({expressions} > {max_expressions}),üß™,PLR
PLR0917,too-many-positional-arguments,Too many positional arguments ({c_pos}/{max_pos}),üß™,PLR
PLR1701,repeated-isinstance-calls,Merge isinstance calls: {expression},‚ùåüõ†Ô∏è,PLR
PLR1702,too-many-nested-blocks,Too many nested blocks ({nested_blocks} > {max_nested_blocks}),üß™,PLR
PLR1704,redefined-argument-from-local,Redefining argument with the local name {name},,PLR
PLR1706,and-or-ternary,Consider using if-else expression,‚ùå,PLR
PLR1711,useless-return,Useless return statement at end of function,üõ†Ô∏è,PLR
PLR1714,repeated-equality-comparison,Consider merging multiple comparisons: {expression}. Use a set if the elements are hashable.,üõ†Ô∏è,PLR
PLR1716,boolean-chained-comparison,Contains chained boolean comparison that can be simplified,üõ†Ô∏è,PLR
PLR1722,sys-exit-alias,Use sys.exit() instead of {name},üõ†Ô∏è,PLR
PLR1730,if-stmt-min-max,Replace if statement with {replacement},üõ†Ô∏è,PLR
PLR1733,unnecessary-dict-index-lookup,Unnecessary lookup of dictionary value by key,üõ†Ô∏è,PLR
PLR1736,unnecessary-list-index-lookup,List index lookup in enumerate() loop,üõ†Ô∏è,PLR
PLR2004,magic-value-comparison,"Magic value used in comparison, consider replacing {value} with a constant variable",,PLR
PLR2044,empty-comment,Line with empty comment,üõ†Ô∏è,PLR
PLR5501,collapsible-else-if,"Use elif instead of else then if, to reduce indentation",üõ†Ô∏è,PLR
PLR6104,non-augmented-assignment,Use {operator} to perform an augmented assignment directly,üß™üõ†Ô∏è,PLR
PLR6201,literal-membership,Use a set literal when testing for membership,üß™üõ†Ô∏è,PLR
PLR6301,no-self-use,"Method {method_name} could be a function, class method, or static method",üß™,PLR
PLW0108,unnecessary-lambda,Lambda may be unnecessary; consider inlining inner function,üß™üõ†Ô∏è,PLW
PLW0120,useless-else-on-loop,else clause on loop without a break statement; remove the else and dedent its contents,üõ†Ô∏è,PLW
PLW0127,self-assigning-variable,Self-assignment of variable {name},,PLW
PLW0128,redeclared-assigned-name,Redeclared variable {name} in assignment,,PLW
PLW0129,assert-on-string-literal,Asserting on an empty string literal will never pass,,PLW
PLW0131,named-expr-without-context,Named expression used without context,,PLW
PLW0133,useless-exception-statement,Missing raise statement on exception,üõ†Ô∏è,PLW
PLW0177,nan-comparison,Comparing against a NaN value; use math.isnan instead,,PLW
PLW0211,bad-staticmethod-argument,First argument of a static method should not be named {argument_name},,PLW
PLW0244,redefined-slots-in-subclass,Slot {slot_name} redefined from base class {base},üß™,PLW
PLW0245,super-without-brackets,super call is missing parentheses,üõ†Ô∏è,PLW
PLW0406,import-self,Module {name} imports itself,,PLW
PLW0602,global-variable-not-assigned,Using global for {name} but no assignment is done,,PLW
PLW0603,global-statement,Using the global statement to update {name} is discouraged,,PLW
PLW0604,global-at-module-level,global at module level is redundant,,PLW
PLW0642,self-or-cls-assignment,Reassigned {} variable in {method_type} method,,PLW
PLW0711,binary-op-exception,Exception to catch is the result of a binary and operation,,PLW
PLW1501,bad-open-mode,{mode} is not a valid mode for open,,PLW
PLW1507,shallow-copy-environ,Shallow copy of os.environ via copy.copy(os.environ),üõ†Ô∏è,PLW
PLW1508,invalid-envvar-default,Invalid type for environment variable default; expected str or None,,PLW
PLW1509,subprocess-popen-preexec-fn,preexec_fn argument is unsafe when using threads,,PLW
PLW1510,subprocess-run-without-check,subprocess.run without explicit check argument,üõ†Ô∏è,PLW
PLW1514,unspecified-encoding,{function_name} in text mode without explicit encoding argument,üß™üõ†Ô∏è,PLW
PLW1641,eq-without-hash,Object does not implement __hash__ method,,PLW
PLW2101,useless-with-lock,Threading lock directly created in with statement has no effect,,PLW
PLW2901,redefined-loop-name,Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target,,PLW
PLW3201,bad-dunder-method-name,Dunder method {name} has no special meaning in Python 3,üß™,PLW
PLW3301,nested-min-max,Nested {func} calls can be flattened,üõ†Ô∏è,PLW
UP001,useless-metaclass-type,__metaclass__ = type is implied,üõ†Ô∏è,UP
UP003,type-of-primitive,Use {} instead of type(...),üõ†Ô∏è,UP
UP004,useless-object-inheritance,Class {name} inherits from object,üõ†Ô∏è,UP
UP005,deprecated-unittest-alias,"{alias} is deprecated, use {target}",üõ†Ô∏è,UP
UP006,non-pep585-annotation,Use {to} instead of {from} for type annotation,üõ†Ô∏è,UP
UP007,non-pep604-annotation-union,Use X | Y for type annotations,üõ†Ô∏è,UP
UP008,super-call-with-parameters,"Use super() instead of super(__class__, self)",üõ†Ô∏è,UP
UP009,utf8-encoding-declaration,UTF-8 encoding declaration is unnecessary,üõ†Ô∏è,UP
UP010,unnecessary-future-import,Unnecessary __future__ import {import} for target Python version,üõ†Ô∏è,UP
UP011,lru-cache-without-parameters,Unnecessary parentheses to functools.lru_cache,üõ†Ô∏è,UP
UP012,unnecessary-encode-utf8,Unnecessary call to encode as UTF-8,üõ†Ô∏è,UP
UP013,convert-typed-dict-functional-to-class,Convert {name} from TypedDict functional to class syntax,üõ†Ô∏è,UP
UP014,convert-named-tuple-functional-to-class,Convert {name} from NamedTuple functional to class syntax,üõ†Ô∏è,UP
UP015,redundant-open-modes,Unnecessary mode argument,üõ†Ô∏è,UP
UP017,datetime-timezone-utc,Use datetime.UTC alias,üõ†Ô∏è,UP
UP018,native-literals,Unnecessary {literal_type} call (rewrite as a literal),üõ†Ô∏è,UP
UP019,typing-text-str-alias,"typing.Text is deprecated, use str",üõ†Ô∏è,UP
UP020,open-alias,Use builtin open,üõ†Ô∏è,UP
UP021,replace-universal-newlines,"universal_newlines is deprecated, use text",üõ†Ô∏è,UP
UP022,replace-stdout-stderr,Prefer capture_output over sending stdout and stderr to PIPE,üõ†Ô∏è,UP
UP023,deprecated-c-element-tree,"cElementTree is deprecated, use ElementTree",üõ†Ô∏è,UP
UP024,os-error-alias,Replace aliased errors with OSError,üõ†Ô∏è,UP
UP025,unicode-kind-prefix,Remove unicode literals from strings,üõ†Ô∏è,UP
UP026,deprecated-mock-import,"mock is deprecated, use unittest.mock",üõ†Ô∏è,UP
UP027,unpacked-list-comprehension,Replace unpacked list comprehension with a generator expression,‚ùå,UP
UP028,yield-in-for-loop,Replace yield over for loop with yield from,üõ†Ô∏è,UP
UP029,unnecessary-builtin-import,Unnecessary builtin import: {import},üõ†Ô∏è,UP
UP030,format-literals,Use implicit references for positional format fields,üõ†Ô∏è,UP
UP031,printf-string-formatting,Use format specifiers instead of percent format,üõ†Ô∏è,UP
UP032,f-string,Use f-string instead of format call,üõ†Ô∏è,UP
UP033,lru-cache-with-maxsize-none,Use @functools.cache instead of @functools.lru_cache(maxsize=None),üõ†Ô∏è,UP
UP034,extraneous-parentheses,Avoid extraneous parentheses,üõ†Ô∏è,UP
UP035,deprecated-import,Import from {target} instead: {names},üõ†Ô∏è,UP
UP036,outdated-version-block,Version block is outdated for minimum Python version,üõ†Ô∏è,UP
UP037,quoted-annotation,Remove quotes from type annotation,üõ†Ô∏è,UP
UP038,non-pep604-isinstance,"Use X | Y in {} call instead of (X, Y)",‚ùåüõ†Ô∏è,UP
UP039,unnecessary-class-parentheses,Unnecessary parentheses after class definition,üõ†Ô∏è,UP
UP040,non-pep695-type-alias,Type alias {name} uses {type_alias_method} instead of the type keyword,üõ†Ô∏è,UP
UP041,timeout-error-alias,Replace aliased errors with TimeoutError,üõ†Ô∏è,UP
UP042,replace-str-enum,Class {name} inherits from both str and enum.Enum,üß™üõ†Ô∏è,UP
UP043,unnecessary-default-type-args,Unnecessary default type arguments,üõ†Ô∏è,UP
UP044,non-pep646-unpack,Use * for unpacking,üõ†Ô∏è,UP
UP045,non-pep604-annotation-optional,Use X | None for type annotations,üõ†Ô∏è,UP
UP046,non-pep695-generic-class,Generic class {name} uses Generic subclass instead of type parameters,üõ†Ô∏è,UP
UP047,non-pep695-generic-function,Generic function {name} should use type parameters,üõ†Ô∏è,UP
UP049,private-type-parameter,Generic {} uses private type parameters,üõ†Ô∏è,UP
UP050,useless-class-metaclass-type,"Class {name} uses metaclass=type, which is redundant",üõ†Ô∏è,UP
FURB101,read-whole-file,open and read should be replaced by Path({filename}).{suggestion},üß™,FURB
FURB103,write-whole-file,open and write should be replaced by Path({filename}).{suggestion},üß™,FURB
FURB105,print-empty-string,Unnecessary empty string passed to print,üõ†Ô∏è,FURB
FURB110,if-exp-instead-of-or-operator,Replace ternary if expression with or operator,üß™üõ†Ô∏è,FURB
FURB113,repeated-append,Use {suggestion} instead of repeatedly calling {name}.append(),üß™üõ†Ô∏è,FURB
FURB116,f-string-number-format,Replace {function_name} call with {display},üõ†Ô∏è,FURB
FURB118,reimplemented-operator,Use operator.{operator} instead of defining a {target},üß™üõ†Ô∏è,FURB
FURB122,for-loop-writes,Use of {}.write in a for loop,üõ†Ô∏è,FURB
FURB129,readlines-in-for,"Instead of calling readlines(), iterate over file object directly",üõ†Ô∏è,FURB
FURB131,delete-full-slice,Prefer clear over deleting a full slice,üß™üõ†Ô∏è,FURB
FURB132,check-and-remove-from-set,Use {suggestion} instead of check and remove,üõ†Ô∏è,FURB
FURB136,if-expr-min-max,Replace if expression with {min_max} call,üõ†Ô∏è,FURB
FURB140,reimplemented-starmap,Use itertools.starmap instead of the generator,üß™üõ†Ô∏è,FURB
FURB142,for-loop-set-mutations,Use of set.{}() in a for loop,üß™üõ†Ô∏è,FURB
FURB145,slice-copy,Prefer copy method over slicing,üß™üõ†Ô∏è,FURB
FURB148,unnecessary-enumerate,"enumerate value is unused, use for x in range(len(y)) instead",üß™üõ†Ô∏è,FURB
FURB152,math-constant,Replace {literal} with math.{constant},üß™üõ†Ô∏è,FURB
FURB154,repeated-global,Use of repeated consecutive {},üß™üõ†Ô∏è,FURB
FURB156,hardcoded-string-charset,Use of hardcoded string charset,üß™üõ†Ô∏è,FURB
FURB157,verbose-decimal-constructor,Verbose expression in Decimal constructor,üõ†Ô∏è,FURB
FURB161,bit-count,Use of bin({existing}).count('1'),üõ†Ô∏è,FURB
FURB162,fromisoformat-replace-z,Unnecessary timezone replacement with zero offset,üõ†Ô∏è,FURB
FURB163,redundant-log-base,Prefer math.{log_function}({arg}) over math.log with a redundant base,üõ†Ô∏è,FURB
FURB164,unnecessary-from-float,Verbose method {method_name} in {constructor} construction,üß™üõ†Ô∏è,FURB
FURB166,int-on-sliced-str,Use of int with explicit base={base} after removing prefix,üõ†Ô∏è,FURB
FURB167,regex-flag-alias,Use of regular expression alias re.{},üõ†Ô∏è,FURB
FURB168,isinstance-type-none,Prefer is operator over isinstance to check if an object is None,üõ†Ô∏è,FURB
FURB169,type-none-comparison,"When checking against None, use {} instead of comparison with type(None)",üõ†Ô∏è,FURB
FURB171,single-item-membership-test,Membership test against single-item container,üß™üõ†Ô∏è,FURB
FURB177,implicit-cwd,Prefer Path.cwd() over Path().resolve() for current-directory lookups,üõ†Ô∏è,FURB
FURB180,meta-class-abc-meta,Use of metaclass=abc.ABCMeta to define abstract base class,üß™üõ†Ô∏è,FURB
FURB181,hashlib-digest-hex,Use of hashlib's .digest().hex(),üõ†Ô∏è,FURB
FURB187,list-reverse-copy,Use of assignment of reversed on list {name},üõ†Ô∏è,FURB
FURB188,slice-to-remove-prefix-or-suffix,Prefer str.removeprefix() over conditionally replacing with slice.,üõ†Ô∏è,FURB
FURB189,subclass-builtin,"Subclassing {subclass} can be error prone, use collections.{replacement} instead",üß™üõ†Ô∏è,FURB
FURB192,sorted-min-max,Prefer min over sorted() to compute the minimum value in a sequence,üß™üõ†Ô∏è,FURB
RUF001,ambiguous-unicode-character-string,String contains ambiguous {}. Did you mean {}?,,RUF
RUF002,ambiguous-unicode-character-docstring,Docstring contains ambiguous {}. Did you mean {}?,,RUF
RUF003,ambiguous-unicode-character-comment,Comment contains ambiguous {}. Did you mean {}?,,RUF
RUF005,collection-literal-concatenation,Consider {expression} instead of concatenation,üõ†Ô∏è,RUF
RUF006,asyncio-dangling-task,Store a reference to the return value of {expr}.{method},,RUF
RUF007,zip-instead-of-pairwise,Prefer itertools.pairwise() over zip() when iterating over successive pairs,üõ†Ô∏è,RUF
RUF008,mutable-dataclass-default,Do not use mutable default values for dataclass attributes,,RUF
RUF009,function-call-in-dataclass-default-argument,Do not perform function call {name} in dataclass defaults,,RUF
RUF010,explicit-f-string-type-conversion,Use explicit conversion flag,üõ†Ô∏è,RUF
RUF011,ruff-static-key-dict-comprehension,Dictionary comprehension uses static key,‚ùå,RUF
RUF012,mutable-class-default,Mutable class attributes should be annotated with typing.ClassVar,,RUF
RUF013,implicit-optional,PEP 484 prohibits implicit Optional,üõ†Ô∏è,RUF
RUF015,unnecessary-iterable-allocation-for-first-element,Prefer next({iterable}) over single element slice,üõ†Ô∏è,RUF
RUF016,invalid-index-type,Slice in indexed access to type {value_type} uses type {index_type} instead of an integer,,RUF
RUF017,quadratic-list-summation,Avoid quadratic list summation,üõ†Ô∏è,RUF
RUF018,assignment-in-assert,Avoid assignment expressions in assert statements,,RUF
RUF019,unnecessary-key-check,Unnecessary key check before dictionary access,üõ†Ô∏è,RUF
RUF020,never-union,{never_like} | T is equivalent to T,üõ†Ô∏è,RUF
RUF021,parenthesize-chained-operators,"Parenthesize a and b expressions when chaining and and or together, to make the precedence clear",üõ†Ô∏è,RUF
RUF022,unsorted-dunder-all,__all__ is not sorted,üõ†Ô∏è,RUF
RUF023,unsorted-dunder-slots,{}.__slots__ is not sorted,üõ†Ô∏è,RUF
RUF024,mutable-fromkeys-value,Do not pass mutable objects as values to dict.fromkeys,üõ†Ô∏è,RUF
RUF026,default-factory-kwarg,default_factory is a positional-only argument to defaultdict,üõ†Ô∏è,RUF
RUF027,missing-f-string-syntax,Possible f-string without an f prefix,üß™üõ†Ô∏è,RUF
RUF028,invalid-formatter-suppression-comment,This suppression comment is invalid because {},üõ†Ô∏è,RUF
RUF029,unused-async,"Function {name} is declared async, but doesn't await or use async features.",üß™,RUF
RUF030,assert-with-print-message,print() call in assert statement is likely unintentional,üõ†Ô∏è,RUF
RUF031,incorrectly-parenthesized-tuple-in-subscript,Use parentheses for tuples in subscripts,üß™üõ†Ô∏è,RUF
RUF032,decimal-from-float-literal,Decimal() called with float literal argument,üõ†Ô∏è,RUF
RUF033,post-init-default,__post_init__ method with argument defaults,üõ†Ô∏è,RUF
RUF034,useless-if-else,Useless if-else condition,,RUF
RUF035,ruff-unsafe-markup-use,Unsafe use of {name} detected,‚ùå,RUF
RUF036,none-not-at-end-of-union,None not at the end of the type annotation.,üß™,RUF
RUF037,unnecessary-empty-iterable-within-deque-call,Unnecessary empty iterable within a deque call,üß™üõ†Ô∏è,RUF
RUF038,redundant-bool-literal,"Literal[True, False, ...] can be replaced with Literal[...] | bool",üß™üõ†Ô∏è,RUF
RUF039,unraw-re-pattern,First argument to {call} is not raw string,üß™üõ†Ô∏è,RUF
RUF040,invalid-assert-message-literal-argument,Non-string literal used as assert message,,RUF
RUF041,unnecessary-nested-literal,Unnecessary nested Literal,üõ†Ô∏è,RUF
RUF043,pytest-raises-ambiguous-pattern,Pattern passed to match= contains metacharacters but is neither escaped nor raw,,RUF
RUF045,implicit-class-var-in-dataclass,Assignment without annotation found in dataclass body,üß™,RUF
RUF046,unnecessary-cast-to-int,Value being cast to int is already an integer,üõ†Ô∏è,RUF
RUF047,needless-else,Empty else clause,üß™üõ†Ô∏è,RUF
RUF048,map-int-version-parsing,__version__ may contain non-integral-like elements,,RUF
RUF049,dataclass-enum,An enum class should not be decorated with @dataclass,,RUF
RUF051,if-key-in-dict-del,Use pop instead of key in dict followed by del dict[key],üõ†Ô∏è,RUF
RUF052,used-dummy-variable,Local dummy variable {} is accessed,üß™üõ†Ô∏è,RUF
RUF053,class-with-mixed-type-vars,Class with type parameter list inherits from Generic,üõ†Ô∏è,RUF
RUF054,indented-form-feed,Indented form feed,üß™,RUF
RUF055,unnecessary-regular-expression,Plain string pattern passed to re function,üß™üõ†Ô∏è,RUF
RUF056,falsy-dict-get-fallback,Avoid providing a falsy fallback to dict.get() in boolean test positions. The default fallback None is already falsy.,üß™üõ†Ô∏è,RUF
RUF057,unnecessary-round,Value being rounded is already an integer,üõ†Ô∏è,RUF
RUF058,starmap-zip,itertools.starmap called on zip iterable,üõ†Ô∏è,RUF
RUF059,unused-unpacked-variable,Unpacked variable {name} is never used,üõ†Ô∏è,RUF
RUF060,in-empty-collection,Unnecessary membership test on empty collection,üß™,RUF
RUF061,legacy-form-pytest-raises,Use context-manager form of pytest.{}(),üß™üõ†Ô∏è,RUF
RUF063,access-annotations-from-class-dict,Use {suggestion} instead of __dict__ access,üß™,RUF
RUF064,non-octal-permissions,Non-octal mode,üß™üõ†Ô∏è,RUF
RUF065,logging-eager-conversion,Unnecessary {call_arg} conversion when formatting with {format_str},üß™,RUF
RUF100,unused-noqa,Unused noqa directive,üõ†Ô∏è,RUF
RUF101,redirected-noqa,{original} is a redirect to {target},üõ†Ô∏è,RUF
RUF102,invalid-rule-code,Invalid rule code in # noqa: {},üß™üõ†Ô∏è,RUF
RUF200,invalid-pyproject-toml,Failed to parse pyproject.toml: {message},,RUF
TRY002,raise-vanilla-class,Create your own exception,,TRY
TRY003,raise-vanilla-args,Avoid specifying long messages outside the exception class,,TRY
TRY004,type-check-without-type-error,Prefer TypeError exception for invalid type,,TRY
TRY200,reraise-no-cause,Use raise from to specify exception cause,‚ùå,TRY
TRY201,verbose-raise,Use raise without specifying exception name,üõ†Ô∏è,TRY
TRY203,useless-try-except,Remove exception handler; error is immediately re-raised,,TRY
TRY300,try-consider-else,Consider moving this statement to an else block,,TRY
TRY301,raise-within-try,Abstract raise to an inner function,,TRY
TRY400,error-instead-of-exception,Use logging.exception instead of logging.error,üõ†Ô∏è,TRY
TRY401,verbose-log-message,Redundant exception object included in logging.exception call,,TRY
